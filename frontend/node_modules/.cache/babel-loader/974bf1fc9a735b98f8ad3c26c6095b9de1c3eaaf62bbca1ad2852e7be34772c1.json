{"ast":null,"code":"var _jsxFileName = \"G:\\\\GroceriesProject\\\\Kitchenapp\\\\frontend\\\\src\\\\components\\\\storeorganizer\\\\storeSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreSelector = ({\n  stores,\n  selectedStore,\n  onChange\n}) => {\n  _s();\n  const [isCreating, setIsCreating] = useState(false);\n  const [newStoreName, setNewStoreName] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [editName, setEditName] = useState(\"\");\n  const handleCreateStore = async () => {\n    if (!newStoreName.trim()) return;\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/stores\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: newStoreName,\n          sections: [{\n            name: \"Produce\",\n            order: 0\n          }, {\n            name: \"Dairy\",\n            order: 1\n          }, {\n            name: \"Meat\",\n            order: 2\n          }, {\n            name: \"Bakery\",\n            order: 3\n          }, {\n            name: \"Frozen\",\n            order: 4\n          }, {\n            name: \"Canned Goods\",\n            order: 5\n          }, {\n            name: \"Uncategorized\",\n            order: 6\n          }]\n        })\n      });\n      const data = await response.json();\n      if (data.store_id) {\n        // Refresh the store list by calling the parent component's refresh function\n        // This will be handled in StoreOrganizerSimple.js\n        window.location.reload(); // Temporary solution - replace with proper state update\n      }\n      setNewStoreName(\"\");\n      setIsCreating(false);\n    } catch (error) {\n      console.error(\"Error creating store:\", error);\n      alert(\"Failed to create store. Please try again.\");\n    }\n  };\n  const handleSetDefault = async storeId => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/stores/${storeId}/set-default`, {\n        method: \"POST\"\n      });\n      if (response.ok) {\n        // Refresh stores to show updated default\n        window.location.reload(); // Temporary solution\n      }\n    } catch (error) {\n      console.error(\"Error setting default store:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"store-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"store-selector-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"store-select\",\n        children: \"Store Profile:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"store-select\",\n        value: selectedStore || \"\",\n        onChange: e => onChange(e.target.value),\n        children: stores.map(store => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: store.id,\n          children: [store.name, \" \", store.is_default ? \"(Default)\" : \"\"]\n        }, store.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"store-action-btn\",\n        onClick: () => setIsCreating(!isCreating),\n        children: isCreating ? \"Cancel\" : \"New Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), selectedStore && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"store-action-btn\",\n        onClick: () => handleSetDefault(selectedStore),\n        children: \"Set as Default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), isCreating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"store-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"New Store Name\",\n        value: newStoreName,\n        onChange: e => setNewStoreName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"store-form-btn\",\n        onClick: handleCreateStore,\n        disabled: !newStoreName.trim(),\n        children: \"Create Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(StoreSelector, \"jvOhqCeUr4ggdCArP5I8OedFR7w=\");\n_c = StoreSelector;\nexport default StoreSelector;\nvar _c;\n$RefreshReg$(_c, \"StoreSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","StoreSelector","stores","selectedStore","onChange","_s","isCreating","setIsCreating","newStoreName","setNewStoreName","isEditing","setIsEditing","editName","setEditName","handleCreateStore","trim","response","fetch","method","headers","body","JSON","stringify","name","sections","order","data","json","store_id","window","location","reload","error","console","alert","handleSetDefault","storeId","ok","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","e","target","map","store","is_default","onClick","type","placeholder","disabled","_c","$RefreshReg$"],"sources":["G:/GroceriesProject/Kitchenapp/frontend/src/components/storeorganizer/storeSelector.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst StoreSelector = ({ stores, selectedStore, onChange }) => {\r\n    const [isCreating, setIsCreating] = useState(false);\r\n    const [newStoreName, setNewStoreName] = useState(\"\");\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [editName, setEditName] = useState(\"\");\r\n\r\n    const handleCreateStore = async () => {\r\n        if (!newStoreName.trim()) return;\r\n        \r\n        try {\r\n            const response = await fetch(\"http://127.0.0.1:5000/api/stores\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    name: newStoreName,\r\n                    sections: [\r\n                        { name: \"Produce\", order: 0 },\r\n                        { name: \"Dairy\", order: 1 },\r\n                        { name: \"Meat\", order: 2 },\r\n                        { name: \"Bakery\", order: 3 },\r\n                        { name: \"Frozen\", order: 4 },\r\n                        { name: \"Canned Goods\", order: 5 },\r\n                        { name: \"Uncategorized\", order: 6 }\r\n                    ]\r\n                })\r\n            });\r\n            \r\n            const data = await response.json();\r\n            \r\n            if (data.store_id) {\r\n                // Refresh the store list by calling the parent component's refresh function\r\n                // This will be handled in StoreOrganizerSimple.js\r\n                window.location.reload(); // Temporary solution - replace with proper state update\r\n            }\r\n            \r\n            setNewStoreName(\"\");\r\n            setIsCreating(false);\r\n        } catch (error) {\r\n            console.error(\"Error creating store:\", error);\r\n            alert(\"Failed to create store. Please try again.\");\r\n        }\r\n    };\r\n\r\n    const handleSetDefault = async (storeId) => {\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:5000/api/stores/${storeId}/set-default`, {\r\n                method: \"POST\"\r\n            });\r\n            \r\n            if (response.ok) {\r\n                // Refresh stores to show updated default\r\n                window.location.reload(); // Temporary solution\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error setting default store:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"store-selector\">\r\n            <div className=\"store-selector-controls\">\r\n                <label htmlFor=\"store-select\">Store Profile:</label>\r\n                <select \r\n                    id=\"store-select\"\r\n                    value={selectedStore || \"\"}\r\n                    onChange={(e) => onChange(e.target.value)}\r\n                >\r\n                    {stores.map(store => (\r\n                        <option key={store.id} value={store.id}>\r\n                            {store.name} {store.is_default ? \"(Default)\" : \"\"}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                \r\n                <button \r\n                    className=\"store-action-btn\"\r\n                    onClick={() => setIsCreating(!isCreating)}\r\n                >\r\n                    {isCreating ? \"Cancel\" : \"New Store\"}\r\n                </button>\r\n                \r\n                {selectedStore && (\r\n                    <button \r\n                        className=\"store-action-btn\"\r\n                        onClick={() => handleSetDefault(selectedStore)}\r\n                    >\r\n                        Set as Default\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            {isCreating && (\r\n                <div className=\"store-form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"New Store Name\"\r\n                        value={newStoreName}\r\n                        onChange={(e) => setNewStoreName(e.target.value)}\r\n                    />\r\n                    <button \r\n                        className=\"store-form-btn\"\r\n                        onClick={handleCreateStore}\r\n                        disabled={!newStoreName.trim()}\r\n                    >\r\n                        Create Store\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StoreSelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}