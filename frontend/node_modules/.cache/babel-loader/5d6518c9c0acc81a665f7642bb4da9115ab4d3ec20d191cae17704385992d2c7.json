{"ast":null,"code":"var _jsxFileName = \"G:\\\\GroceriesProject\\\\Kitchenapp\\\\frontend\\\\src\\\\pages\\\\GroceryListView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroceryListView() {\n  _s();\n  const {\n    planId\n  } = useParams(); // For viewing an existing saved plan's groceries\n  const location = useLocation(); // For previewing groceries without saving\n  const navigate = useNavigate();\n  const [groceryList, setGroceryList] = useState([]);\n  const [planDetails, setPlanDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [isReordering, setIsReordering] = useState(false);\n  const [selectedStore, setSelectedStore] = useState(null);\n  useEffect(() => {\n    if (planId) {\n      // If planId is provided, fetch the grocery list for this saved plan\n      fetchGroceryListForPlan(planId);\n    } else if (location.state && location.state.meals) {\n      // If we have meals data in location state, generate grocery list without saving\n      generateGroceryListFromMeals(location.state.meals);\n      setPlanDetails({\n        name: location.state.planName || \"Unnamed Meal Plan\",\n        isTemporary: true\n      });\n    } else {\n      // No plan ID or meals data\n      setError(\"No meal plan data found.\");\n      setLoading(false);\n    }\n  }, [planId, location.state]);\n  const saveNewSectionOrder = async () => {\n    try {\n      if (!selectedStore) {\n        // Fetch store if not already selected\n        const storesResponse = await fetch('http://127.0.0.1:5000/api/stores');\n        const storesData = await storesResponse.json();\n        if (storesData.length === 0) {\n          alert('No stores available to save section order');\n          return;\n        }\n        const defaultStore = storesData.find(store => store.is_default) || storesData[0];\n        setSelectedStore(defaultStore.id);\n\n        // Pass the reordered section IDs\n        const sectionIds = groceryList.filter(section => section.sectionId) // Only include sections with IDs\n        .map(section => section.sectionId);\n        await reorderSections(defaultStore.id, sectionIds);\n      } else {\n        const sectionIds = groceryList.filter(section => section.sectionId) // Only include sections with IDs\n        .map(section => section.sectionId);\n        await reorderSections(selectedStore, sectionIds);\n      }\n      setIsReordering(false);\n      alert('Section order saved successfully!');\n    } catch (error) {\n      console.error('Error saving section order:', error);\n      alert('Failed to save section order');\n    }\n  };\n\n  // Function to make API call for reordering\n  const reorderSections = async (storeId, sectionIds) => {\n    if (!sectionIds || sectionIds.length === 0) {\n      alert('No sections to reorder');\n      return;\n    }\n    const response = await fetch(`http://127.0.0.1:5000/api/stores/${storeId}/sections/reorder`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        sections: sectionIds\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to save section order');\n    }\n  };\n\n  // Update the fetchGroceryListForPlan function\n  const fetchGroceryListForPlan = async id => {\n    try {\n      setLoading(true);\n\n      // First, fetch plan details\n      const planResponse = await fetch(`http://127.0.0.1:5000/api/weekly_plan/${id}`);\n      if (!planResponse.ok) {\n        throw new Error(\"Failed to fetch plan details\");\n      }\n      const planData = await planResponse.json();\n      setPlanDetails({\n        ...planData,\n        isTemporary: false\n      });\n\n      // Then fetch grocery list\n      const groceryResponse = await fetch(`http://127.0.0.1:5000/api/grocery_list?weekly_plan_id=${id}`);\n      if (!groceryResponse.ok) {\n        throw new Error(\"Failed to fetch grocery list\");\n      }\n      const groceryData = await groceryResponse.json();\n\n      // Sort the grocery list by section order if available\n      const sortedList = groceryData.grocery_list.sort((a, b) => {\n        // Put Uncategorized at the end\n        if (a.section === \"Uncategorized\") return 1;\n        if (b.section === \"Uncategorized\") return -1;\n\n        // Sort by order if available\n        if (a.order !== undefined && b.order !== undefined) {\n          return a.order - b.order;\n        }\n\n        // Fall back to alphabetical order\n        return a.section.localeCompare(b.section);\n      });\n      setGroceryList(sortedList || []);\n      console.log(\"Grocery list data:\", sortedList);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error fetching grocery list:\", err);\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  // Update the generateGroceryListFromMeals function similarly\n  const generateGroceryListFromMeals = async meals => {\n    try {\n      setLoading(true);\n\n      // Generate grocery list from meals array without saving the plan\n      const response = await fetch(`http://127.0.0.1:5000/api/generate_grocery_list`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          meals: meals\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to generate grocery list\");\n      }\n      const data = await response.json();\n\n      // Sort the grocery list by section order if available\n      const sortedList = data.grocery_list.sort((a, b) => {\n        // Put Uncategorized at the end\n        if (a.section === \"Uncategorized\") return 1;\n        if (b.section === \"Uncategorized\") return -1;\n\n        // Sort by order if available\n        if (a.order !== undefined && b.order !== undefined) {\n          return a.order - b.order;\n        }\n\n        // Fall back to alphabetical order\n        return a.section.localeCompare(b.section);\n      });\n      setGroceryList(sortedList || []);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error generating grocery list:\", err);\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  const printGroceryList = () => {\n    setIsPrinting(true);\n    setTimeout(() => {\n      window.print();\n      setIsPrinting(false);\n    }, 100);\n  };\n  const exportGroceryListToCSV = () => {\n    // Create CSV content\n    let csvContent = \"Section,Item,Quantity,Unit\\n\";\n    groceryList.forEach(section => {\n      section.items.forEach(item => {\n        // Clean up the item data and escape any commas\n        const sectionName = section.section.replace(/,/g, \" \");\n        const itemName = item.name ? item.name.replace(/,/g, \" \") : \"\";\n        const quantity = item.quantity || \"\";\n        const unit = item.unit ? item.unit.replace(/,/g, \" \") : \"\";\n        csvContent += `${sectionName},${itemName},${quantity},${unit}\\n`;\n      });\n    });\n\n    // Create a download link and trigger it\n    const encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", `grocery_list_${new Date().toISOString().split('T')[0]}.csv`);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const savePlan = async () => {\n    if (!(planDetails !== null && planDetails !== void 0 && planDetails.isTemporary) || !location.state || !location.state.meals) {\n      return; // Only save if this is a temporary plan\n    }\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/weekly_plan\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: planDetails.name,\n          meals: location.state.meals\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to save weekly plan\");\n      }\n      const data = await response.json();\n\n      // Update the plan details to reflect it's now saved\n      setPlanDetails({\n        ...planDetails,\n        id: data.id,\n        isTemporary: false\n      });\n      alert(\"Meal plan saved successfully!\");\n    } catch (err) {\n      console.error(\"Error saving plan:\", err);\n      alert(\"Error saving plan: \" + err.message);\n    }\n  };\n\n  // In GroceryListView.js around line 116-125, modify the handleCheckboxChange function:\n  const handleCheckboxChange = (sectionIndex, itemIndex) => {\n    console.log(`Toggling checkbox for section ${sectionIndex}, item ${itemIndex}`);\n    setGroceryList(prevList => {\n      const newList = JSON.parse(JSON.stringify(prevList)); // Deep copy to ensure state changes\n      newList[sectionIndex].items[itemIndex].checked = !newList[sectionIndex].items[itemIndex].checked;\n      console.log(`New checked state: ${newList[sectionIndex].items[itemIndex].checked}`);\n      return newList;\n    });\n  };\n\n  // Go back to weekly planner\n  const goToWeeklyPlanner = () => {\n    navigate(\"/weekly-planner\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `grocery-list-container ${isPrinting ? 'printing' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Grocery List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), planDetails && /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"plan-name\",\n        children: planDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-list-actions no-print\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: goToWeeklyPlanner,\n        children: \"\\u2190 Back to Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [planDetails && planDetails.isTemporary && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-plan-btn\",\n          onClick: savePlan,\n          children: \"Save Meal Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"organize-btn\",\n          onClick: () => navigate('/store-organizer'),\n          children: \"Organize Sections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `reorder-btn ${isReordering ? 'active' : ''}`,\n          onClick: () => setIsReordering(!isReordering),\n          children: isReordering ? 'Done Reordering' : 'Reorder Sections'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"print-btn\",\n          onClick: printGroceryList,\n          children: \"Print List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"export-btn\",\n          onClick: exportGroceryListToCSV,\n          children: \"Export to CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), isReordering && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reordering-actions no-print\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag sections to reorder them\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-order-btn\",\n        onClick: saveNewSectionOrder,\n        children: \"Save New Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading grocery list...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }, this) : isReordering ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections-container reordering\",\n      children: groceryList.map((section, sectionIndex) => section.items && section.items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grocery-section reorderable\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: section.section\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-count\",\n          children: [section.items.length, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reorder-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"move-up-btn\",\n            disabled: sectionIndex === 0,\n            onClick: () => {\n              const newList = [...groceryList];\n              [newList[sectionIndex], newList[sectionIndex - 1]] = [newList[sectionIndex - 1], newList[sectionIndex]];\n              setGroceryList(newList);\n            },\n            children: \"\\u2191\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"move-down-btn\",\n            disabled: sectionIndex === groceryList.length - 1,\n            onClick: () => {\n              const newList = [...groceryList];\n              [newList[sectionIndex], newList[sectionIndex + 1]] = [newList[sectionIndex + 1], newList[sectionIndex]];\n              setGroceryList(newList);\n            },\n            children: \"\\u2193\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 19\n        }, this)]\n      }, section.section, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this) : null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections-container\",\n      children: groceryList.map((section, sectionIndex) => section.items && section.items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grocery-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: section.section\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"grocery-items\",\n          children: section.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `grocery-item ${item.checked ? 'checked' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"item-checkbox no-print\",\n                checked: item.checked || false,\n                onChange: () => handleCheckboxChange(sectionIndex, itemIndex)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark no-print\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 27\n              }, this), \"// In the render section of GroceryListView.js, update the item details to show the source recipe\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"item-name\",\n                  children: item.name || item.main_text || \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"item-quantity\",\n                  children: item.formatted_quantity || item.fraction_str || (item.quantity !== undefined && item.unit ? `${item.quantity} ${item.unit}` : item.precision_text || \"\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 29\n                }, this), item.source && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"item-source\",\n                  children: [\"from \", item.source]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 25\n            }, this)\n          }, `${section.section}-${itemIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 19\n        }, this)]\n      }, section.section, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }, this) : null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n}\n_s(GroceryListView, \"/jrNdpqSeTAgOCsvo+CmIaMtrL0=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = GroceryListView;\nexport default GroceryListView;\nvar _c;\n$RefreshReg$(_c, \"GroceryListView\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","useNavigate","jsxDEV","_jsxDEV","GroceryListView","_s","planId","location","navigate","groceryList","setGroceryList","planDetails","setPlanDetails","loading","setLoading","error","setError","isPrinting","setIsPrinting","isReordering","setIsReordering","selectedStore","setSelectedStore","fetchGroceryListForPlan","state","meals","generateGroceryListFromMeals","name","planName","isTemporary","saveNewSectionOrder","storesResponse","fetch","storesData","json","length","alert","defaultStore","find","store","is_default","id","sectionIds","filter","section","sectionId","map","reorderSections","console","storeId","response","method","headers","body","JSON","stringify","sections","ok","Error","planResponse","planData","groceryResponse","groceryData","sortedList","grocery_list","sort","a","b","order","undefined","localeCompare","log","err","message","data","printGroceryList","setTimeout","window","print","exportGroceryListToCSV","csvContent","forEach","items","item","sectionName","replace","itemName","quantity","unit","encodedUri","encodeURI","link","document","createElement","setAttribute","Date","toISOString","split","appendChild","click","removeChild","savePlan","handleCheckboxChange","sectionIndex","itemIndex","prevList","newList","parse","checked","goToWeeklyPlanner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","onChange","main_text","formatted_quantity","fraction_str","precision_text","source","_c","$RefreshReg$"],"sources":["G:/GroceriesProject/Kitchenapp/frontend/src/pages/GroceryListView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nfunction GroceryListView() {\r\n  const { planId } = useParams(); // For viewing an existing saved plan's groceries\r\n  const location = useLocation(); // For previewing groceries without saving\r\n  const navigate = useNavigate();\r\n\r\n  const [groceryList, setGroceryList] = useState([]);\r\n  const [planDetails, setPlanDetails] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isPrinting, setIsPrinting] = useState(false);\r\n  const [isReordering, setIsReordering] = useState(false);\r\n  const [selectedStore, setSelectedStore] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (planId) {\r\n      // If planId is provided, fetch the grocery list for this saved plan\r\n      fetchGroceryListForPlan(planId);\r\n    } else if (location.state && location.state.meals) {\r\n      // If we have meals data in location state, generate grocery list without saving\r\n      generateGroceryListFromMeals(location.state.meals);\r\n      setPlanDetails({\r\n        name: location.state.planName || \"Unnamed Meal Plan\",\r\n        isTemporary: true\r\n      });\r\n    } else {\r\n      // No plan ID or meals data\r\n      setError(\"No meal plan data found.\");\r\n      setLoading(false);\r\n    }\r\n  }, [planId, location.state]);\r\n\r\n  const saveNewSectionOrder = async () => {\r\n    try {\r\n      if (!selectedStore) {\r\n        // Fetch store if not already selected\r\n        const storesResponse = await fetch('http://127.0.0.1:5000/api/stores');\r\n        const storesData = await storesResponse.json();\r\n\r\n        if (storesData.length === 0) {\r\n          alert('No stores available to save section order');\r\n          return;\r\n        }\r\n\r\n        const defaultStore = storesData.find(store => store.is_default) || storesData[0];\r\n        setSelectedStore(defaultStore.id);\r\n\r\n        // Pass the reordered section IDs\r\n        const sectionIds = groceryList\r\n          .filter(section => section.sectionId) // Only include sections with IDs\r\n          .map(section => section.sectionId);\r\n        await reorderSections(defaultStore.id, sectionIds);\r\n      } else {\r\n        const sectionIds = groceryList\r\n          .filter(section => section.sectionId) // Only include sections with IDs\r\n          .map(section => section.sectionId);\r\n        await reorderSections(selectedStore, sectionIds);\r\n      }\r\n\r\n      setIsReordering(false);\r\n      alert('Section order saved successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving section order:', error);\r\n      alert('Failed to save section order');\r\n    }\r\n  };\r\n\r\n  // Function to make API call for reordering\r\n  const reorderSections = async (storeId, sectionIds) => {\r\n    if (!sectionIds || sectionIds.length === 0) {\r\n      alert('No sections to reorder');\r\n      return;\r\n    }\r\n\r\n    const response = await fetch(`http://127.0.0.1:5000/api/stores/${storeId}/sections/reorder`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        sections: sectionIds\r\n      })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to save section order');\r\n    }\r\n  };\r\n\r\n  // Update the fetchGroceryListForPlan function\r\n  const fetchGroceryListForPlan = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // First, fetch plan details\r\n      const planResponse = await fetch(`http://127.0.0.1:5000/api/weekly_plan/${id}`);\r\n      if (!planResponse.ok) {\r\n        throw new Error(\"Failed to fetch plan details\");\r\n      }\r\n\r\n      const planData = await planResponse.json();\r\n      setPlanDetails({\r\n        ...planData,\r\n        isTemporary: false\r\n      });\r\n\r\n      // Then fetch grocery list\r\n      const groceryResponse = await fetch(`http://127.0.0.1:5000/api/grocery_list?weekly_plan_id=${id}`);\r\n      if (!groceryResponse.ok) {\r\n        throw new Error(\"Failed to fetch grocery list\");\r\n      }\r\n\r\n      const groceryData = await groceryResponse.json();\r\n\r\n      // Sort the grocery list by section order if available\r\n      const sortedList = groceryData.grocery_list.sort((a, b) => {\r\n        // Put Uncategorized at the end\r\n        if (a.section === \"Uncategorized\") return 1;\r\n        if (b.section === \"Uncategorized\") return -1;\r\n\r\n        // Sort by order if available\r\n        if (a.order !== undefined && b.order !== undefined) {\r\n          return a.order - b.order;\r\n        }\r\n\r\n        // Fall back to alphabetical order\r\n        return a.section.localeCompare(b.section);\r\n      });\r\n\r\n      setGroceryList(sortedList || []);\r\n      console.log(\"Grocery list data:\", sortedList);\r\n      setLoading(false);\r\n\r\n    } catch (err) {\r\n      console.error(\"Error fetching grocery list:\", err);\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update the generateGroceryListFromMeals function similarly\r\n  const generateGroceryListFromMeals = async (meals) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Generate grocery list from meals array without saving the plan\r\n      const response = await fetch(`http://127.0.0.1:5000/api/generate_grocery_list`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          meals: meals\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to generate grocery list\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // Sort the grocery list by section order if available\r\n      const sortedList = data.grocery_list.sort((a, b) => {\r\n        // Put Uncategorized at the end\r\n        if (a.section === \"Uncategorized\") return 1;\r\n        if (b.section === \"Uncategorized\") return -1;\r\n\r\n        // Sort by order if available\r\n        if (a.order !== undefined && b.order !== undefined) {\r\n          return a.order - b.order;\r\n        }\r\n\r\n        // Fall back to alphabetical order\r\n        return a.section.localeCompare(b.section);\r\n      });\r\n\r\n      setGroceryList(sortedList || []);\r\n      setLoading(false);\r\n\r\n    } catch (err) {\r\n      console.error(\"Error generating grocery list:\", err);\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const printGroceryList = () => {\r\n    setIsPrinting(true);\r\n    setTimeout(() => {\r\n      window.print();\r\n      setIsPrinting(false);\r\n    }, 100);\r\n  };\r\n\r\n  const exportGroceryListToCSV = () => {\r\n    // Create CSV content\r\n    let csvContent = \"Section,Item,Quantity,Unit\\n\";\r\n\r\n    groceryList.forEach(section => {\r\n      section.items.forEach(item => {\r\n        // Clean up the item data and escape any commas\r\n        const sectionName = section.section.replace(/,/g, \" \");\r\n        const itemName = item.name ? item.name.replace(/,/g, \" \") : \"\";\r\n        const quantity = item.quantity || \"\";\r\n        const unit = item.unit ? item.unit.replace(/,/g, \" \") : \"\";\r\n\r\n        csvContent += `${sectionName},${itemName},${quantity},${unit}\\n`;\r\n      });\r\n    });\r\n\r\n    // Create a download link and trigger it\r\n    const encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", `grocery_list_${new Date().toISOString().split('T')[0]}.csv`);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const savePlan = async () => {\r\n    if (!planDetails?.isTemporary || !location.state || !location.state.meals) {\r\n      return; // Only save if this is a temporary plan\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/api/weekly_plan\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          name: planDetails.name,\r\n          meals: location.state.meals\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to save weekly plan\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // Update the plan details to reflect it's now saved\r\n      setPlanDetails({\r\n        ...planDetails,\r\n        id: data.id,\r\n        isTemporary: false\r\n      });\r\n\r\n      alert(\"Meal plan saved successfully!\");\r\n\r\n    } catch (err) {\r\n      console.error(\"Error saving plan:\", err);\r\n      alert(\"Error saving plan: \" + err.message);\r\n    }\r\n  };\r\n\r\n  // In GroceryListView.js around line 116-125, modify the handleCheckboxChange function:\r\n  const handleCheckboxChange = (sectionIndex, itemIndex) => {\r\n    console.log(`Toggling checkbox for section ${sectionIndex}, item ${itemIndex}`);\r\n\r\n    setGroceryList(prevList => {\r\n      const newList = JSON.parse(JSON.stringify(prevList)); // Deep copy to ensure state changes\r\n      newList[sectionIndex].items[itemIndex].checked =\r\n        !newList[sectionIndex].items[itemIndex].checked;\r\n\r\n      console.log(`New checked state: ${newList[sectionIndex].items[itemIndex].checked}`);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  // Go back to weekly planner\r\n  const goToWeeklyPlanner = () => {\r\n    navigate(\"/weekly-planner\");\r\n  };\r\n\r\n  return (\r\n    <div className={`grocery-list-container ${isPrinting ? 'printing' : ''}`}>\r\n      <div className=\"grocery-list-header\">\r\n        <h1>Grocery List</h1>\r\n        {planDetails && (\r\n          <h2 className=\"plan-name\">{planDetails.name}</h2>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"grocery-list-actions no-print\">\r\n        <button className=\"back-btn\" onClick={goToWeeklyPlanner}>\r\n          ← Back to Planner\r\n        </button>\r\n\r\n        <div className=\"action-buttons\">\r\n          {planDetails && planDetails.isTemporary && (\r\n            <button className=\"save-plan-btn\" onClick={savePlan}>\r\n              Save Meal Plan\r\n            </button>\r\n          )}\r\n\r\n          <button\r\n            className=\"organize-btn\"\r\n            onClick={() => navigate('/store-organizer')}>\r\n            Organize Sections\r\n          </button>\r\n\r\n          {/* Add this new reorder button */}\r\n          <button\r\n            className={`reorder-btn ${isReordering ? 'active' : ''}`}\r\n            onClick={() => setIsReordering(!isReordering)}>\r\n            {isReordering ? 'Done Reordering' : 'Reorder Sections'}\r\n          </button>\r\n\r\n          <button className=\"print-btn\" onClick={printGroceryList}>\r\n            Print List\r\n          </button>\r\n\r\n          <button className=\"export-btn\" onClick={exportGroceryListToCSV}>\r\n            Export to CSV\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Show save button when reordering */}\r\n      {isReordering && (\r\n        <div className=\"reordering-actions no-print\">\r\n          <p>Drag sections to reorder them</p>\r\n          <button className=\"save-order-btn\" onClick={saveNewSectionOrder}>\r\n            Save New Order\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {loading ? (\r\n        <div className=\"loading\">Loading grocery list...</div>\r\n      ) : error ? (\r\n        <div className=\"error-message\">{error}</div>\r\n      ) : (\r\n        isReordering ? (\r\n          <div className=\"sections-container reordering\">\r\n            {groceryList.map((section, sectionIndex) => (\r\n              section.items && section.items.length > 0 ? (\r\n                <div key={section.section} className=\"grocery-section reorderable\">\r\n                  <h3 className=\"section-title\">{section.section}</h3>\r\n                  <div className=\"item-count\">{section.items.length} items</div>\r\n                  <div className=\"reorder-buttons\">\r\n                    <button\r\n                      className=\"move-up-btn\"\r\n                      disabled={sectionIndex === 0}\r\n                      onClick={() => {\r\n                        const newList = [...groceryList];\r\n                        [newList[sectionIndex], newList[sectionIndex - 1]] =\r\n                          [newList[sectionIndex - 1], newList[sectionIndex]];\r\n                        setGroceryList(newList);\r\n                      }}\r\n                    >\r\n                      ↑\r\n                    </button>\r\n                    <button\r\n                      className=\"move-down-btn\"\r\n                      disabled={sectionIndex === groceryList.length - 1}\r\n                      onClick={() => {\r\n                        const newList = [...groceryList];\r\n                        [newList[sectionIndex], newList[sectionIndex + 1]] =\r\n                          [newList[sectionIndex + 1], newList[sectionIndex]];\r\n                        setGroceryList(newList);\r\n                      }}\r\n                    >\r\n                      ↓\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : null\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"sections-container\">\r\n            {groceryList.map((section, sectionIndex) => (\r\n              section.items && section.items.length > 0 ? (\r\n                <div key={section.section} className=\"grocery-section\">\r\n                  <h3 className=\"section-title\">{section.section}</h3>\r\n                  <ul className=\"grocery-items\">\r\n                    {section.items.map((item, itemIndex) => (\r\n                      <li\r\n                        key={`${section.section}-${itemIndex}`}\r\n                        className={`grocery-item ${item.checked ? 'checked' : ''}`}\r\n                      >\r\n                        <label className=\"checkbox-container\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"item-checkbox no-print\"\r\n                            checked={item.checked || false}\r\n                            onChange={() => handleCheckboxChange(sectionIndex, itemIndex)}\r\n                          />\r\n                          <span className=\"checkmark no-print\"></span>\r\n                          // In the render section of GroceryListView.js, update the item details to show the source recipe\r\n                          <div className=\"item-details\">\r\n                            <span className=\"item-name\">\r\n                              {item.name || item.main_text || \"\"}\r\n                            </span>\r\n                            <span className=\"item-quantity\">\r\n                              {item.formatted_quantity || item.fraction_str ||\r\n                                (item.quantity !== undefined && item.unit ?\r\n                                  `${item.quantity} ${item.unit}` :\r\n                                  (item.precision_text || \"\"))}\r\n                            </span>\r\n                            {item.source && (\r\n                              <span className=\"item-source\">\r\n                                from {item.source}\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              ) : null\r\n            ))}\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroceryListView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}