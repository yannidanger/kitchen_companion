{"ast":null,"code":"var _jsxFileName = \"G:\\\\GroceriesProject\\\\Kitchenapp\\\\frontend\\\\src\\\\pages\\\\RecipeTreeView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeTreeView({\n  recipe,\n  initialExpanded = false\n}) {\n  _s();\n  // Local state for expanded/collapsed state of this recipe\n  const [expanded, setExpanded] = useState(initialExpanded);\n\n  // If no recipe, render nothing\n  if (!recipe) return null;\n\n  // Determine if this recipe has sub-recipes\n  const hasSubRecipes = recipe.components && recipe.components.length > 0;\n\n  // Click handler for toggling expansion\n  const toggleExpand = () => {\n    setExpanded(!expanded);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-tree-node\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `recipe-tree-header ${hasSubRecipes ? 'has-children' : ''}`,\n      onClick: hasSubRecipes ? toggleExpand : undefined,\n      style: hasSubRecipes ? {\n        cursor: 'pointer'\n      } : {},\n      children: [hasSubRecipes && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"recipe-tree-toggle\",\n        children: expanded ? '▼' : '►'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"recipe-tree-name\",\n        children: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-tree-content\",\n      children: [recipe.ingredients && recipe.ingredients.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-tree-ingredients\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Ingredients:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: recipe.ingredients.map((ingredient, idx) => {\n            var _ingredient$ingredien;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [ingredient.quantity, \" \", ingredient.unit, \" \", ((_ingredient$ingredien = ingredient.ingredient) === null || _ingredient$ingredien === void 0 ? void 0 : _ingredient$ingredien.name) || \"N/A\"]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), recipe.instructions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-tree-instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: recipe.instructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), hasSubRecipes && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-tree-sub-recipes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Sub-recipes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), recipe.components.map((component, idx) => {\n          // Get the sub-recipe\n          const subRecipe = component.sub_recipe;\n          if (!subRecipe) return null;\n\n          // Check for circular reference\n          const isCircular = subRecipe.id === recipe.id;\n          if (isCircular) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-tree-sub-recipe\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"recipe-tree-sub-recipe-header recursive-warning\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"recipe-tree-warning\",\n                  children: \"\\u26A0\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [subRecipe.name, \" (recursive reference)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 23\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-tree-sub-recipe\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-tree-sub-recipe-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recipe-tree-quantity\",\n                children: component.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(RecipeTreeView, {\n                recipe: subRecipe,\n                initialExpanded: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeTreeView, \"jxj53rg0gNJmV8gcMRQGpI/aAhk=\");\n_c = RecipeTreeView;\nexport default RecipeTreeView;\nvar _c;\n$RefreshReg$(_c, \"RecipeTreeView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RecipeTreeView","recipe","initialExpanded","_s","expanded","setExpanded","hasSubRecipes","components","length","toggleExpand","className","children","onClick","undefined","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","name","ingredients","map","ingredient","idx","_ingredient$ingredien","quantity","unit","instructions","component","subRecipe","sub_recipe","isCircular","id","_c","$RefreshReg$"],"sources":["G:/GroceriesProject/Kitchenapp/frontend/src/pages/RecipeTreeView.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction RecipeTreeView({ recipe, initialExpanded = false }) {\r\n  // Local state for expanded/collapsed state of this recipe\r\n  const [expanded, setExpanded] = useState(initialExpanded);\r\n\r\n  // If no recipe, render nothing\r\n  if (!recipe) return null;\r\n\r\n  // Determine if this recipe has sub-recipes\r\n  const hasSubRecipes = recipe.components && recipe.components.length > 0;\r\n\r\n  // Click handler for toggling expansion\r\n  const toggleExpand = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipe-tree-node\">\r\n      {/* Recipe header - always visible */}\r\n      <div \r\n        className={`recipe-tree-header ${hasSubRecipes ? 'has-children' : ''}`}\r\n        onClick={hasSubRecipes ? toggleExpand : undefined}\r\n        style={hasSubRecipes ? { cursor: 'pointer' } : {}}\r\n      >\r\n        {hasSubRecipes && (\r\n          <span className=\"recipe-tree-toggle\">\r\n            {expanded ? '▼' : '►'}\r\n          </span>\r\n        )}\r\n        <span className=\"recipe-tree-name\">{recipe.name}</span>\r\n      </div>\r\n\r\n      {/* Expanded content - only visible when expanded is true */}\r\n      {expanded && (\r\n        <div className=\"recipe-tree-content\">\r\n          {/* Ingredients */}\r\n          {recipe.ingredients && recipe.ingredients.length > 0 && (\r\n            <div className=\"recipe-tree-ingredients\">\r\n              <h5>Ingredients:</h5>\r\n              <ul>\r\n                {recipe.ingredients.map((ingredient, idx) => (\r\n                  <li key={idx}>\r\n                    {ingredient.quantity} {ingredient.unit} {ingredient.ingredient?.name || \"N/A\"}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          {/* Instructions if available */}\r\n          {recipe.instructions && (\r\n            <div className=\"recipe-tree-instructions\">\r\n              <h5>Instructions:</h5>\r\n              <p>{recipe.instructions}</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Sub-recipes */}\r\n          {hasSubRecipes && (\r\n            <div className=\"recipe-tree-sub-recipes\">\r\n              <h5>Sub-recipes:</h5>\r\n              {recipe.components.map((component, idx) => {\r\n                // Get the sub-recipe\r\n                const subRecipe = component.sub_recipe;\r\n                \r\n                if (!subRecipe) return null;\r\n                \r\n                // Check for circular reference\r\n                const isCircular = subRecipe.id === recipe.id;\r\n                \r\n                if (isCircular) {\r\n                  return (\r\n                    <div key={idx} className=\"recipe-tree-sub-recipe\">\r\n                      <div className=\"recipe-tree-sub-recipe-header recursive-warning\">\r\n                        <span className=\"recipe-tree-warning\">⚠️</span>\r\n                        <span>{subRecipe.name} (recursive reference)</span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }\r\n                \r\n                return (\r\n                  <div key={idx} className=\"recipe-tree-sub-recipe\">\r\n                    <div className=\"recipe-tree-sub-recipe-header\">\r\n                      <span className=\"recipe-tree-quantity\">\r\n                        {component.quantity} \r\n                      </span>\r\n                      {/* Create a NEW instance of RecipeTreeView for each sub-recipe */}\r\n                      <RecipeTreeView \r\n                        recipe={subRecipe}\r\n                        initialExpanded={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeTreeView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}