{"ast":null,"code":"var _jsxFileName = \"G:\\\\GroceriesProject\\\\Kitchenapp\\\\frontend\\\\src\\\\pages\\\\RecipeTreeView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeTreeView({\n  recipe,\n  initialExpanded = false\n}) {\n  _s();\n  // Local state for expanded/collapsed state of this recipe\n  const [expanded, setExpanded] = useState(initialExpanded);\n\n  // If no recipe, render nothing\n  if (!recipe) return null;\n\n  // Determine if this recipe has sub-recipes\n  const hasSubRecipes = recipe.components && recipe.components.length > 0;\n\n  // Click handler for toggling expansion\n  const toggleExpand = e => {\n    // Prevent event bubbling to parent recipe nodes\n    e.stopPropagation();\n    setExpanded(!expanded);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-tree-node\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `recipe-tree-header ${hasSubRecipes ? 'has-children' : ''}`,\n      onClick: toggleExpand,\n      style: hasSubRecipes ? {\n        cursor: 'pointer'\n      } : {},\n      children: [hasSubRecipes && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"recipe-tree-toggle\",\n        children: expanded ? '▼' : '►'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"recipe-tree-name\",\n        children: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-tree-content\",\n      children: [recipe.ingredients && recipe.ingredients.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-tree-ingredients\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Ingredients:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: recipe.ingredients.map((ingredient, idx) => {\n            var _ingredient$ingredien;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [ingredient.quantity, \" \", ingredient.unit, \" \", ((_ingredient$ingredien = ingredient.ingredient) === null || _ingredient$ingredien === void 0 ? void 0 : _ingredient$ingredien.name) || \"N/A\", ingredient.descriptor && ` (${ingredient.descriptor})`, ingredient.additional_descriptor && ` - ${ingredient.additional_descriptor}`]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), recipe.instructions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-tree-instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: recipe.instructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), hasSubRecipes && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-tree-sub-recipes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Sub-recipes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), recipe.components.map((component, idx) => {\n          // Get the sub-recipe\n          const subRecipe = component.sub_recipe;\n          if (!subRecipe) return null;\n\n          // Check for circular reference\n          const isCircular = subRecipe.id === recipe.id;\n          if (isCircular) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-tree-sub-recipe\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"recipe-tree-sub-recipe-header recursive-warning\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"recipe-tree-warning\",\n                  children: \"\\u26A0\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [subRecipe.name, \" (recursive reference)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 23\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-tree-sub-recipe\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-tree-sub-recipe-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recipe-tree-quantity\",\n                children: component.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(RecipeTreeView, {\n                recipe: subRecipe,\n                initialExpanded: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeTreeView, \"jxj53rg0gNJmV8gcMRQGpI/aAhk=\");\n_c = RecipeTreeView;\nexport default RecipeTreeView;\nvar _c;\n$RefreshReg$(_c, \"RecipeTreeView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RecipeTreeView","recipe","initialExpanded","_s","expanded","setExpanded","hasSubRecipes","components","length","toggleExpand","e","stopPropagation","className","children","onClick","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","name","ingredients","map","ingredient","idx","_ingredient$ingredien","quantity","unit","descriptor","additional_descriptor","instructions","component","subRecipe","sub_recipe","isCircular","id","_c","$RefreshReg$"],"sources":["G:/GroceriesProject/Kitchenapp/frontend/src/pages/RecipeTreeView.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction RecipeTreeView({ recipe, initialExpanded = false }) {\r\n  // Local state for expanded/collapsed state of this recipe\r\n  const [expanded, setExpanded] = useState(initialExpanded);\r\n\r\n  // If no recipe, render nothing\r\n  if (!recipe) return null;\r\n\r\n  // Determine if this recipe has sub-recipes\r\n  const hasSubRecipes = recipe.components && recipe.components.length > 0;\r\n\r\n  // Click handler for toggling expansion\r\n  const toggleExpand = (e) => {\r\n    // Prevent event bubbling to parent recipe nodes\r\n    e.stopPropagation();\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipe-tree-node\">\r\n      {/* Recipe header - always visible */}\r\n      <div \r\n        className={`recipe-tree-header ${hasSubRecipes ? 'has-children' : ''}`}\r\n        onClick={toggleExpand}\r\n        style={hasSubRecipes ? { cursor: 'pointer' } : {}}\r\n      >\r\n        {hasSubRecipes && (\r\n          <span className=\"recipe-tree-toggle\">\r\n            {expanded ? '▼' : '►'}\r\n          </span>\r\n        )}\r\n        <span className=\"recipe-tree-name\">{recipe.name}</span>\r\n      </div>\r\n\r\n      {/* Expanded content - only visible when expanded is true */}\r\n      {expanded && (\r\n        <div className=\"recipe-tree-content\">\r\n          {/* Ingredients */}\r\n          {recipe.ingredients && recipe.ingredients.length > 0 && (\r\n            <div className=\"recipe-tree-ingredients\">\r\n              <h5>Ingredients:</h5>\r\n              <ul>\r\n              {recipe.ingredients.map((ingredient, idx) => (\r\n                <li key={idx}>\r\n                    {ingredient.quantity} {ingredient.unit} {ingredient.ingredient?.name || \"N/A\"}\r\n                    {ingredient.descriptor && ` (${ingredient.descriptor})`}\r\n                    {ingredient.additional_descriptor && ` - ${ingredient.additional_descriptor}`}\r\n                </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          {/* Instructions if available */}\r\n          {recipe.instructions && (\r\n            <div className=\"recipe-tree-instructions\">\r\n              <h5>Instructions:</h5>\r\n              <p>{recipe.instructions}</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Sub-recipes */}\r\n          {hasSubRecipes && (\r\n            <div className=\"recipe-tree-sub-recipes\">\r\n              <h5>Sub-recipes:</h5>\r\n              {recipe.components.map((component, idx) => {\r\n                // Get the sub-recipe\r\n                const subRecipe = component.sub_recipe;\r\n                \r\n                if (!subRecipe) return null;\r\n                \r\n                // Check for circular reference\r\n                const isCircular = subRecipe.id === recipe.id;\r\n                \r\n                if (isCircular) {\r\n                  return (\r\n                    <div key={idx} className=\"recipe-tree-sub-recipe\">\r\n                      <div className=\"recipe-tree-sub-recipe-header recursive-warning\">\r\n                        <span className=\"recipe-tree-warning\">⚠️</span>\r\n                        <span>{subRecipe.name} (recursive reference)</span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }\r\n                \r\n                return (\r\n                  <div key={idx} className=\"recipe-tree-sub-recipe\">\r\n                    <div className=\"recipe-tree-sub-recipe-header\">\r\n                      <span className=\"recipe-tree-quantity\">\r\n                        {component.quantity} \r\n                      </span>\r\n                      {/* Create a NEW instance of RecipeTreeView for each sub-recipe */}\r\n                      <RecipeTreeView \r\n                        recipe={subRecipe}\r\n                        initialExpanded={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeTreeView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}