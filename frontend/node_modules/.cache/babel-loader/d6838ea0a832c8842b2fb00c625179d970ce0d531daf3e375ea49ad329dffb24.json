{"ast":null,"code":"var _jsxFileName = \"G:\\\\GroceriesProject\\\\Kitchenapp\\\\frontend\\\\src\\\\pages\\\\GroceryListView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroceryListView() {\n  _s();\n  const {\n    planId\n  } = useParams(); // For viewing an existing saved plan's groceries\n  const location = useLocation(); // For previewing groceries without saving\n  const navigate = useNavigate();\n  const [groceryList, setGroceryList] = useState([]);\n  const [planDetails, setPlanDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [isReordering, setIsReordering] = useState(false);\n  const [selectedStore, setSelectedStore] = useState(null);\n  useEffect(() => {\n    if (planId) {\n      // If planId is provided, fetch the grocery list for this saved plan\n      fetchGroceryListForPlan(planId);\n    } else if (location.state && location.state.meals) {\n      // If we have meals data in location state, generate grocery list without saving\n      generateGroceryListFromMeals(location.state.meals);\n      setPlanDetails({\n        name: location.state.planName || \"Unnamed Meal Plan\",\n        isTemporary: true\n      });\n    } else {\n      // No plan ID or meals data\n      setError(\"No meal plan data found.\");\n      setLoading(false);\n    }\n  }, [planId, location.state]);\n  const handleDragEnd = result => {\n    // Dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    const reorderedList = Array.from(groceryList);\n    const [removed] = reorderedList.splice(result.source.index, 1);\n    reorderedList.splice(result.destination.index, 0, removed);\n\n    // Update section orders\n    const updatedList = reorderedList.map((section, index) => ({\n      ...section,\n      order: index\n    }));\n    setGroceryList(updatedList);\n  };\n\n  // Add function to save the new section order\n  const saveNewSectionOrder = async () => {\n    try {\n      if (!selectedStore) {\n        // Fetch store if not already selected\n        const storesResponse = await fetch('http://127.0.0.1:5000/api/stores');\n        const storesData = await storesResponse.json();\n        if (storesData.length === 0) {\n          alert('No stores available to save section order');\n          return;\n        }\n        const defaultStore = storesData.find(store => store.is_default) || storesData[0];\n        setSelectedStore(defaultStore.id);\n        await reorderSections(defaultStore.id);\n      } else {\n        await reorderSections(selectedStore);\n      }\n      setIsReordering(false);\n      alert('Section order saved successfully!');\n    } catch (error) {\n      console.error('Error saving section order:', error);\n      alert('Failed to save section order');\n    }\n  };\n\n  // Function to make API call for reordering\n  const reorderSections = async storeId => {\n    const sectionIds = groceryList.filter(section => section.sectionId) // Only include sections with IDs\n    .map(section => section.sectionId);\n    if (sectionIds.length === 0) {\n      alert('No sections to reorder');\n      return;\n    }\n    const response = await fetch(`http://127.0.0.1:5000/api/stores/${storeId}/sections/reorder`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        sections: sectionIds\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to save section order');\n    }\n  };\n\n  // Update the fetchGroceryListForPlan function\n  const fetchGroceryListForPlan = async id => {\n    try {\n      setLoading(true);\n\n      // First, fetch plan details\n      const planResponse = await fetch(`http://127.0.0.1:5000/api/weekly_plan/${id}`);\n      if (!planResponse.ok) {\n        throw new Error(\"Failed to fetch plan details\");\n      }\n      const planData = await planResponse.json();\n      setPlanDetails({\n        ...planData,\n        isTemporary: false\n      });\n\n      // Then fetch grocery list\n      const groceryResponse = await fetch(`http://127.0.0.1:5000/api/grocery_list?weekly_plan_id=${id}`);\n      if (!groceryResponse.ok) {\n        throw new Error(\"Failed to fetch grocery list\");\n      }\n      const groceryData = await groceryResponse.json();\n\n      // Sort the grocery list by section order if available\n      const sortedList = groceryData.grocery_list.sort((a, b) => {\n        // Put Uncategorized at the end\n        if (a.section === \"Uncategorized\") return 1;\n        if (b.section === \"Uncategorized\") return -1;\n\n        // Sort by order if available\n        if (a.order !== undefined && b.order !== undefined) {\n          return a.order - b.order;\n        }\n\n        // Fall back to alphabetical order\n        return a.section.localeCompare(b.section);\n      });\n      setGroceryList(sortedList || []);\n      console.log(\"Grocery list data:\", sortedList);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error fetching grocery list:\", err);\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  // Update the generateGroceryListFromMeals function similarly\n  const generateGroceryListFromMeals = async meals => {\n    try {\n      setLoading(true);\n\n      // Generate grocery list from meals array without saving the plan\n      const response = await fetch(`http://127.0.0.1:5000/api/generate_grocery_list`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          meals: meals\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to generate grocery list\");\n      }\n      const data = await response.json();\n\n      // Sort the grocery list by section order if available\n      const sortedList = data.grocery_list.sort((a, b) => {\n        // Put Uncategorized at the end\n        if (a.section === \"Uncategorized\") return 1;\n        if (b.section === \"Uncategorized\") return -1;\n\n        // Sort by order if available\n        if (a.order !== undefined && b.order !== undefined) {\n          return a.order - b.order;\n        }\n\n        // Fall back to alphabetical order\n        return a.section.localeCompare(b.section);\n      });\n      setGroceryList(sortedList || []);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error generating grocery list:\", err);\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  const printGroceryList = () => {\n    setIsPrinting(true);\n    setTimeout(() => {\n      window.print();\n      setIsPrinting(false);\n    }, 100);\n  };\n  const exportGroceryListToCSV = () => {\n    // Create CSV content\n    let csvContent = \"Section,Item,Quantity,Unit\\n\";\n    groceryList.forEach(section => {\n      section.items.forEach(item => {\n        // Clean up the item data and escape any commas\n        const sectionName = section.section.replace(/,/g, \" \");\n        const itemName = item.name ? item.name.replace(/,/g, \" \") : \"\";\n        const quantity = item.quantity || \"\";\n        const unit = item.unit ? item.unit.replace(/,/g, \" \") : \"\";\n        csvContent += `${sectionName},${itemName},${quantity},${unit}\\n`;\n      });\n    });\n\n    // Create a download link and trigger it\n    const encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", `grocery_list_${new Date().toISOString().split('T')[0]}.csv`);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const savePlan = async () => {\n    if (!planDetails.isTemporary || !location.state || !location.state.meals) {\n      return; // Only save if this is a temporary plan\n    }\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/weekly_plan\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: planDetails.name,\n          meals: location.state.meals\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to save weekly plan\");\n      }\n      const data = await response.json();\n\n      // Update the plan details to reflect it's now saved\n      setPlanDetails({\n        ...planDetails,\n        id: data.id,\n        isTemporary: false\n      });\n      alert(\"Meal plan saved successfully!\");\n    } catch (err) {\n      console.error(\"Error saving plan:\", err);\n      alert(\"Error saving plan: \" + err.message);\n    }\n  };\n\n  // In GroceryListView.js around line 116-125, modify the handleCheckboxChange function:\n  const handleCheckboxChange = (sectionIndex, itemIndex) => {\n    console.log(`Toggling checkbox for section ${sectionIndex}, item ${itemIndex}`);\n    setGroceryList(prevList => {\n      const newList = JSON.parse(JSON.stringify(prevList)); // Deep copy to ensure state changes\n      newList[sectionIndex].items[itemIndex].checked = !newList[sectionIndex].items[itemIndex].checked;\n      console.log(`New checked state: ${newList[sectionIndex].items[itemIndex].checked}`);\n      return newList;\n    });\n  };\n\n  // Go back to weekly planner\n  const goToWeeklyPlanner = () => {\n    navigate(\"/weekly-planner\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `grocery-list-container ${isPrinting ? 'printing' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Grocery List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), planDetails && /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"plan-name\",\n        children: planDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-list-actions no-print\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: goToWeeklyPlanner,\n        children: \"\\u2190 Back to Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [planDetails && planDetails.isTemporary && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-plan-btn\",\n          onClick: savePlan,\n          children: \"Save Meal Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"organize-btn\",\n          onClick: () => navigate('/store-organizer'),\n          children: \"Organize Sections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `reorder-btn ${isReordering ? 'active' : ''}`,\n          onClick: () => setIsReordering(!isReordering),\n          children: isReordering ? 'Done Reordering' : 'Reorder Sections'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"print-btn\",\n          onClick: printGroceryList,\n          children: \"Print List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"export-btn\",\n          onClick: exportGroceryListToCSV,\n          children: \"Export to CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), isReordering && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reordering-actions no-print\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag sections to reorder them\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-order-btn\",\n        onClick: saveNewSectionOrder,\n        children: \"Save New Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading grocery list...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-list-content\",\n      children: groceryList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-list\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No items found in your grocery list.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 13\n      }, this) : isReordering ? /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sections-container reordering\",\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [groceryList.map((section, sectionIndex) => section.items && section.items.length > 0 ? /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: section.section,\n              index: sectionIndex,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grocery-section reorderable\",\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"section-title\",\n                  children: section.section\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"item-count\",\n                  children: [section.items.length, \" items\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 29\n              }, this)\n            }, section.section, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 25\n            }, this) : null), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sections-container\",\n        children: groceryList.map((section, sectionIndex) => section.items && section.items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grocery-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-title\",\n            children: section.section\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"grocery-items\",\n            children: section.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `grocery-item ${item.checked ? 'checked' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"checkbox-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: \"item-checkbox no-print\",\n                  checked: item.checked || false,\n                  onChange: () => handleCheckboxChange(sectionIndex, itemIndex)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"checkmark no-print\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"item-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"item-name\",\n                    children: item.name || item.main_text || \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"item-quantity\",\n                    children: item.formatted_quantity || item.fraction_str || (item.quantity !== undefined && item.unit ? `${item.quantity} ${item.unit}` : item.precision_text || \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 27\n              }, this)\n            }, `${section.section}-${itemIndex}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 21\n          }, this)]\n        }, section.section, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 19\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n}\n_s(GroceryListView, \"/jrNdpqSeTAgOCsvo+CmIaMtrL0=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = GroceryListView;\nexport default GroceryListView;\nvar _c;\n$RefreshReg$(_c, \"GroceryListView\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","useNavigate","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","GroceryListView","_s","planId","location","navigate","groceryList","setGroceryList","planDetails","setPlanDetails","loading","setLoading","error","setError","isPrinting","setIsPrinting","isReordering","setIsReordering","selectedStore","setSelectedStore","fetchGroceryListForPlan","state","meals","generateGroceryListFromMeals","name","planName","isTemporary","handleDragEnd","result","destination","reorderedList","Array","from","removed","splice","source","index","updatedList","map","section","order","saveNewSectionOrder","storesResponse","fetch","storesData","json","length","alert","defaultStore","find","store","is_default","id","reorderSections","console","storeId","sectionIds","filter","sectionId","response","method","headers","body","JSON","stringify","sections","ok","Error","planResponse","planData","groceryResponse","groceryData","sortedList","grocery_list","sort","a","b","undefined","localeCompare","log","err","message","data","printGroceryList","setTimeout","window","print","exportGroceryListToCSV","csvContent","forEach","items","item","sectionName","replace","itemName","quantity","unit","encodedUri","encodeURI","link","document","createElement","setAttribute","Date","toISOString","split","appendChild","click","removeChild","savePlan","handleCheckboxChange","sectionIndex","itemIndex","prevList","newList","parse","checked","goToWeeklyPlanner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","placeholder","type","onChange","main_text","formatted_quantity","fraction_str","precision_text","_c","$RefreshReg$"],"sources":["G:/GroceriesProject/Kitchenapp/frontend/src/pages/GroceryListView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nfunction GroceryListView() {\r\n  const { planId } = useParams(); // For viewing an existing saved plan's groceries\r\n  const location = useLocation(); // For previewing groceries without saving\r\n  const navigate = useNavigate();\r\n\r\n  const [groceryList, setGroceryList] = useState([]);\r\n  const [planDetails, setPlanDetails] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isPrinting, setIsPrinting] = useState(false);\r\n  const [isReordering, setIsReordering] = useState(false);\r\n  const [selectedStore, setSelectedStore] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (planId) {\r\n      // If planId is provided, fetch the grocery list for this saved plan\r\n      fetchGroceryListForPlan(planId);\r\n    } else if (location.state && location.state.meals) {\r\n      // If we have meals data in location state, generate grocery list without saving\r\n      generateGroceryListFromMeals(location.state.meals);\r\n      setPlanDetails({\r\n        name: location.state.planName || \"Unnamed Meal Plan\",\r\n        isTemporary: true\r\n      });\r\n    } else {\r\n      // No plan ID or meals data\r\n      setError(\"No meal plan data found.\");\r\n      setLoading(false);\r\n    }\r\n  }, [planId, location.state]);\r\n\r\n  const handleDragEnd = (result) => {\r\n    // Dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const reorderedList = Array.from(groceryList);\r\n    const [removed] = reorderedList.splice(result.source.index, 1);\r\n    reorderedList.splice(result.destination.index, 0, removed);\r\n\r\n    // Update section orders\r\n    const updatedList = reorderedList.map((section, index) => ({\r\n      ...section,\r\n      order: index\r\n    }));\r\n\r\n    setGroceryList(updatedList);\r\n  };\r\n\r\n  // Add function to save the new section order\r\n  const saveNewSectionOrder = async () => {\r\n    try {\r\n      if (!selectedStore) {\r\n        // Fetch store if not already selected\r\n        const storesResponse = await fetch('http://127.0.0.1:5000/api/stores');\r\n        const storesData = await storesResponse.json();\r\n\r\n        if (storesData.length === 0) {\r\n          alert('No stores available to save section order');\r\n          return;\r\n        }\r\n\r\n        const defaultStore = storesData.find(store => store.is_default) || storesData[0];\r\n        setSelectedStore(defaultStore.id);\r\n\r\n        await reorderSections(defaultStore.id);\r\n      } else {\r\n        await reorderSections(selectedStore);\r\n      }\r\n\r\n      setIsReordering(false);\r\n      alert('Section order saved successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving section order:', error);\r\n      alert('Failed to save section order');\r\n    }\r\n  };\r\n\r\n  // Function to make API call for reordering\r\n  const reorderSections = async (storeId) => {\r\n    const sectionIds = groceryList\r\n      .filter(section => section.sectionId) // Only include sections with IDs\r\n      .map(section => section.sectionId);\r\n\r\n    if (sectionIds.length === 0) {\r\n      alert('No sections to reorder');\r\n      return;\r\n    }\r\n\r\n    const response = await fetch(`http://127.0.0.1:5000/api/stores/${storeId}/sections/reorder`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        sections: sectionIds\r\n      })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to save section order');\r\n    }\r\n  };\r\n\r\n\r\n  // Update the fetchGroceryListForPlan function\r\n  const fetchGroceryListForPlan = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // First, fetch plan details\r\n      const planResponse = await fetch(`http://127.0.0.1:5000/api/weekly_plan/${id}`);\r\n      if (!planResponse.ok) {\r\n        throw new Error(\"Failed to fetch plan details\");\r\n      }\r\n\r\n      const planData = await planResponse.json();\r\n      setPlanDetails({\r\n        ...planData,\r\n        isTemporary: false\r\n      });\r\n\r\n      // Then fetch grocery list\r\n      const groceryResponse = await fetch(`http://127.0.0.1:5000/api/grocery_list?weekly_plan_id=${id}`);\r\n      if (!groceryResponse.ok) {\r\n        throw new Error(\"Failed to fetch grocery list\");\r\n      }\r\n\r\n      const groceryData = await groceryResponse.json();\r\n\r\n      // Sort the grocery list by section order if available\r\n      const sortedList = groceryData.grocery_list.sort((a, b) => {\r\n        // Put Uncategorized at the end\r\n        if (a.section === \"Uncategorized\") return 1;\r\n        if (b.section === \"Uncategorized\") return -1;\r\n\r\n        // Sort by order if available\r\n        if (a.order !== undefined && b.order !== undefined) {\r\n          return a.order - b.order;\r\n        }\r\n\r\n        // Fall back to alphabetical order\r\n        return a.section.localeCompare(b.section);\r\n      });\r\n\r\n      setGroceryList(sortedList || []);\r\n      console.log(\"Grocery list data:\", sortedList);\r\n      setLoading(false);\r\n\r\n    } catch (err) {\r\n      console.error(\"Error fetching grocery list:\", err);\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update the generateGroceryListFromMeals function similarly\r\n  const generateGroceryListFromMeals = async (meals) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Generate grocery list from meals array without saving the plan\r\n      const response = await fetch(`http://127.0.0.1:5000/api/generate_grocery_list`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          meals: meals\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to generate grocery list\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // Sort the grocery list by section order if available\r\n      const sortedList = data.grocery_list.sort((a, b) => {\r\n        // Put Uncategorized at the end\r\n        if (a.section === \"Uncategorized\") return 1;\r\n        if (b.section === \"Uncategorized\") return -1;\r\n\r\n        // Sort by order if available\r\n        if (a.order !== undefined && b.order !== undefined) {\r\n          return a.order - b.order;\r\n        }\r\n\r\n        // Fall back to alphabetical order\r\n        return a.section.localeCompare(b.section);\r\n      });\r\n\r\n      setGroceryList(sortedList || []);\r\n      setLoading(false);\r\n\r\n    } catch (err) {\r\n      console.error(\"Error generating grocery list:\", err);\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const printGroceryList = () => {\r\n    setIsPrinting(true);\r\n    setTimeout(() => {\r\n      window.print();\r\n      setIsPrinting(false);\r\n    }, 100);\r\n  };\r\n\r\n  const exportGroceryListToCSV = () => {\r\n    // Create CSV content\r\n    let csvContent = \"Section,Item,Quantity,Unit\\n\";\r\n\r\n    groceryList.forEach(section => {\r\n      section.items.forEach(item => {\r\n        // Clean up the item data and escape any commas\r\n        const sectionName = section.section.replace(/,/g, \" \");\r\n        const itemName = item.name ? item.name.replace(/,/g, \" \") : \"\";\r\n        const quantity = item.quantity || \"\";\r\n        const unit = item.unit ? item.unit.replace(/,/g, \" \") : \"\";\r\n\r\n        csvContent += `${sectionName},${itemName},${quantity},${unit}\\n`;\r\n      });\r\n    });\r\n\r\n    // Create a download link and trigger it\r\n    const encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", `grocery_list_${new Date().toISOString().split('T')[0]}.csv`);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const savePlan = async () => {\r\n    if (!planDetails.isTemporary || !location.state || !location.state.meals) {\r\n      return; // Only save if this is a temporary plan\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/api/weekly_plan\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          name: planDetails.name,\r\n          meals: location.state.meals\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to save weekly plan\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // Update the plan details to reflect it's now saved\r\n      setPlanDetails({\r\n        ...planDetails,\r\n        id: data.id,\r\n        isTemporary: false\r\n      });\r\n\r\n      alert(\"Meal plan saved successfully!\");\r\n\r\n    } catch (err) {\r\n      console.error(\"Error saving plan:\", err);\r\n      alert(\"Error saving plan: \" + err.message);\r\n    }\r\n  };\r\n\r\n  // In GroceryListView.js around line 116-125, modify the handleCheckboxChange function:\r\n  const handleCheckboxChange = (sectionIndex, itemIndex) => {\r\n    console.log(`Toggling checkbox for section ${sectionIndex}, item ${itemIndex}`);\r\n\r\n    setGroceryList(prevList => {\r\n      const newList = JSON.parse(JSON.stringify(prevList)); // Deep copy to ensure state changes\r\n      newList[sectionIndex].items[itemIndex].checked =\r\n        !newList[sectionIndex].items[itemIndex].checked;\r\n\r\n      console.log(`New checked state: ${newList[sectionIndex].items[itemIndex].checked}`);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  // Go back to weekly planner\r\n  const goToWeeklyPlanner = () => {\r\n    navigate(\"/weekly-planner\");\r\n  };\r\n\r\n  return (\r\n    <div className={`grocery-list-container ${isPrinting ? 'printing' : ''}`}>\r\n      <div className=\"grocery-list-header\">\r\n        <h1>Grocery List</h1>\r\n        {planDetails && (\r\n          <h2 className=\"plan-name\">{planDetails.name}</h2>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"grocery-list-actions no-print\">\r\n        <button className=\"back-btn\" onClick={goToWeeklyPlanner}>\r\n          ← Back to Planner\r\n        </button>\r\n\r\n        <div className=\"action-buttons\">\r\n          {planDetails && planDetails.isTemporary && (\r\n            <button className=\"save-plan-btn\" onClick={savePlan}>\r\n              Save Meal Plan\r\n            </button>\r\n          )}\r\n\r\n          <button\r\n            className=\"organize-btn\"\r\n            onClick={() => navigate('/store-organizer')}>\r\n            Organize Sections\r\n          </button>\r\n\r\n          {/* Add this new reorder button */}\r\n          <button\r\n            className={`reorder-btn ${isReordering ? 'active' : ''}`}\r\n            onClick={() => setIsReordering(!isReordering)}>\r\n            {isReordering ? 'Done Reordering' : 'Reorder Sections'}\r\n          </button>\r\n\r\n          <button className=\"print-btn\" onClick={printGroceryList}>\r\n            Print List\r\n          </button>\r\n\r\n          <button className=\"export-btn\" onClick={exportGroceryListToCSV}>\r\n            Export to CSV\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Show save button when reordering */}\r\n      {isReordering && (\r\n        <div className=\"reordering-actions no-print\">\r\n          <p>Drag sections to reorder them</p>\r\n          <button className=\"save-order-btn\" onClick={saveNewSectionOrder}>\r\n            Save New Order\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {loading ? (\r\n        <div className=\"loading\">Loading grocery list...</div>\r\n      ) : error ? (\r\n        <div className=\"error-message\">{error}</div>\r\n      ) : (\r\n        <div className=\"grocery-list-content\">\r\n          {groceryList.length === 0 ? (\r\n            <div className=\"empty-list\">\r\n              <p>No items found in your grocery list.</p>\r\n            </div>\r\n          ) : isReordering ? (\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n              <Droppable droppableId=\"droppable\">\r\n                {(provided) => (\r\n                  <div\r\n                    className=\"sections-container reordering\"\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {groceryList.map((section, sectionIndex) => (\r\n                      section.items && section.items.length > 0 ? (\r\n                        <Draggable\r\n                          key={section.section}\r\n                          draggableId={section.section}\r\n                          index={sectionIndex}\r\n                        >\r\n                          {(provided) => (\r\n                            <div\r\n                              className=\"grocery-section reorderable\"\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                            >\r\n                              <h3 className=\"section-title\">{section.section}</h3>\r\n                              <div className=\"item-count\">{section.items.length} items</div>\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      ) : null\r\n                    ))}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n          ) : (\r\n            <div className=\"sections-container\">\r\n              {groceryList.map((section, sectionIndex) => (\r\n                section.items && section.items.length > 0 ? (\r\n                  <div key={section.section} className=\"grocery-section\">\r\n                    <h3 className=\"section-title\">{section.section}</h3>\r\n                    <ul className=\"grocery-items\">\r\n                      {section.items.map((item, itemIndex) => (\r\n                        <li\r\n                          key={`${section.section}-${itemIndex}`}\r\n                          className={`grocery-item ${item.checked ? 'checked' : ''}`}\r\n                        >\r\n                          <label className=\"checkbox-container\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"item-checkbox no-print\"\r\n                              checked={item.checked || false}\r\n                              onChange={() => handleCheckboxChange(sectionIndex, itemIndex)}\r\n                            />\r\n                            <span className=\"checkmark no-print\"></span>\r\n                            <div className=\"item-details\">\r\n                              <span className=\"item-name\">\r\n                                {item.name || item.main_text || \"\"}\r\n                              </span>\r\n                              <span className=\"item-quantity\">\r\n                                {item.formatted_quantity || item.fraction_str ||\r\n                                  (item.quantity !== undefined && item.unit ?\r\n                                    `${item.quantity} ${item.unit}` :\r\n                                    (item.precision_text || \"\"))}\r\n                              </span>\r\n                            </div>\r\n                          </label>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                ) : null\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroceryListView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}