{"ast":null,"code":"var _jsxFileName = \"G:\\\\GroceriesProject\\\\Kitchenapp\\\\frontend\\\\src\\\\pages\\\\RecipeTreeView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeTreeView({\n  recipe,\n  initialExpanded = false,\n  level = 0,\n  visitedIds = new Set()\n}) {\n  _s();\n  const [expanded, setExpanded] = useState(initialExpanded);\n  const [subRecipeData, setSubRecipeData] = useState({});\n  const [loadingSubRecipes, setLoadingSubRecipes] = useState({});\n\n  // Create a new visitedIds set and add current recipe\n  const newVisitedIds = new Set(visitedIds);\n  if (recipe && recipe.id) {\n    newVisitedIds.add(recipe.id);\n  }\n\n  // Memoize fetchSubRecipe to prevent infinite loop in useEffect\n  const fetchSubRecipe = useCallback(async subRecipeId => {\n    if (loadingSubRecipes[subRecipeId]) return;\n    setLoadingSubRecipes(prev => ({\n      ...prev,\n      [subRecipeId]: true\n    }));\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/recipes/${subRecipeId}`);\n      const data = await response.json();\n      setSubRecipeData(prev => ({\n        ...prev,\n        [subRecipeId]: data\n      }));\n    } catch (error) {\n      console.error(`Error loading sub-recipe ${subRecipeId}:`, error);\n    } finally {\n      setLoadingSubRecipes(prev => ({\n        ...prev,\n        [subRecipeId]: false\n      }));\n    }\n  }, [loadingSubRecipes]);\n\n  // Load sub-recipes when component mounts or when initialExpanded changes\n  useEffect(() => {\n    // If expanded initially, load any immediate sub-recipes that are not already loaded\n    if (initialExpanded && recipe && recipe.components) {\n      recipe.components.forEach(component => {\n        if (component.sub_recipe && component.sub_recipe.id && !subRecipeData[component.sub_recipe.id]) {\n          // Skip if this would create a circular reference (the ID is already in visitedIds)\n          if (!visitedIds.has(component.sub_recipe.id)) {\n            fetchSubRecipe(component.sub_recipe.id);\n          }\n        }\n      });\n    }\n  }, [initialExpanded, recipe, fetchSubRecipe, subRecipeData, visitedIds]);\n\n  // Handle toggle expand\n  const toggleExpand = () => {\n    // Toggle the expanded state\n    const newExpandedState = !expanded;\n    setExpanded(newExpandedState);\n\n    // If expanding and we have sub-recipes to load, fetch them\n    if (newExpandedState && recipe && recipe.components) {\n      recipe.components.forEach(component => {\n        if (component.sub_recipe && component.sub_recipe.id && !subRecipeData[component.sub_recipe.id] && !visitedIds.has(component.sub_recipe.id)) {\n          fetchSubRecipe(component.sub_recipe.id);\n        }\n      });\n    }\n  };\n\n  // Check for circular reference early\n  if (recipe && recipe.id && visitedIds.has(recipe.id) && level > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-tree-node recursive-warning\",\n      style: {\n        marginLeft: `${level * 16}px`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-tree-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"recipe-tree-warning\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"recipe-tree-name\",\n          children: [recipe.name, \" (recursive reference)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If recipe is null, return early\n  if (!recipe) return null;\n\n  // Determine if this recipe has sub-recipes\n  const hasSubRecipes = recipe.components && recipe.components.length > 0;\n\n  // Debug - log the state when clicking\n  const handleRecipeClick = () => {\n    console.log(`Clicked on recipe ${recipe.name} (ID: ${recipe.id})`);\n    toggleExpand();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-tree-node\",\n    style: {\n      marginLeft: `${level * 16}px`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `recipe-tree-header ${hasSubRecipes ? 'has-children' : ''}`,\n      onClick: hasSubRecipes ? handleRecipeClick : undefined,\n      style: hasSubRecipes ? {\n        cursor: 'pointer'\n      } : {},\n      children: [hasSubRecipes && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"recipe-tree-toggle\",\n        children: expanded ? '▼' : '►'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"recipe-tree-name\",\n        children: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-tree-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-tree-ingredients\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Ingredients:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: recipe.ingredients && recipe.ingredients.map((ingredient, idx) => {\n            var _ingredient$ingredien;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [ingredient.quantity, \" \", ingredient.unit, \" \", ((_ingredient$ingredien = ingredient.ingredient) === null || _ingredient$ingredien === void 0 ? void 0 : _ingredient$ingredien.name) || \"N/A\"]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), hasSubRecipes && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-tree-sub-recipes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Sub-recipes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), recipe.components.map((component, idx) => {\n          var _component$sub_recipe, _component$sub_recipe2;\n          // Handle both pre-loaded sub-recipes and those we need to fetch\n          const subRecipeId = (_component$sub_recipe = component.sub_recipe) === null || _component$sub_recipe === void 0 ? void 0 : _component$sub_recipe.id;\n          const preloadedSubRecipe = component.sub_recipe;\n          const fetchedSubRecipe = subRecipeData[subRecipeId];\n          const subRecipe = fetchedSubRecipe || preloadedSubRecipe;\n          const isLoading = loadingSubRecipes[subRecipeId];\n\n          // Check for circular reference\n          const isCircularRef = subRecipeId && newVisitedIds.has(subRecipeId) && level > 0;\n          if (isCircularRef) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-tree-sub-recipe\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"recipe-tree-sub-recipe-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"recipe-tree-quantity\",\n                  children: component.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"recipe-tree-node recursive-warning\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"recipe-tree-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"recipe-tree-warning\",\n                      children: \"\\u26A0\\uFE0F\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"recipe-tree-name\",\n                      children: [(subRecipe === null || subRecipe === void 0 ? void 0 : subRecipe.name) || \"Unknown\", \" (recursive reference)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 23\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-tree-sub-recipe\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-tree-sub-recipe-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recipe-tree-quantity\",\n                children: component.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 23\n              }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recipe-tree-loading\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 25\n              }, this) : subRecipe ? /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: e => e.stopPropagation(),\n                children: /*#__PURE__*/_jsxDEV(RecipeTreeView, {\n                  recipe: subRecipe,\n                  initialExpanded: false,\n                  level: level + 1,\n                  visitedIds: newVisitedIds\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recipe-tree-load\",\n                onClick: e => {\n                  e.stopPropagation();\n                  fetchSubRecipe(subRecipeId);\n                },\n                style: {\n                  cursor: 'pointer',\n                  textDecoration: 'underline'\n                },\n                children: [((_component$sub_recipe2 = component.sub_recipe) === null || _component$sub_recipe2 === void 0 ? void 0 : _component$sub_recipe2.name) || \"Unknown\", \" (Click to load)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 21\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeTreeView, \"MxOV/v8sj5FzGJOMGQ3uB7Rk3G8=\");\n_c = RecipeTreeView;\nexport default RecipeTreeView;\nvar _c;\n$RefreshReg$(_c, \"RecipeTreeView\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","RecipeTreeView","recipe","initialExpanded","level","visitedIds","Set","_s","expanded","setExpanded","subRecipeData","setSubRecipeData","loadingSubRecipes","setLoadingSubRecipes","newVisitedIds","id","add","fetchSubRecipe","subRecipeId","prev","response","fetch","data","json","error","console","components","forEach","component","sub_recipe","has","toggleExpand","newExpandedState","className","style","marginLeft","children","fileName","_jsxFileName","lineNumber","columnNumber","name","hasSubRecipes","length","handleRecipeClick","log","onClick","undefined","cursor","ingredients","map","ingredient","idx","_ingredient$ingredien","quantity","unit","_component$sub_recipe","_component$sub_recipe2","preloadedSubRecipe","fetchedSubRecipe","subRecipe","isLoading","isCircularRef","e","stopPropagation","textDecoration","_c","$RefreshReg$"],"sources":["G:/GroceriesProject/Kitchenapp/frontend/src/pages/RecipeTreeView.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nfunction RecipeTreeView({ recipe, initialExpanded = false, level = 0, visitedIds = new Set() }) {\r\n  const [expanded, setExpanded] = useState(initialExpanded);\r\n  const [subRecipeData, setSubRecipeData] = useState({});\r\n  const [loadingSubRecipes, setLoadingSubRecipes] = useState({});\r\n  \r\n  // Create a new visitedIds set and add current recipe\r\n  const newVisitedIds = new Set(visitedIds);\r\n  if (recipe && recipe.id) {\r\n    newVisitedIds.add(recipe.id);\r\n  }\r\n  \r\n  // Memoize fetchSubRecipe to prevent infinite loop in useEffect\r\n  const fetchSubRecipe = useCallback(async (subRecipeId) => {\r\n    if (loadingSubRecipes[subRecipeId]) return;\r\n\r\n    setLoadingSubRecipes(prev => ({ ...prev, [subRecipeId]: true }));\r\n\r\n    try {\r\n      const response = await fetch(`http://127.0.0.1:5000/api/recipes/${subRecipeId}`);\r\n      const data = await response.json();\r\n      \r\n      setSubRecipeData(prev => ({\r\n        ...prev,\r\n        [subRecipeId]: data\r\n      }));\r\n    } catch (error) {\r\n      console.error(`Error loading sub-recipe ${subRecipeId}:`, error);\r\n    } finally {\r\n      setLoadingSubRecipes(prev => ({ ...prev, [subRecipeId]: false }));\r\n    }\r\n  }, [loadingSubRecipes]);\r\n\r\n  // Load sub-recipes when component mounts or when initialExpanded changes\r\n  useEffect(() => {\r\n    // If expanded initially, load any immediate sub-recipes that are not already loaded\r\n    if (initialExpanded && recipe && recipe.components) {\r\n      recipe.components.forEach((component) => {\r\n        if (component.sub_recipe && component.sub_recipe.id && !subRecipeData[component.sub_recipe.id]) {\r\n          // Skip if this would create a circular reference (the ID is already in visitedIds)\r\n          if (!visitedIds.has(component.sub_recipe.id)) {\r\n            fetchSubRecipe(component.sub_recipe.id);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [initialExpanded, recipe, fetchSubRecipe, subRecipeData, visitedIds]);\r\n\r\n  // Handle toggle expand\r\n  const toggleExpand = () => {\r\n    // Toggle the expanded state\r\n    const newExpandedState = !expanded;\r\n    setExpanded(newExpandedState);\r\n    \r\n    // If expanding and we have sub-recipes to load, fetch them\r\n    if (newExpandedState && recipe && recipe.components) {\r\n      recipe.components.forEach((component) => {\r\n        if (\r\n          component.sub_recipe && \r\n          component.sub_recipe.id && \r\n          !subRecipeData[component.sub_recipe.id] && \r\n          !visitedIds.has(component.sub_recipe.id)\r\n        ) {\r\n          fetchSubRecipe(component.sub_recipe.id);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // Check for circular reference early\r\n  if (recipe && recipe.id && visitedIds.has(recipe.id) && level > 0) {\r\n    return (\r\n      <div className=\"recipe-tree-node recursive-warning\" style={{ marginLeft: `${level * 16}px` }}>\r\n        <div className=\"recipe-tree-header\">\r\n          <span className=\"recipe-tree-warning\">⚠️</span>\r\n          <span className=\"recipe-tree-name\">{recipe.name} (recursive reference)</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If recipe is null, return early\r\n  if (!recipe) return null;\r\n\r\n  // Determine if this recipe has sub-recipes\r\n  const hasSubRecipes = recipe.components && recipe.components.length > 0;\r\n\r\n  // Debug - log the state when clicking\r\n  const handleRecipeClick = () => {\r\n    console.log(`Clicked on recipe ${recipe.name} (ID: ${recipe.id})`);\r\n    toggleExpand();\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipe-tree-node\" style={{ marginLeft: `${level * 16}px` }}>\r\n      <div \r\n        className={`recipe-tree-header ${hasSubRecipes ? 'has-children' : ''}`}\r\n        onClick={hasSubRecipes ? handleRecipeClick : undefined}\r\n        style={hasSubRecipes ? { cursor: 'pointer' } : {}}\r\n      >\r\n        {hasSubRecipes && (\r\n          <span className=\"recipe-tree-toggle\">\r\n            {expanded ? '▼' : '►'}\r\n          </span>\r\n        )}\r\n        <span className=\"recipe-tree-name\">{recipe.name}</span>\r\n      </div>\r\n\r\n      {expanded && (\r\n        <div className=\"recipe-tree-content\">\r\n          {/* Ingredients */}\r\n          <div className=\"recipe-tree-ingredients\">\r\n            <h5>Ingredients:</h5>\r\n            <ul>\r\n              {recipe.ingredients && recipe.ingredients.map((ingredient, idx) => (\r\n                <li key={idx}>\r\n                  {ingredient.quantity} {ingredient.unit} {ingredient.ingredient?.name || \"N/A\"}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Sub-recipes */}\r\n          {hasSubRecipes && (\r\n            <div className=\"recipe-tree-sub-recipes\">\r\n              <h5>Sub-recipes:</h5>\r\n              {recipe.components.map((component, idx) => {\r\n                // Handle both pre-loaded sub-recipes and those we need to fetch\r\n                const subRecipeId = component.sub_recipe?.id;\r\n                const preloadedSubRecipe = component.sub_recipe;\r\n                const fetchedSubRecipe = subRecipeData[subRecipeId];\r\n                const subRecipe = fetchedSubRecipe || preloadedSubRecipe;\r\n                const isLoading = loadingSubRecipes[subRecipeId];\r\n                \r\n                // Check for circular reference\r\n                const isCircularRef = subRecipeId && newVisitedIds.has(subRecipeId) && level > 0;\r\n\r\n                if (isCircularRef) {\r\n                  return (\r\n                    <div key={idx} className=\"recipe-tree-sub-recipe\">\r\n                      <div className=\"recipe-tree-sub-recipe-header\">\r\n                        <span className=\"recipe-tree-quantity\">\r\n                          {component.quantity} \r\n                        </span>\r\n                        <div className=\"recipe-tree-node recursive-warning\">\r\n                          <div className=\"recipe-tree-header\">\r\n                            <span className=\"recipe-tree-warning\">⚠️</span>\r\n                            <span className=\"recipe-tree-name\">{subRecipe?.name || \"Unknown\"} (recursive reference)</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }\r\n\r\n                return (\r\n                  <div key={idx} className=\"recipe-tree-sub-recipe\">\r\n                    <div className=\"recipe-tree-sub-recipe-header\">\r\n                      <span className=\"recipe-tree-quantity\">\r\n                        {component.quantity} \r\n                      </span>\r\n                      {isLoading ? (\r\n                        <span className=\"recipe-tree-loading\">Loading...</span>\r\n                      ) : subRecipe ? (\r\n                        <div onClick={(e) => e.stopPropagation()}>\r\n                          <RecipeTreeView \r\n                            recipe={subRecipe}\r\n                            initialExpanded={false}\r\n                            level={level + 1}\r\n                            visitedIds={newVisitedIds}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <span \r\n                          className=\"recipe-tree-load\" \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            fetchSubRecipe(subRecipeId);\r\n                          }}\r\n                          style={{ cursor: 'pointer', textDecoration: 'underline' }}\r\n                        >\r\n                          {component.sub_recipe?.name || \"Unknown\"} (Click to load)\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeTreeView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}