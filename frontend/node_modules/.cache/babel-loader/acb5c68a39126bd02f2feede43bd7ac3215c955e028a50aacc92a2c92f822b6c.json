{"ast":null,"code":"var _jsxFileName = \"G:\\\\GroceriesProject\\\\Kitchenapp\\\\frontend\\\\src\\\\pages\\\\GroceryListPreview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroceryListPreview() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [groceryList, setGroceryList] = useState([]);\n  const [planDetails, setPlanDetails] = useState({\n    name: \"Unnamed Meal Plan\",\n    isTemporary: true\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isPrinting, setIsPrinting] = useState(false);\n  useEffect(() => {\n    if (location.state && location.state.meals) {\n      // If we have meals data in location state, generate grocery list\n      generateGroceryListFromMeals(location.state.meals);\n      setPlanDetails({\n        name: location.state.planName || \"Unnamed Meal Plan\",\n        isTemporary: true\n      });\n    } else {\n      // No meals data\n      setError(\"No meal plan data found.\");\n      setLoading(false);\n    }\n  }, [location.state]);\n  const generateGroceryListFromMeals = async meals => {\n    try {\n      setLoading(true);\n\n      // Generate grocery list from meals array without saving the plan\n      const response = await fetch(`http://127.0.0.1:5000/api/grocery_list/generate`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          meals: meals\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to generate grocery list\");\n      }\n      const data = await response.json();\n      setGroceryList(data.grocery_list || []);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error generating grocery list:\", err);\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  const printGroceryList = () => {\n    setIsPrinting(true);\n    setTimeout(() => {\n      window.print();\n      setIsPrinting(false);\n    }, 100);\n  };\n  const exportGroceryListToCSV = () => {\n    // Create CSV content\n    let csvContent = \"Section,Item,Quantity,Unit\\n\";\n    groceryList.forEach(section => {\n      section.items.forEach(item => {\n        // Clean up the item data and escape any commas\n        const sectionName = section.section.replace(/,/g, \" \");\n        const itemName = item.main_text ? item.main_text.replace(/,/g, \" \") : \"\";\n\n        // Extract quantity and unit from precision_text if available\n        let quantity = \"\";\n        let unit = \"\";\n        if (item.precision_text) {\n          // Remove parentheses and split by space\n          const parts = item.precision_text.replace(/[()]/g, \"\").split(\" \");\n          if (parts.length >= 1) {\n            quantity = parts[0];\n          }\n          if (parts.length >= 2) {\n            unit = parts.slice(1).join(\" \");\n          }\n        }\n        csvContent += `${sectionName},${itemName},${quantity},${unit}\\n`;\n      });\n    });\n\n    // Create a download link and trigger it\n    const encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", `grocery_list_${new Date().toISOString().split('T')[0]}.csv`);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const savePlan = async () => {\n    if (!location.state || !location.state.meals) {\n      alert(\"No meal plan data to save.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/weekly_plan\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: planDetails.name,\n          meals: location.state.meals\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to save weekly plan\");\n      }\n      const data = await response.json();\n      alert(\"Meal plan saved successfully!\");\n\n      // Navigate to the saved plan's grocery list view\n      navigate(`/grocery-list/${data.id}`);\n    } catch (err) {\n      console.error(\"Error saving plan:\", err);\n      alert(\"Error saving plan: \" + err.message);\n    }\n  };\n  const handlePlanNameChange = e => {\n    setPlanDetails({\n      ...planDetails,\n      name: e.target.value\n    });\n  };\n  const handleCheckboxChange = (sectionIndex, itemIndex) => {\n    setGroceryList(prevList => {\n      const newList = [...prevList];\n      // Toggle the checked state if it exists, or set to true if it doesn't\n      newList[sectionIndex].items[itemIndex].checked = !newList[sectionIndex].items[itemIndex].checked;\n      return newList;\n    });\n  };\n\n  // Go back to weekly planner\n  const goToWeeklyPlanner = () => {\n    navigate(\"/weekly-planner\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `grocery-list-container ${isPrinting ? 'printing' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Grocery List Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-name-edit no-print\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: planDetails.name,\n          onChange: handlePlanNameChange,\n          placeholder: \"Enter a name for your meal plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"plan-name print-only\",\n        children: planDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-list-actions no-print\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: goToWeeklyPlanner,\n        children: \"\\u2190 Back to Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-plan-btn\",\n          onClick: savePlan,\n          children: \"Save Meal Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"print-btn\",\n          onClick: printGroceryList,\n          children: \"Print List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"export-btn\",\n          onClick: exportGroceryListToCSV,\n          children: \"Export to CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Generating grocery list...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-list-content\",\n      children: groceryList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-list\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No items found in your grocery list.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sections-container\",\n        children: groceryList.map((section, sectionIndex) => section.items && section.items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grocery-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-title\",\n            children: section.section\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"grocery-items\",\n            children: section.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `grocery-item ${item.checked ? 'checked' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"checkbox-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: \"item-checkbox no-print\",\n                  checked: item.checked || false,\n                  onChange: () => handleCheckboxChange(sectionIndex, itemIndex)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"checkmark no-print\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"item-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"item-name\",\n                    children: item.main_text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"item-quantity\",\n                    children: item.fraction_str || item.precision_text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 27\n              }, this)\n            }, `${section.section}-${itemIndex}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 21\n          }, this)]\n        }, section.section, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 19\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s(GroceryListPreview, \"OBfDzKTOw0mJo6g6K01SRbysnZA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = GroceryListPreview;\nexport default GroceryListPreview;\nvar _c;\n$RefreshReg$(_c, \"GroceryListPreview\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","GroceryListPreview","_s","location","navigate","groceryList","setGroceryList","planDetails","setPlanDetails","name","isTemporary","loading","setLoading","error","setError","isPrinting","setIsPrinting","state","meals","generateGroceryListFromMeals","planName","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","grocery_list","err","console","message","printGroceryList","setTimeout","window","print","exportGroceryListToCSV","csvContent","forEach","section","items","item","sectionName","replace","itemName","main_text","quantity","unit","precision_text","parts","split","length","slice","join","encodedUri","encodeURI","link","document","createElement","setAttribute","Date","toISOString","appendChild","click","removeChild","savePlan","alert","id","handlePlanNameChange","e","target","value","handleCheckboxChange","sectionIndex","itemIndex","prevList","newList","checked","goToWeeklyPlanner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","fraction_str","_c","$RefreshReg$"],"sources":["G:/GroceriesProject/Kitchenapp/frontend/src/pages/GroceryListPreview.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nfunction GroceryListPreview() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const [groceryList, setGroceryList] = useState([]);\r\n  const [planDetails, setPlanDetails] = useState({\r\n    name: \"Unnamed Meal Plan\",\r\n    isTemporary: true\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isPrinting, setIsPrinting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (location.state && location.state.meals) {\r\n      // If we have meals data in location state, generate grocery list\r\n      generateGroceryListFromMeals(location.state.meals);\r\n      setPlanDetails({\r\n        name: location.state.planName || \"Unnamed Meal Plan\",\r\n        isTemporary: true\r\n      });\r\n    } else {\r\n      // No meals data\r\n      setError(\"No meal plan data found.\");\r\n      setLoading(false);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const generateGroceryListFromMeals = async (meals) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Generate grocery list from meals array without saving the plan\r\n      const response = await fetch(`http://127.0.0.1:5000/api/grocery_list/generate`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          meals: meals\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to generate grocery list\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      setGroceryList(data.grocery_list || []);\r\n      setLoading(false);\r\n\r\n    } catch (err) {\r\n      console.error(\"Error generating grocery list:\", err);\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const printGroceryList = () => {\r\n    setIsPrinting(true);\r\n    setTimeout(() => {\r\n      window.print();\r\n      setIsPrinting(false);\r\n    }, 100);\r\n  };\r\n\r\n  const exportGroceryListToCSV = () => {\r\n    // Create CSV content\r\n    let csvContent = \"Section,Item,Quantity,Unit\\n\";\r\n\r\n    groceryList.forEach(section => {\r\n      section.items.forEach(item => {\r\n        // Clean up the item data and escape any commas\r\n        const sectionName = section.section.replace(/,/g, \" \");\r\n        const itemName = item.main_text ? item.main_text.replace(/,/g, \" \") : \"\";\r\n\r\n        // Extract quantity and unit from precision_text if available\r\n        let quantity = \"\";\r\n        let unit = \"\";\r\n\r\n        if (item.precision_text) {\r\n          // Remove parentheses and split by space\r\n          const parts = item.precision_text.replace(/[()]/g, \"\").split(\" \");\r\n          if (parts.length >= 1) {\r\n            quantity = parts[0];\r\n          }\r\n          if (parts.length >= 2) {\r\n            unit = parts.slice(1).join(\" \");\r\n          }\r\n        }\r\n\r\n        csvContent += `${sectionName},${itemName},${quantity},${unit}\\n`;\r\n      });\r\n    });\r\n\r\n    // Create a download link and trigger it\r\n    const encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", `grocery_list_${new Date().toISOString().split('T')[0]}.csv`);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const savePlan = async () => {\r\n    if (!location.state || !location.state.meals) {\r\n      alert(\"No meal plan data to save.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/api/weekly_plan\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          name: planDetails.name,\r\n          meals: location.state.meals\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to save weekly plan\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      alert(\"Meal plan saved successfully!\");\r\n\r\n      // Navigate to the saved plan's grocery list view\r\n      navigate(`/grocery-list/${data.id}`);\r\n\r\n    } catch (err) {\r\n      console.error(\"Error saving plan:\", err);\r\n      alert(\"Error saving plan: \" + err.message);\r\n    }\r\n  };\r\n\r\n  const handlePlanNameChange = (e) => {\r\n    setPlanDetails({\r\n      ...planDetails,\r\n      name: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleCheckboxChange = (sectionIndex, itemIndex) => {\r\n    setGroceryList(prevList => {\r\n      const newList = [...prevList];\r\n      // Toggle the checked state if it exists, or set to true if it doesn't\r\n      newList[sectionIndex].items[itemIndex].checked =\r\n        !newList[sectionIndex].items[itemIndex].checked;\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  // Go back to weekly planner\r\n  const goToWeeklyPlanner = () => {\r\n    navigate(\"/weekly-planner\");\r\n  };\r\n\r\n  return (\r\n    <div className={`grocery-list-container ${isPrinting ? 'printing' : ''}`}>\r\n      <div className=\"grocery-list-header\">\r\n        <h1>Grocery List Preview</h1>\r\n        <div className=\"plan-name-edit no-print\">\r\n          <input\r\n            type=\"text\"\r\n            value={planDetails.name}\r\n            onChange={handlePlanNameChange}\r\n            placeholder=\"Enter a name for your meal plan\"\r\n          />\r\n        </div>\r\n        <h2 className=\"plan-name print-only\">{planDetails.name}</h2>\r\n      </div>\r\n\r\n      <div className=\"grocery-list-actions no-print\">\r\n        <button className=\"back-btn\" onClick={goToWeeklyPlanner}>\r\n          ← Back to Planner\r\n        </button>\r\n\r\n        <div className=\"action-buttons\">\r\n          <button className=\"save-plan-btn\" onClick={savePlan}>\r\n            Save Meal Plan\r\n          </button>\r\n\r\n          <button className=\"print-btn\" onClick={printGroceryList}>\r\n            Print List\r\n          </button>\r\n\r\n          <button className=\"export-btn\" onClick={exportGroceryListToCSV}>\r\n            Export to CSV\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div className=\"loading\">Generating grocery list...</div>\r\n      ) : error ? (\r\n        <div className=\"error-message\">{error}</div>\r\n      ) : (\r\n        <div className=\"grocery-list-content\">\r\n          {groceryList.length === 0 ? (\r\n            <div className=\"empty-list\">\r\n              <p>No items found in your grocery list.</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"sections-container\">\r\n              {groceryList.map((section, sectionIndex) => (\r\n                section.items && section.items.length > 0 ? (\r\n                  <div key={section.section} className=\"grocery-section\">\r\n                    <h3 className=\"section-title\">{section.section}</h3>\r\n                    <ul className=\"grocery-items\">\r\n                      {section.items.map((item, itemIndex) => (\r\n                        <li\r\n                          key={`${section.section}-${itemIndex}`}\r\n                          className={`grocery-item ${item.checked ? 'checked' : ''}`}\r\n                        >\r\n                          <label className=\"checkbox-container\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"item-checkbox no-print\"\r\n                              checked={item.checked || false}\r\n                              onChange={() => handleCheckboxChange(sectionIndex, itemIndex)}\r\n                            />\r\n                            <span className=\"checkmark no-print\"></span>\r\n                            <div className=\"item-details\">\r\n                              <span className=\"item-name\">{item.main_text}</span>\r\n                              <span className=\"item-quantity\">\r\n                                {item.fraction_str || item.precision_text}\r\n                              </span>\r\n                            </div>\r\n                          </label>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                ) : null\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroceryListPreview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}