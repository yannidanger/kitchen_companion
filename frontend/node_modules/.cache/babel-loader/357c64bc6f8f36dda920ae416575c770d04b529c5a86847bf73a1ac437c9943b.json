{"ast":null,"code":"var _jsxFileName = \"G:\\\\GroceriesProject\\\\Kitchenapp\\\\frontend\\\\src\\\\pages\\\\GroceryListView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroceryListView() {\n  _s();\n  const {\n    planId\n  } = useParams(); // For viewing an existing saved plan's groceries\n  const location = useLocation(); // For previewing groceries without saving\n  const navigate = useNavigate();\n  const [groceryList, setGroceryList] = useState([]);\n  const [planDetails, setPlanDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [isReordering, setIsReordering] = useState(false);\n  const [selectedStore, setSelectedStore] = useState(null);\n  const [detailedView, setDetailedView] = useState(false);\n  const [useUsda, setUseUsda] = useState(true); // New state for USDA integration toggle\n\n  // Define fetch functions with useCallback to avoid dependency issues\n  const fetchGroceryListForPlan = useCallback(async id => {\n    try {\n      setLoading(true);\n\n      // First, fetch plan details\n      const planResponse = await fetch(`http://127.0.0.1:5000/api/weekly_plan/${id}`);\n      if (!planResponse.ok) {\n        throw new Error(\"Failed to fetch plan details\");\n      }\n      const planData = await planResponse.json();\n      setPlanDetails({\n        ...planData,\n        isTemporary: false\n      });\n\n      // Then fetch grocery list with USDA option\n      const groceryResponse = await fetch(`http://127.0.0.1:5000/api/grocery_list?weekly_plan_id=${id}&use_usda=${useUsda}`);\n      if (!groceryResponse.ok) {\n        throw new Error(\"Failed to fetch grocery list\");\n      }\n      const groceryData = await groceryResponse.json();\n      console.log(\"Raw grocery list data:\", groceryData.grocery_list);\n      console.log(\"=== DETAILED API INSPECTION ===\");\n      groceryData.grocery_list.forEach(section => {\n        console.log(`Section: ${section.section}`);\n        section.items.forEach(item => {\n          console.log(`Item: ${item.name}`, {\n            size_exists: 'size' in item,\n            descriptor_exists: 'descriptor' in item,\n            additional_descriptor_exists: 'additional_descriptor' in item,\n            preparation_exists: 'preparation' in item,\n            size: item.size,\n            descriptor: item.descriptor,\n            additional_descriptor: item.additional_descriptor,\n            preparation: item.preparation\n          });\n        });\n      });\n\n      // Sort the grocery list by section order if available\n      const sortedList = groceryData.grocery_list.sort((a, b) => {\n        // Put Uncategorized at the end\n        if (a.section === \"Uncategorized\") return 1;\n        if (b.section === \"Uncategorized\") return -1;\n\n        // Sort by order if available\n        if (a.order !== undefined && b.order !== undefined) {\n          return a.order - b.order;\n        }\n\n        // Fall back to alphabetical order\n        return a.section.localeCompare(b.section);\n      });\n      setGroceryList(sortedList || []);\n      console.log(\"Grocery list data:\", sortedList);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error fetching grocery list:\", err);\n      setError(err.message);\n      setLoading(false);\n    }\n  }, [useUsda]);\n\n  // Update the generateGroceryListFromMeals function similarly\n  const generateGroceryListFromMeals = useCallback(async meals => {\n    try {\n      setLoading(true);\n\n      // Generate grocery list from meals array without saving the plan\n      const response = await fetch(`http://127.0.0.1:5000/api/generate_grocery_list`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          meals: meals,\n          use_usda: useUsda // Add USDA flag\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to generate grocery list\");\n      }\n      const data = await response.json();\n\n      // Sort the grocery list by section order if available\n      const sortedList = data.grocery_list.sort((a, b) => {\n        // Put Uncategorized at the end\n        if (a.section === \"Uncategorized\") return 1;\n        if (b.section === \"Uncategorized\") return -1;\n\n        // Sort by order if available\n        if (a.order !== undefined && b.order !== undefined) {\n          return a.order - b.order;\n        }\n\n        // Fall back to alphabetical order\n        return a.section.localeCompare(b.section);\n      });\n      setGroceryList(sortedList || []);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error generating grocery list:\", err);\n      setError(err.message);\n      setLoading(false);\n    }\n  }, [useUsda]);\n\n  // Initial load effect\n  useEffect(() => {\n    if (planId) {\n      // If planId is provided, fetch the grocery list for this saved plan\n      fetchGroceryListForPlan(planId);\n    } else if (location.state && location.state.meals) {\n      // If we have meals data in location state, generate grocery list without saving\n      generateGroceryListFromMeals(location.state.meals);\n      setPlanDetails({\n        name: location.state.planName || \"Unnamed Meal Plan\",\n        isTemporary: true\n      });\n    } else {\n      // No plan ID or meals data\n      setError(\"No meal plan data found.\");\n      setLoading(false);\n    }\n  }, [planId, location.state, fetchGroceryListForPlan, generateGroceryListFromMeals]);\n\n  // Refetch when USDA mode changes\n  useEffect(() => {\n    if (planId) {\n      fetchGroceryListForPlan(planId);\n    } else if (location.state && location.state.meals) {\n      generateGroceryListFromMeals(location.state.meals);\n    }\n  }, [useUsda, planId, location.state, fetchGroceryListForPlan, generateGroceryListFromMeals]);\n  const saveNewSectionOrder = async () => {\n    try {\n      if (!selectedStore) {\n        // Fetch store if not already selected\n        const storesResponse = await fetch('http://127.0.0.1:5000/api/stores');\n        const storesData = await storesResponse.json();\n        if (storesData.length === 0) {\n          alert('No stores available to save section order');\n          return;\n        }\n        const defaultStore = storesData.find(store => store.is_default) || storesData[0];\n        setSelectedStore(defaultStore.id);\n\n        // Pass the reordered section IDs\n        const sectionIds = groceryList.filter(section => section.sectionId) // Only include sections with IDs\n        .map(section => section.sectionId);\n        await reorderSections(defaultStore.id, sectionIds);\n      } else {\n        const sectionIds = groceryList.filter(section => section.sectionId) // Only include sections with IDs\n        .map(section => section.sectionId);\n        await reorderSections(selectedStore, sectionIds);\n      }\n      setIsReordering(false);\n      alert('Section order saved successfully!');\n    } catch (error) {\n      console.error('Error saving section order:', error);\n      alert('Failed to save section order');\n    }\n  };\n\n  // Function to make API call for reordering\n  const reorderSections = async (storeId, sectionIds) => {\n    if (!sectionIds || sectionIds.length === 0) {\n      alert('No sections to reorder');\n      return;\n    }\n    const response = await fetch(`http://127.0.0.1:5000/api/stores/${storeId}/sections/reorder`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        sections: sectionIds\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to save section order');\n    }\n  };\n  const printGroceryList = () => {\n    setIsPrinting(true);\n    setTimeout(() => {\n      window.print();\n      setIsPrinting(false);\n    }, 100);\n  };\n  const exportGroceryListToCSV = () => {\n    // Create CSV content\n    let csvContent = \"Section,Item,Quantity,Unit,Type\\n\";\n    groceryList.forEach(section => {\n      console.log(\"Processing section:\", section.section);\n      section.items.forEach(item => {\n        // Clean up the item data and escape any commas\n        const sectionName = section.section.replace(/,/g, \" \");\n        const itemName = item.name ? item.name.replace(/,/g, \" \") : \"\";\n        const quantity = item.formatted_combined || \"\";\n        const unit = item.unit ? item.unit.replace(/,/g, \" \") : \"\";\n        const type = item.is_usda ? \"USDA\" : \"Custom\";\n        csvContent += `${sectionName},${itemName},${quantity},${unit},${type}\\n`;\n      });\n    });\n\n    // Create a download link and trigger it\n    const encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", `grocery_list_${new Date().toISOString().split('T')[0]}.csv`);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const savePlan = async () => {\n    if (!(planDetails !== null && planDetails !== void 0 && planDetails.isTemporary) || !location.state || !location.state.meals) {\n      return; // Only save if this is a temporary plan\n    }\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/weekly_plan\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: planDetails.name,\n          meals: location.state.meals\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to save weekly plan\");\n      }\n      const data = await response.json();\n\n      // Update the plan details to reflect it's now saved\n      setPlanDetails({\n        ...planDetails,\n        id: data.id,\n        isTemporary: false\n      });\n      alert(\"Meal plan saved successfully!\");\n    } catch (err) {\n      console.error(\"Error saving plan:\", err);\n      alert(\"Error saving plan: \" + err.message);\n    }\n  };\n\n  // Fixed handleCheckboxChange function to work with grouped items\n  const handleCheckboxChange = (sectionIndex, groupKey) => {\n    console.log(`Toggling checkbox for section ${sectionIndex}, group ${groupKey}`);\n    setGroceryList(prevList => {\n      const newList = JSON.parse(JSON.stringify(prevList)); // Deep copy\n      const section = newList[sectionIndex];\n\n      // Find all items in this section that match the groupKey\n      const groupItems = section.items.filter(item => (item.normalized_name || item.name.toLowerCase()) === groupKey);\n\n      // Determine the new checked state (toggle based on current state)\n      const currentCheckedState = groupItems.length > 0 && groupItems[0].checked;\n      const newCheckedState = !currentCheckedState;\n\n      // Update all matching items\n      console.log(\"Processing section:\", section.section);\n      section.items.forEach(item => {\n        if ((item.normalized_name || item.name.toLowerCase()) === groupKey) {\n          item.checked = newCheckedState;\n        }\n      });\n      return newList;\n    });\n  };\n\n  // Go back to weekly planner\n  const goToWeeklyPlanner = () => {\n    navigate(\"/weekly-planner\");\n  };\n\n  // Toggle USDA mode\n  const toggleUsdaMode = () => {\n    setUseUsda(prev => !prev);\n  };\n\n  // Render USDA badge for an ingredient\n  const renderIngredientBadge = item => {\n    if (item.is_usda) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ingredient-badge usda-badge\",\n        children: \"USDA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ingredient-badge custom-badge\",\n        children: \"Custom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `grocery-list-container ${isPrinting ? 'printing' : ''} ${!detailedView ? 'hide-details' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Grocery List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), planDetails && /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"plan-name\",\n        children: planDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-list-actions no-print\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: goToWeeklyPlanner,\n        children: \"\\u2190 Back to Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [planDetails && planDetails.isTemporary && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-plan-btn\",\n          onClick: savePlan,\n          children: \"Save Meal Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"organize-btn\",\n          onClick: () => navigate('/store-organizer'),\n          children: \"Organize Sections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `reorder-btn ${isReordering ? 'active' : ''}`,\n          onClick: () => setIsReordering(!isReordering),\n          children: isReordering ? 'Done Reordering' : 'Reorder Sections'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"print-btn\",\n          onClick: printGroceryList,\n          children: \"Print List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"export-btn\",\n          onClick: exportGroceryListToCSV,\n          children: \"Export to CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `detail-toggle-btn ${detailedView ? 'active' : ''}`,\n          onClick: () => setDetailedView(!detailedView),\n          children: detailedView ? 'Simple View' : 'Detailed View'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `usda-toggle-btn ${useUsda ? 'active' : ''}`,\n          onClick: toggleUsdaMode,\n          children: useUsda ? 'USDA Enabled' : 'USDA Disabled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), useUsda && !isReordering && !isPrinting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ingredient-legend no-print\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ingredient-badge usda-badge\",\n          children: \"USDA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Standardized USDA ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ingredient-badge custom-badge\",\n          children: \"Custom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Custom user-created ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }, this), isReordering && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reordering-actions no-print\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag sections to reorder them\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-order-btn\",\n        onClick: saveNewSectionOrder,\n        children: \"Save New Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading grocery list...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 9\n    }, this) : isReordering ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections-container reordering\",\n      children: groceryList.map((section, sectionIndex) => section.items && section.items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grocery-section reorderable\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: section.section\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-count\",\n          children: [section.items.length, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reorder-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"move-up-btn\",\n            disabled: sectionIndex === 0,\n            onClick: () => {\n              const newList = [...groceryList];\n              [newList[sectionIndex], newList[sectionIndex - 1]] = [newList[sectionIndex - 1], newList[sectionIndex]];\n              setGroceryList(newList);\n            },\n            children: \"\\u2191\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"move-down-btn\",\n            disabled: sectionIndex === groceryList.length - 1,\n            onClick: () => {\n              const newList = [...groceryList];\n              [newList[sectionIndex], newList[sectionIndex + 1]] = [newList[sectionIndex + 1], newList[sectionIndex]];\n              setGroceryList(newList);\n            },\n            children: \"\\u2193\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 19\n        }, this)]\n      }, section.section, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }, this) : null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections-container\",\n      children: groceryList.map((section, sectionIndex) => section.items && section.items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grocery-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: section.section\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"grocery-items\",\n          children: (() => {\n            // Group items by normalized name\n            const groupedItems = {};\n            console.log(\"Processing section:\", section.section);\n            section.items.forEach(item => {\n              const key = item.normalized_name || item.name.toLowerCase();\n              if (!groupedItems[key]) {\n                // Initialize the group with the first item\n                groupedItems[key] = {\n                  name: item.name,\n                  normalized_name: key,\n                  checked: item.checked || false,\n                  quantities: item.quantities || [],\n                  unit: item.unit || '',\n                  combined_quantity: item.combined_quantity || 0,\n                  formatted_combined: item.formatted_combined || '',\n                  has_multiple_units: item.has_multiple_units || false,\n                  is_usda: item.is_usda || false,\n                  usda_fdc_id: item.usda_fdc_id || null,\n                  // Make sure these fields are preserved\n                  size: item.size || '',\n                  descriptor: item.descriptor || '',\n                  additional_descriptor: item.additional_descriptor || '' // Keep original field name\n                };\n              } else {\n                // Update checked state (if any item is checked, the group is checked)\n                if (item.checked) {\n                  groupedItems[key].checked = true;\n                }\n\n                // Update USDA status (if any item is USDA, the group is USDA)\n                if (item.is_usda) {\n                  groupedItems[key].is_usda = true;\n                  groupedItems[key].usda_fdc_id = item.usda_fdc_id;\n                }\n\n                // Ensure quantities array exists and is populated\n                if (item.quantities && item.quantities.length) {\n                  if (!groupedItems[key].quantities) {\n                    groupedItems[key].quantities = [];\n                  }\n                  // Only add quantities that aren't already in the group\n                  item.quantities.forEach(qty => {\n                    if (!groupedItems[key].quantities.some(existingQty => existingQty.recipe_id === qty.recipe_id && existingQty.quantity_text === qty.quantity_text)) {\n                      groupedItems[key].quantities.push(qty);\n                    }\n                  });\n                }\n              }\n            });\n\n            // Render the grouped items\n            return Object.entries(groupedItems).map(([key, group], groupIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `grocery-item ${group.checked ? 'checked' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"checkbox-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: \"item-checkbox no-print\",\n                  checked: group.checked || false,\n                  onChange: () => handleCheckboxChange(sectionIndex, key)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"checkmark no-print\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"item-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"item-name\",\n                    children: [group.name || \"Unnamed Item\", useUsda && renderIngredientBadge(group)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 31\n                  }, this), detailedView ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"item-quantities\",\n                    children: group.quantities && group.quantities.length > 0 ? group.quantities.map((qty, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"quantity-entry\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"quantity-value\",\n                        children: qty.quantity_text\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 557,\n                        columnNumber: 41\n                      }, this), (group.size || group.descriptor || group.additional_descriptor) && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"detailed-info\",\n                        children: [group.size && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"item-size\",\n                          children: group.size\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 562,\n                          columnNumber: 60\n                        }, this), group.descriptor && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"item-descriptor\",\n                          children: [group.size ? ', ' : '', group.descriptor]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 564,\n                          columnNumber: 47\n                        }, this), group.additional_descriptor && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"item-preparation\",\n                          children: [group.size || group.descriptor ? ', ' : '', group.additional_descriptor]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 569,\n                          columnNumber: 47\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 561,\n                        columnNumber: 43\n                      }, this), qty.source && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"quantity-source\",\n                        children: [\"from \", qty.source]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 579,\n                        columnNumber: 43\n                      }, this)]\n                    }, qIndex, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 555,\n                      columnNumber: 39\n                    }, this)) :\n                    /*#__PURE__*/\n                    // Fallback display\n                    _jsxDEV(\"span\", {\n                      className: \"item-quantity\",\n                      children: [group.formatted_combined || (group.combined_quantity && group.unit ? `${group.combined_quantity} ${group.unit}` : \"\"), (group.size || group.descriptor || group.additional_descriptor) && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"detailed-info\",\n                        children: [group.size && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"item-size\",\n                          children: group.size\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 593,\n                          columnNumber: 58\n                        }, this), group.descriptor && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"item-descriptor\",\n                          children: [group.size ? ', ' : '', group.descriptor]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 595,\n                          columnNumber: 45\n                        }, this), group.additional_descriptor && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"item-preparation\",\n                          children: [group.size || group.descriptor ? ', ' : '', group.additional_descriptor]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 600,\n                          columnNumber: 45\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 592,\n                        columnNumber: 41\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 585,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 33\n                  }, this) :\n                  /*#__PURE__*/\n                  // Simple view remains unchanged\n                  _jsxDEV(\"span\", {\n                    className: \"item-quantity\",\n                    children: group.formatted_combined || \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 27\n              }, this)\n            }, `${section.section}-${key}-${groupIndex}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 25\n            }, this));\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 19\n        }, this)]\n      }, section.section, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }, this) : null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 5\n  }, this);\n}\n_s(GroceryListView, \"TxoYtALMdArJpEm5DLhB4SnvjQ8=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = GroceryListView;\nexport default GroceryListView;\nvar _c;\n$RefreshReg$(_c, \"GroceryListView\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useLocation","useNavigate","jsxDEV","_jsxDEV","GroceryListView","_s","planId","location","navigate","groceryList","setGroceryList","planDetails","setPlanDetails","loading","setLoading","error","setError","isPrinting","setIsPrinting","isReordering","setIsReordering","selectedStore","setSelectedStore","detailedView","setDetailedView","useUsda","setUseUsda","fetchGroceryListForPlan","id","planResponse","fetch","ok","Error","planData","json","isTemporary","groceryResponse","groceryData","console","log","grocery_list","forEach","section","items","item","name","size_exists","descriptor_exists","additional_descriptor_exists","preparation_exists","size","descriptor","additional_descriptor","preparation","sortedList","sort","a","b","order","undefined","localeCompare","err","message","generateGroceryListFromMeals","meals","response","method","headers","body","JSON","stringify","use_usda","data","state","planName","saveNewSectionOrder","storesResponse","storesData","length","alert","defaultStore","find","store","is_default","sectionIds","filter","sectionId","map","reorderSections","storeId","sections","printGroceryList","setTimeout","window","print","exportGroceryListToCSV","csvContent","sectionName","replace","itemName","quantity","formatted_combined","unit","type","is_usda","encodedUri","encodeURI","link","document","createElement","setAttribute","Date","toISOString","split","appendChild","click","removeChild","savePlan","handleCheckboxChange","sectionIndex","groupKey","prevList","newList","parse","groupItems","normalized_name","toLowerCase","currentCheckedState","checked","newCheckedState","goToWeeklyPlanner","toggleUsdaMode","prev","renderIngredientBadge","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","groupedItems","key","quantities","combined_quantity","has_multiple_units","usda_fdc_id","qty","some","existingQty","recipe_id","quantity_text","push","Object","entries","group","groupIndex","onChange","qIndex","source","_c","$RefreshReg$"],"sources":["G:/GroceriesProject/Kitchenapp/frontend/src/pages/GroceryListView.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nfunction GroceryListView() {\r\n  const { planId } = useParams(); // For viewing an existing saved plan's groceries\r\n  const location = useLocation(); // For previewing groceries without saving\r\n  const navigate = useNavigate();\r\n\r\n  const [groceryList, setGroceryList] = useState([]);\r\n  const [planDetails, setPlanDetails] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isPrinting, setIsPrinting] = useState(false);\r\n  const [isReordering, setIsReordering] = useState(false);\r\n  const [selectedStore, setSelectedStore] = useState(null);\r\n  const [detailedView, setDetailedView] = useState(false);\r\n  const [useUsda, setUseUsda] = useState(true); // New state for USDA integration toggle\r\n\r\n  // Define fetch functions with useCallback to avoid dependency issues\r\n  const fetchGroceryListForPlan = useCallback(async (id) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // First, fetch plan details\r\n      const planResponse = await fetch(`http://127.0.0.1:5000/api/weekly_plan/${id}`);\r\n      if (!planResponse.ok) {\r\n        throw new Error(\"Failed to fetch plan details\");\r\n      }\r\n\r\n      const planData = await planResponse.json();\r\n      setPlanDetails({\r\n        ...planData,\r\n        isTemporary: false\r\n      });\r\n\r\n      // Then fetch grocery list with USDA option\r\n      const groceryResponse = await fetch(`http://127.0.0.1:5000/api/grocery_list?weekly_plan_id=${id}&use_usda=${useUsda}`);\r\n      if (!groceryResponse.ok) {\r\n        throw new Error(\"Failed to fetch grocery list\");\r\n      }\r\n\r\n      const groceryData = await groceryResponse.json();\r\n      console.log(\"Raw grocery list data:\", groceryData.grocery_list);\r\n\r\n      console.log(\"=== DETAILED API INSPECTION ===\");\r\n      groceryData.grocery_list.forEach(section => {\r\n        console.log(`Section: ${section.section}`);\r\n        section.items.forEach(item => {\r\n          console.log(`Item: ${item.name}`, {\r\n            size_exists: 'size' in item,\r\n            descriptor_exists: 'descriptor' in item,\r\n            additional_descriptor_exists: 'additional_descriptor' in item,\r\n            preparation_exists: 'preparation' in item,\r\n            size: item.size,\r\n            descriptor: item.descriptor,\r\n            additional_descriptor: item.additional_descriptor,\r\n            preparation: item.preparation\r\n          });\r\n        });\r\n      });\r\n\r\n      // Sort the grocery list by section order if available\r\n      const sortedList = groceryData.grocery_list.sort((a, b) => {\r\n        // Put Uncategorized at the end\r\n        if (a.section === \"Uncategorized\") return 1;\r\n        if (b.section === \"Uncategorized\") return -1;\r\n\r\n        // Sort by order if available\r\n        if (a.order !== undefined && b.order !== undefined) {\r\n          return a.order - b.order;\r\n        }\r\n\r\n        // Fall back to alphabetical order\r\n        return a.section.localeCompare(b.section);\r\n      });\r\n\r\n      setGroceryList(sortedList || []);\r\n      console.log(\"Grocery list data:\", sortedList);\r\n      setLoading(false);\r\n\r\n    } catch (err) {\r\n      console.error(\"Error fetching grocery list:\", err);\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  }, [useUsda]);\r\n\r\n  // Update the generateGroceryListFromMeals function similarly\r\n  const generateGroceryListFromMeals = useCallback(async (meals) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Generate grocery list from meals array without saving the plan\r\n      const response = await fetch(`http://127.0.0.1:5000/api/generate_grocery_list`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          meals: meals,\r\n          use_usda: useUsda // Add USDA flag\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to generate grocery list\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // Sort the grocery list by section order if available\r\n      const sortedList = data.grocery_list.sort((a, b) => {\r\n        // Put Uncategorized at the end\r\n        if (a.section === \"Uncategorized\") return 1;\r\n        if (b.section === \"Uncategorized\") return -1;\r\n\r\n        // Sort by order if available\r\n        if (a.order !== undefined && b.order !== undefined) {\r\n          return a.order - b.order;\r\n        }\r\n\r\n        // Fall back to alphabetical order\r\n        return a.section.localeCompare(b.section);\r\n      });\r\n\r\n      setGroceryList(sortedList || []);\r\n      setLoading(false);\r\n\r\n    } catch (err) {\r\n      console.error(\"Error generating grocery list:\", err);\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  }, [useUsda]);\r\n\r\n  // Initial load effect\r\n  useEffect(() => {\r\n    if (planId) {\r\n      // If planId is provided, fetch the grocery list for this saved plan\r\n      fetchGroceryListForPlan(planId);\r\n    } else if (location.state && location.state.meals) {\r\n      // If we have meals data in location state, generate grocery list without saving\r\n      generateGroceryListFromMeals(location.state.meals);\r\n      setPlanDetails({\r\n        name: location.state.planName || \"Unnamed Meal Plan\",\r\n        isTemporary: true\r\n      });\r\n    } else {\r\n      // No plan ID or meals data\r\n      setError(\"No meal plan data found.\");\r\n      setLoading(false);\r\n    }\r\n  }, [planId, location.state, fetchGroceryListForPlan, generateGroceryListFromMeals]);\r\n\r\n  // Refetch when USDA mode changes\r\n  useEffect(() => {\r\n    if (planId) {\r\n      fetchGroceryListForPlan(planId);\r\n    } else if (location.state && location.state.meals) {\r\n      generateGroceryListFromMeals(location.state.meals);\r\n    }\r\n  }, [useUsda, planId, location.state, fetchGroceryListForPlan, generateGroceryListFromMeals]);\r\n\r\n  const saveNewSectionOrder = async () => {\r\n    try {\r\n      if (!selectedStore) {\r\n        // Fetch store if not already selected\r\n        const storesResponse = await fetch('http://127.0.0.1:5000/api/stores');\r\n        const storesData = await storesResponse.json();\r\n\r\n        if (storesData.length === 0) {\r\n          alert('No stores available to save section order');\r\n          return;\r\n        }\r\n\r\n        const defaultStore = storesData.find(store => store.is_default) || storesData[0];\r\n        setSelectedStore(defaultStore.id);\r\n\r\n        // Pass the reordered section IDs\r\n        const sectionIds = groceryList\r\n          .filter(section => section.sectionId) // Only include sections with IDs\r\n          .map(section => section.sectionId);\r\n        await reorderSections(defaultStore.id, sectionIds);\r\n      } else {\r\n        const sectionIds = groceryList\r\n          .filter(section => section.sectionId) // Only include sections with IDs\r\n          .map(section => section.sectionId);\r\n        await reorderSections(selectedStore, sectionIds);\r\n      }\r\n\r\n      setIsReordering(false);\r\n      alert('Section order saved successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving section order:', error);\r\n      alert('Failed to save section order');\r\n    }\r\n  };\r\n\r\n  // Function to make API call for reordering\r\n  const reorderSections = async (storeId, sectionIds) => {\r\n    if (!sectionIds || sectionIds.length === 0) {\r\n      alert('No sections to reorder');\r\n      return;\r\n    }\r\n\r\n    const response = await fetch(`http://127.0.0.1:5000/api/stores/${storeId}/sections/reorder`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        sections: sectionIds\r\n      })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to save section order');\r\n    }\r\n  };\r\n\r\n  const printGroceryList = () => {\r\n    setIsPrinting(true);\r\n    setTimeout(() => {\r\n      window.print();\r\n      setIsPrinting(false);\r\n    }, 100);\r\n  };\r\n\r\n  const exportGroceryListToCSV = () => {\r\n    // Create CSV content\r\n    let csvContent = \"Section,Item,Quantity,Unit,Type\\n\";\r\n\r\n    groceryList.forEach(section => {\r\n      console.log(\"Processing section:\", section.section);\r\n      section.items.forEach(item => {\r\n        // Clean up the item data and escape any commas\r\n        const sectionName = section.section.replace(/,/g, \" \");\r\n        const itemName = item.name ? item.name.replace(/,/g, \" \") : \"\";\r\n        const quantity = item.formatted_combined || \"\";\r\n        const unit = item.unit ? item.unit.replace(/,/g, \" \") : \"\";\r\n        const type = item.is_usda ? \"USDA\" : \"Custom\";\r\n\r\n        csvContent += `${sectionName},${itemName},${quantity},${unit},${type}\\n`;\r\n      });\r\n    });\r\n\r\n    // Create a download link and trigger it\r\n    const encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", `grocery_list_${new Date().toISOString().split('T')[0]}.csv`);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const savePlan = async () => {\r\n    if (!planDetails?.isTemporary || !location.state || !location.state.meals) {\r\n      return; // Only save if this is a temporary plan\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/api/weekly_plan\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          name: planDetails.name,\r\n          meals: location.state.meals\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to save weekly plan\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // Update the plan details to reflect it's now saved\r\n      setPlanDetails({\r\n        ...planDetails,\r\n        id: data.id,\r\n        isTemporary: false\r\n      });\r\n\r\n      alert(\"Meal plan saved successfully!\");\r\n\r\n    } catch (err) {\r\n      console.error(\"Error saving plan:\", err);\r\n      alert(\"Error saving plan: \" + err.message);\r\n    }\r\n  };\r\n\r\n  // Fixed handleCheckboxChange function to work with grouped items\r\n  const handleCheckboxChange = (sectionIndex, groupKey) => {\r\n    console.log(`Toggling checkbox for section ${sectionIndex}, group ${groupKey}`);\r\n\r\n    setGroceryList(prevList => {\r\n      const newList = JSON.parse(JSON.stringify(prevList)); // Deep copy\r\n      const section = newList[sectionIndex];\r\n\r\n      // Find all items in this section that match the groupKey\r\n      const groupItems = section.items.filter(item =>\r\n        (item.normalized_name || item.name.toLowerCase()) === groupKey\r\n      );\r\n\r\n      // Determine the new checked state (toggle based on current state)\r\n      const currentCheckedState = groupItems.length > 0 && groupItems[0].checked;\r\n      const newCheckedState = !currentCheckedState;\r\n\r\n      // Update all matching items\r\n      console.log(\"Processing section:\", section.section);\r\n      section.items.forEach(item => {\r\n        if ((item.normalized_name || item.name.toLowerCase()) === groupKey) {\r\n          item.checked = newCheckedState;\r\n        }\r\n      });\r\n\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  // Go back to weekly planner\r\n  const goToWeeklyPlanner = () => {\r\n    navigate(\"/weekly-planner\");\r\n  };\r\n\r\n  // Toggle USDA mode\r\n  const toggleUsdaMode = () => {\r\n    setUseUsda(prev => !prev);\r\n  };\r\n\r\n  // Render USDA badge for an ingredient\r\n  const renderIngredientBadge = (item) => {\r\n    if (item.is_usda) {\r\n      return <span className=\"ingredient-badge usda-badge\">USDA</span>;\r\n    } else {\r\n      return <span className=\"ingredient-badge custom-badge\">Custom</span>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`grocery-list-container ${isPrinting ? 'printing' : ''} ${!detailedView ? 'hide-details' : ''}`}>\r\n      <div className=\"grocery-list-header\">\r\n        <h1>Grocery List</h1>\r\n        {planDetails && (\r\n          <h2 className=\"plan-name\">{planDetails.name}</h2>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"grocery-list-actions no-print\">\r\n        <button className=\"back-btn\" onClick={goToWeeklyPlanner}>\r\n          ← Back to Planner\r\n        </button>\r\n\r\n        <div className=\"action-buttons\">\r\n          {planDetails && planDetails.isTemporary && (\r\n            <button className=\"save-plan-btn\" onClick={savePlan}>\r\n              Save Meal Plan\r\n            </button>\r\n          )}\r\n\r\n          <button\r\n            className=\"organize-btn\"\r\n            onClick={() => navigate('/store-organizer')}>\r\n            Organize Sections\r\n          </button>\r\n\r\n          {/* Add this new reorder button */}\r\n          <button\r\n            className={`reorder-btn ${isReordering ? 'active' : ''}`}\r\n            onClick={() => setIsReordering(!isReordering)}>\r\n            {isReordering ? 'Done Reordering' : 'Reorder Sections'}\r\n          </button>\r\n\r\n          <button className=\"print-btn\" onClick={printGroceryList}>\r\n            Print List\r\n          </button>\r\n\r\n          <button className=\"export-btn\" onClick={exportGroceryListToCSV}>\r\n            Export to CSV\r\n          </button>\r\n\r\n          <button\r\n            className={`detail-toggle-btn ${detailedView ? 'active' : ''}`}\r\n            onClick={() => setDetailedView(!detailedView)}\r\n          >\r\n            {detailedView ? 'Simple View' : 'Detailed View'}\r\n          </button>\r\n\r\n          {/* Add USDA toggle button */}\r\n          <button\r\n            className={`usda-toggle-btn ${useUsda ? 'active' : ''}`}\r\n            onClick={toggleUsdaMode}\r\n          >\r\n            {useUsda ? 'USDA Enabled' : 'USDA Disabled'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* USDA legend when enabled */}\r\n      {useUsda && !isReordering && !isPrinting && (\r\n        <div className=\"ingredient-legend no-print\">\r\n          <div className=\"legend-item\">\r\n            <span className=\"ingredient-badge usda-badge\">USDA</span>\r\n            <span>Standardized USDA ingredients</span>\r\n          </div>\r\n          <div className=\"legend-item\">\r\n            <span className=\"ingredient-badge custom-badge\">Custom</span>\r\n            <span>Custom user-created ingredients</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Show save button when reordering */}\r\n      {isReordering && (\r\n        <div className=\"reordering-actions no-print\">\r\n          <p>Drag sections to reorder them</p>\r\n          <button className=\"save-order-btn\" onClick={saveNewSectionOrder}>\r\n            Save New Order\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {loading ? (\r\n        <div className=\"loading\">Loading grocery list...</div>\r\n      ) : error ? (\r\n        <div className=\"error-message\">{error}</div>\r\n      ) : (\r\n        isReordering ? (\r\n          <div className=\"sections-container reordering\">\r\n            {groceryList.map((section, sectionIndex) => (\r\n              section.items && section.items.length > 0 ? (\r\n                <div key={section.section} className=\"grocery-section reorderable\">\r\n                  <h3 className=\"section-title\">{section.section}</h3>\r\n                  <div className=\"item-count\">{section.items.length} items</div>\r\n                  <div className=\"reorder-buttons\">\r\n                    <button\r\n                      className=\"move-up-btn\"\r\n                      disabled={sectionIndex === 0}\r\n                      onClick={() => {\r\n                        const newList = [...groceryList];\r\n                        [newList[sectionIndex], newList[sectionIndex - 1]] =\r\n                          [newList[sectionIndex - 1], newList[sectionIndex]];\r\n                        setGroceryList(newList);\r\n                      }}\r\n                    >\r\n                      ↑\r\n                    </button>\r\n                    <button\r\n                      className=\"move-down-btn\"\r\n                      disabled={sectionIndex === groceryList.length - 1}\r\n                      onClick={() => {\r\n                        const newList = [...groceryList];\r\n                        [newList[sectionIndex], newList[sectionIndex + 1]] =\r\n                          [newList[sectionIndex + 1], newList[sectionIndex]];\r\n                        setGroceryList(newList);\r\n                      }}\r\n                    >\r\n                      ↓\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : null\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"sections-container\">\r\n            {groceryList.map((section, sectionIndex) => (\r\n              section.items && section.items.length > 0 ? (\r\n                <div key={section.section} className=\"grocery-section\">\r\n                  <h3 className=\"section-title\">{section.section}</h3>\r\n                  <ul className=\"grocery-items\">\r\n                    {/* Group items by normalized name for display */}\r\n                    {(() => {\r\n                      // Group items by normalized name\r\n                      const groupedItems = {};\r\n                      console.log(\"Processing section:\", section.section);\r\n\r\n                      section.items.forEach(item => {\r\n                        const key = item.normalized_name || item.name.toLowerCase();\r\n\r\n                        if (!groupedItems[key]) {\r\n                          // Initialize the group with the first item\r\n                          groupedItems[key] = {\r\n                            name: item.name,\r\n                            normalized_name: key,\r\n                            checked: item.checked || false,\r\n                            quantities: item.quantities || [],\r\n                            unit: item.unit || '',\r\n                            combined_quantity: item.combined_quantity || 0,\r\n                            formatted_combined: item.formatted_combined || '',\r\n                            has_multiple_units: item.has_multiple_units || false,\r\n                            is_usda: item.is_usda || false,\r\n                            usda_fdc_id: item.usda_fdc_id || null,\r\n                            // Make sure these fields are preserved\r\n                            size: item.size || '',\r\n                            descriptor: item.descriptor || '',\r\n                            additional_descriptor: item.additional_descriptor || ''  // Keep original field name\r\n                          };\r\n                        } else {\r\n                          // Update checked state (if any item is checked, the group is checked)\r\n                          if (item.checked) {\r\n                            groupedItems[key].checked = true;\r\n                          }\r\n\r\n                          // Update USDA status (if any item is USDA, the group is USDA)\r\n                          if (item.is_usda) {\r\n                            groupedItems[key].is_usda = true;\r\n                            groupedItems[key].usda_fdc_id = item.usda_fdc_id;\r\n                          }\r\n\r\n                          // Ensure quantities array exists and is populated\r\n                          if (item.quantities && item.quantities.length) {\r\n                            if (!groupedItems[key].quantities) {\r\n                              groupedItems[key].quantities = [];\r\n                            }\r\n                            // Only add quantities that aren't already in the group\r\n                            item.quantities.forEach(qty => {\r\n                              if (!groupedItems[key].quantities.some(\r\n                                existingQty => existingQty.recipe_id === qty.recipe_id &&\r\n                                  existingQty.quantity_text === qty.quantity_text)) {\r\n                                groupedItems[key].quantities.push(qty);\r\n                              }\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n\r\n                      // Render the grouped items\r\n                      return Object.entries(groupedItems).map(([key, group], groupIndex) => (\r\n                        <li\r\n                          key={`${section.section}-${key}-${groupIndex}`}\r\n                          className={`grocery-item ${group.checked ? 'checked' : ''}`}\r\n                        >\r\n                          <label className=\"checkbox-container\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"item-checkbox no-print\"\r\n                              checked={group.checked || false}\r\n                              onChange={() => handleCheckboxChange(sectionIndex, key)}\r\n                            />\r\n                            <span className=\"checkmark no-print\"></span>\r\n                            <div className=\"item-details\">\r\n                              <span className=\"item-name\">\r\n                                {group.name || \"Unnamed Item\"}\r\n                                {useUsda && renderIngredientBadge(group)}\r\n                              </span>\r\n\r\n                              {detailedView ? (\r\n                                <div className=\"item-quantities\">\r\n                                  {group.quantities && group.quantities.length > 0 ? (\r\n                                    group.quantities.map((qty, qIndex) => (\r\n                                      <div key={qIndex} className=\"quantity-entry\">\r\n                                        {/* Base quantity and unit */}\r\n                                        <span className=\"quantity-value\">{qty.quantity_text}</span>\r\n\r\n                                        {/* Additional descriptive fields - only show if any exists */}\r\n                                        {(group.size || group.descriptor || group.additional_descriptor) && (\r\n                                          <span className=\"detailed-info\">\r\n                                            {group.size && <span className=\"item-size\">{group.size}</span>}\r\n                                            {group.descriptor && (\r\n                                              <span className=\"item-descriptor\">\r\n                                                {group.size ? ', ' : ''}{group.descriptor}\r\n                                              </span>\r\n                                            )}\r\n                                            {group.additional_descriptor && (\r\n                                              <span className=\"item-preparation\">\r\n                                                {(group.size || group.descriptor) ? ', ' : ''}\r\n                                                {group.additional_descriptor}\r\n                                              </span>\r\n                                            )}\r\n                                          </span>\r\n                                        )}\r\n\r\n                                        {/* Recipe source */}\r\n                                        {qty.source && (\r\n                                          <span className=\"quantity-source\">from {qty.source}</span>\r\n                                        )}\r\n                                      </div>\r\n                                    ))\r\n                                  ) : (\r\n                                    // Fallback display\r\n                                    <span className=\"item-quantity\">\r\n                                      {group.formatted_combined ||\r\n                                        (group.combined_quantity && group.unit ?\r\n                                          `${group.combined_quantity} ${group.unit}` : \"\")}\r\n\r\n                                      {/* Additional fields in fallback case - only show if any exists */}\r\n                                      {(group.size || group.descriptor || group.additional_descriptor) && (\r\n                                        <span className=\"detailed-info\">\r\n                                          {group.size && <span className=\"item-size\">{group.size}</span>}\r\n                                          {group.descriptor && (\r\n                                            <span className=\"item-descriptor\">\r\n                                              {group.size ? ', ' : ''}{group.descriptor}\r\n                                            </span>\r\n                                          )}\r\n                                          {group.additional_descriptor && (\r\n                                            <span className=\"item-preparation\">\r\n                                              {(group.size || group.descriptor) ? ', ' : ''}\r\n                                              {group.additional_descriptor}\r\n                                            </span>\r\n                                          )}\r\n                                        </span>\r\n                                      )}\r\n                                    </span>\r\n                                  )}\r\n                                </div>\r\n                              ) : (\r\n                                // Simple view remains unchanged\r\n                                <span className=\"item-quantity\">\r\n                                  {group.formatted_combined || \"\"}\r\n                                </span>\r\n                              )}\r\n                            </div>\r\n                          </label>\r\n                        </li>\r\n                      ));\r\n                    })()}\r\n                  </ul>\r\n                </div>\r\n              ) : null\r\n            ))}\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroceryListView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,SAAS,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC2B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAM+B,uBAAuB,GAAG7B,WAAW,CAAC,MAAO8B,EAAE,IAAK;IACxD,IAAI;MACFd,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,MAAMe,YAAY,GAAG,MAAMC,KAAK,CAAC,yCAAyCF,EAAE,EAAE,CAAC;MAC/E,IAAI,CAACC,YAAY,CAACE,EAAE,EAAE;QACpB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEA,MAAMC,QAAQ,GAAG,MAAMJ,YAAY,CAACK,IAAI,CAAC,CAAC;MAC1CtB,cAAc,CAAC;QACb,GAAGqB,QAAQ;QACXE,WAAW,EAAE;MACf,CAAC,CAAC;;MAEF;MACA,MAAMC,eAAe,GAAG,MAAMN,KAAK,CAAC,yDAAyDF,EAAE,aAAaH,OAAO,EAAE,CAAC;MACtH,IAAI,CAACW,eAAe,CAACL,EAAE,EAAE;QACvB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEA,MAAMK,WAAW,GAAG,MAAMD,eAAe,CAACF,IAAI,CAAC,CAAC;MAChDI,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,WAAW,CAACG,YAAY,CAAC;MAE/DF,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9CF,WAAW,CAACG,YAAY,CAACC,OAAO,CAACC,OAAO,IAAI;QAC1CJ,OAAO,CAACC,GAAG,CAAC,YAAYG,OAAO,CAACA,OAAO,EAAE,CAAC;QAC1CA,OAAO,CAACC,KAAK,CAACF,OAAO,CAACG,IAAI,IAAI;UAC5BN,OAAO,CAACC,GAAG,CAAC,SAASK,IAAI,CAACC,IAAI,EAAE,EAAE;YAChCC,WAAW,EAAE,MAAM,IAAIF,IAAI;YAC3BG,iBAAiB,EAAE,YAAY,IAAIH,IAAI;YACvCI,4BAA4B,EAAE,uBAAuB,IAAIJ,IAAI;YAC7DK,kBAAkB,EAAE,aAAa,IAAIL,IAAI;YACzCM,IAAI,EAAEN,IAAI,CAACM,IAAI;YACfC,UAAU,EAAEP,IAAI,CAACO,UAAU;YAC3BC,qBAAqB,EAAER,IAAI,CAACQ,qBAAqB;YACjDC,WAAW,EAAET,IAAI,CAACS;UACpB,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACA,MAAMC,UAAU,GAAGjB,WAAW,CAACG,YAAY,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACzD;QACA,IAAID,CAAC,CAACd,OAAO,KAAK,eAAe,EAAE,OAAO,CAAC;QAC3C,IAAIe,CAAC,CAACf,OAAO,KAAK,eAAe,EAAE,OAAO,CAAC,CAAC;;QAE5C;QACA,IAAIc,CAAC,CAACE,KAAK,KAAKC,SAAS,IAAIF,CAAC,CAACC,KAAK,KAAKC,SAAS,EAAE;UAClD,OAAOH,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK;QAC1B;;QAEA;QACA,OAAOF,CAAC,CAACd,OAAO,CAACkB,aAAa,CAACH,CAAC,CAACf,OAAO,CAAC;MAC3C,CAAC,CAAC;MAEFhC,cAAc,CAAC4C,UAAU,IAAI,EAAE,CAAC;MAChChB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEe,UAAU,CAAC;MAC7CxC,UAAU,CAAC,KAAK,CAAC;IAEnB,CAAC,CAAC,OAAO+C,GAAG,EAAE;MACZvB,OAAO,CAACvB,KAAK,CAAC,8BAA8B,EAAE8C,GAAG,CAAC;MAClD7C,QAAQ,CAAC6C,GAAG,CAACC,OAAO,CAAC;MACrBhD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACW,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMsC,4BAA4B,GAAGjE,WAAW,CAAC,MAAOkE,KAAK,IAAK;IAChE,IAAI;MACFlD,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,MAAMmD,QAAQ,GAAG,MAAMnC,KAAK,CAAC,iDAAiD,EAAE;QAC9EoC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBN,KAAK,EAAEA,KAAK;UACZO,QAAQ,EAAE9C,OAAO,CAAC;QACpB,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACwC,QAAQ,CAAClC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;MACpD;MAEA,MAAMwC,IAAI,GAAG,MAAMP,QAAQ,CAAC/B,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMoB,UAAU,GAAGkB,IAAI,CAAChC,YAAY,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAClD;QACA,IAAID,CAAC,CAACd,OAAO,KAAK,eAAe,EAAE,OAAO,CAAC;QAC3C,IAAIe,CAAC,CAACf,OAAO,KAAK,eAAe,EAAE,OAAO,CAAC,CAAC;;QAE5C;QACA,IAAIc,CAAC,CAACE,KAAK,KAAKC,SAAS,IAAIF,CAAC,CAACC,KAAK,KAAKC,SAAS,EAAE;UAClD,OAAOH,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK;QAC1B;;QAEA;QACA,OAAOF,CAAC,CAACd,OAAO,CAACkB,aAAa,CAACH,CAAC,CAACf,OAAO,CAAC;MAC3C,CAAC,CAAC;MAEFhC,cAAc,CAAC4C,UAAU,IAAI,EAAE,CAAC;MAChCxC,UAAU,CAAC,KAAK,CAAC;IAEnB,CAAC,CAAC,OAAO+C,GAAG,EAAE;MACZvB,OAAO,CAACvB,KAAK,CAAC,gCAAgC,EAAE8C,GAAG,CAAC;MACpD7C,QAAQ,CAAC6C,GAAG,CAACC,OAAO,CAAC;MACrBhD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACW,OAAO,CAAC,CAAC;;EAEb;EACA5B,SAAS,CAAC,MAAM;IACd,IAAIS,MAAM,EAAE;MACV;MACAqB,uBAAuB,CAACrB,MAAM,CAAC;IACjC,CAAC,MAAM,IAAIC,QAAQ,CAACkE,KAAK,IAAIlE,QAAQ,CAACkE,KAAK,CAACT,KAAK,EAAE;MACjD;MACAD,4BAA4B,CAACxD,QAAQ,CAACkE,KAAK,CAACT,KAAK,CAAC;MAClDpD,cAAc,CAAC;QACbiC,IAAI,EAAEtC,QAAQ,CAACkE,KAAK,CAACC,QAAQ,IAAI,mBAAmB;QACpDvC,WAAW,EAAE;MACf,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAnB,QAAQ,CAAC,0BAA0B,CAAC;MACpCF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACR,MAAM,EAAEC,QAAQ,CAACkE,KAAK,EAAE9C,uBAAuB,EAAEoC,4BAA4B,CAAC,CAAC;;EAEnF;EACAlE,SAAS,CAAC,MAAM;IACd,IAAIS,MAAM,EAAE;MACVqB,uBAAuB,CAACrB,MAAM,CAAC;IACjC,CAAC,MAAM,IAAIC,QAAQ,CAACkE,KAAK,IAAIlE,QAAQ,CAACkE,KAAK,CAACT,KAAK,EAAE;MACjDD,4BAA4B,CAACxD,QAAQ,CAACkE,KAAK,CAACT,KAAK,CAAC;IACpD;EACF,CAAC,EAAE,CAACvC,OAAO,EAAEnB,MAAM,EAAEC,QAAQ,CAACkE,KAAK,EAAE9C,uBAAuB,EAAEoC,4BAA4B,CAAC,CAAC;EAE5F,MAAMY,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,IAAI,CAACtD,aAAa,EAAE;QAClB;QACA,MAAMuD,cAAc,GAAG,MAAM9C,KAAK,CAAC,kCAAkC,CAAC;QACtE,MAAM+C,UAAU,GAAG,MAAMD,cAAc,CAAC1C,IAAI,CAAC,CAAC;QAE9C,IAAI2C,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE;UAC3BC,KAAK,CAAC,2CAA2C,CAAC;UAClD;QACF;QAEA,MAAMC,YAAY,GAAGH,UAAU,CAACI,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,UAAU,CAAC,IAAIN,UAAU,CAAC,CAAC,CAAC;QAChFvD,gBAAgB,CAAC0D,YAAY,CAACpD,EAAE,CAAC;;QAEjC;QACA,MAAMwD,UAAU,GAAG3E,WAAW,CAC3B4E,MAAM,CAAC3C,OAAO,IAAIA,OAAO,CAAC4C,SAAS,CAAC,CAAC;QAAA,CACrCC,GAAG,CAAC7C,OAAO,IAAIA,OAAO,CAAC4C,SAAS,CAAC;QACpC,MAAME,eAAe,CAACR,YAAY,CAACpD,EAAE,EAAEwD,UAAU,CAAC;MACpD,CAAC,MAAM;QACL,MAAMA,UAAU,GAAG3E,WAAW,CAC3B4E,MAAM,CAAC3C,OAAO,IAAIA,OAAO,CAAC4C,SAAS,CAAC,CAAC;QAAA,CACrCC,GAAG,CAAC7C,OAAO,IAAIA,OAAO,CAAC4C,SAAS,CAAC;QACpC,MAAME,eAAe,CAACnE,aAAa,EAAE+D,UAAU,CAAC;MAClD;MAEAhE,eAAe,CAAC,KAAK,CAAC;MACtB2D,KAAK,CAAC,mCAAmC,CAAC;IAC5C,CAAC,CAAC,OAAOhE,KAAK,EAAE;MACduB,OAAO,CAACvB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDgE,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;;EAED;EACA,MAAMS,eAAe,GAAG,MAAAA,CAAOC,OAAO,EAAEL,UAAU,KAAK;IACrD,IAAI,CAACA,UAAU,IAAIA,UAAU,CAACN,MAAM,KAAK,CAAC,EAAE;MAC1CC,KAAK,CAAC,wBAAwB,CAAC;MAC/B;IACF;IAEA,MAAMd,QAAQ,GAAG,MAAMnC,KAAK,CAAC,oCAAoC2D,OAAO,mBAAmB,EAAE;MAC3FvB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBoB,QAAQ,EAAEN;MACZ,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAACnB,QAAQ,CAAClC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACjD;EACF,CAAC;EAED,MAAM2D,gBAAgB,GAAGA,CAAA,KAAM;IAC7BzE,aAAa,CAAC,IAAI,CAAC;IACnB0E,UAAU,CAAC,MAAM;MACfC,MAAM,CAACC,KAAK,CAAC,CAAC;MACd5E,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,MAAM6E,sBAAsB,GAAGA,CAAA,KAAM;IACnC;IACA,IAAIC,UAAU,GAAG,mCAAmC;IAEpDvF,WAAW,CAACgC,OAAO,CAACC,OAAO,IAAI;MAC7BJ,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEG,OAAO,CAACA,OAAO,CAAC;MACnDA,OAAO,CAACC,KAAK,CAACF,OAAO,CAACG,IAAI,IAAI;QAC5B;QACA,MAAMqD,WAAW,GAAGvD,OAAO,CAACA,OAAO,CAACwD,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;QACtD,MAAMC,QAAQ,GAAGvD,IAAI,CAACC,IAAI,GAAGD,IAAI,CAACC,IAAI,CAACqD,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE;QAC9D,MAAME,QAAQ,GAAGxD,IAAI,CAACyD,kBAAkB,IAAI,EAAE;QAC9C,MAAMC,IAAI,GAAG1D,IAAI,CAAC0D,IAAI,GAAG1D,IAAI,CAAC0D,IAAI,CAACJ,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE;QAC1D,MAAMK,IAAI,GAAG3D,IAAI,CAAC4D,OAAO,GAAG,MAAM,GAAG,QAAQ;QAE7CR,UAAU,IAAI,GAAGC,WAAW,IAAIE,QAAQ,IAAIC,QAAQ,IAAIE,IAAI,IAAIC,IAAI,IAAI;MAC1E,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,MAAME,UAAU,GAAGC,SAAS,CAAC,8BAA8B,GAAGV,UAAU,CAAC;IACzE,MAAMW,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,YAAY,CAAC,MAAM,EAAEL,UAAU,CAAC;IACrCE,IAAI,CAACG,YAAY,CAAC,UAAU,EAAE,gBAAgB,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAC3FL,QAAQ,CAACxC,IAAI,CAAC8C,WAAW,CAACP,IAAI,CAAC;IAC/BA,IAAI,CAACQ,KAAK,CAAC,CAAC;IACZP,QAAQ,CAACxC,IAAI,CAACgD,WAAW,CAACT,IAAI,CAAC;EACjC,CAAC;EAED,MAAMU,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,EAAC1G,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEwB,WAAW,KAAI,CAAC5B,QAAQ,CAACkE,KAAK,IAAI,CAAClE,QAAQ,CAACkE,KAAK,CAACT,KAAK,EAAE;MACzE,OAAO,CAAC;IACV;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnC,KAAK,CAAC,uCAAuC,EAAE;QACpEoC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBzB,IAAI,EAAElC,WAAW,CAACkC,IAAI;UACtBmB,KAAK,EAAEzD,QAAQ,CAACkE,KAAK,CAACT;QACxB,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAAClC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMwC,IAAI,GAAG,MAAMP,QAAQ,CAAC/B,IAAI,CAAC,CAAC;;MAElC;MACAtB,cAAc,CAAC;QACb,GAAGD,WAAW;QACdiB,EAAE,EAAE4C,IAAI,CAAC5C,EAAE;QACXO,WAAW,EAAE;MACf,CAAC,CAAC;MAEF4C,KAAK,CAAC,+BAA+B,CAAC;IAExC,CAAC,CAAC,OAAOlB,GAAG,EAAE;MACZvB,OAAO,CAACvB,KAAK,CAAC,oBAAoB,EAAE8C,GAAG,CAAC;MACxCkB,KAAK,CAAC,qBAAqB,GAAGlB,GAAG,CAACC,OAAO,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAMwD,oBAAoB,GAAGA,CAACC,YAAY,EAAEC,QAAQ,KAAK;IACvDlF,OAAO,CAACC,GAAG,CAAC,iCAAiCgF,YAAY,WAAWC,QAAQ,EAAE,CAAC;IAE/E9G,cAAc,CAAC+G,QAAQ,IAAI;MACzB,MAAMC,OAAO,GAAGrD,IAAI,CAACsD,KAAK,CAACtD,IAAI,CAACC,SAAS,CAACmD,QAAQ,CAAC,CAAC,CAAC,CAAC;MACtD,MAAM/E,OAAO,GAAGgF,OAAO,CAACH,YAAY,CAAC;;MAErC;MACA,MAAMK,UAAU,GAAGlF,OAAO,CAACC,KAAK,CAAC0C,MAAM,CAACzC,IAAI,IAC1C,CAACA,IAAI,CAACiF,eAAe,IAAIjF,IAAI,CAACC,IAAI,CAACiF,WAAW,CAAC,CAAC,MAAMN,QACxD,CAAC;;MAED;MACA,MAAMO,mBAAmB,GAAGH,UAAU,CAAC9C,MAAM,GAAG,CAAC,IAAI8C,UAAU,CAAC,CAAC,CAAC,CAACI,OAAO;MAC1E,MAAMC,eAAe,GAAG,CAACF,mBAAmB;;MAE5C;MACAzF,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEG,OAAO,CAACA,OAAO,CAAC;MACnDA,OAAO,CAACC,KAAK,CAACF,OAAO,CAACG,IAAI,IAAI;QAC5B,IAAI,CAACA,IAAI,CAACiF,eAAe,IAAIjF,IAAI,CAACC,IAAI,CAACiF,WAAW,CAAC,CAAC,MAAMN,QAAQ,EAAE;UAClE5E,IAAI,CAACoF,OAAO,GAAGC,eAAe;QAChC;MACF,CAAC,CAAC;MAEF,OAAOP,OAAO;IAChB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;IAC9B1H,QAAQ,CAAC,iBAAiB,CAAC;EAC7B,CAAC;;EAED;EACA,MAAM2H,cAAc,GAAGA,CAAA,KAAM;IAC3BzG,UAAU,CAAC0G,IAAI,IAAI,CAACA,IAAI,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMC,qBAAqB,GAAIzF,IAAI,IAAK;IACtC,IAAIA,IAAI,CAAC4D,OAAO,EAAE;MAChB,oBAAOrG,OAAA;QAAMmI,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAClE,CAAC,MAAM;MACL,oBAAOxI,OAAA;QAAMmI,SAAS,EAAC,+BAA+B;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IACtE;EACF,CAAC;EAED,oBACExI,OAAA;IAAKmI,SAAS,EAAE,0BAA0BrH,UAAU,GAAG,UAAU,GAAG,EAAE,IAAI,CAACM,YAAY,GAAG,cAAc,GAAG,EAAE,EAAG;IAAAgH,QAAA,gBAC9GpI,OAAA;MAAKmI,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCpI,OAAA;QAAAoI,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpBhI,WAAW,iBACVR,OAAA;QAAImI,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAE5H,WAAW,CAACkC;MAAI;QAAA2F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACjD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENxI,OAAA;MAAKmI,SAAS,EAAC,+BAA+B;MAAAC,QAAA,gBAC5CpI,OAAA;QAAQmI,SAAS,EAAC,UAAU;QAACM,OAAO,EAAEV,iBAAkB;QAAAK,QAAA,EAAC;MAEzD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETxI,OAAA;QAAKmI,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAC5B5H,WAAW,IAAIA,WAAW,CAACwB,WAAW,iBACrChC,OAAA;UAAQmI,SAAS,EAAC,eAAe;UAACM,OAAO,EAAEvB,QAAS;UAAAkB,QAAA,EAAC;QAErD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT,eAEDxI,OAAA;UACEmI,SAAS,EAAC,cAAc;UACxBM,OAAO,EAAEA,CAAA,KAAMpI,QAAQ,CAAC,kBAAkB,CAAE;UAAA+H,QAAA,EAAC;QAE/C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAGTxI,OAAA;UACEmI,SAAS,EAAE,eAAenH,YAAY,GAAG,QAAQ,GAAG,EAAE,EAAG;UACzDyH,OAAO,EAAEA,CAAA,KAAMxH,eAAe,CAAC,CAACD,YAAY,CAAE;UAAAoH,QAAA,EAC7CpH,YAAY,GAAG,iBAAiB,GAAG;QAAkB;UAAAqH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eAETxI,OAAA;UAAQmI,SAAS,EAAC,WAAW;UAACM,OAAO,EAAEjD,gBAAiB;UAAA4C,QAAA,EAAC;QAEzD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAETxI,OAAA;UAAQmI,SAAS,EAAC,YAAY;UAACM,OAAO,EAAE7C,sBAAuB;UAAAwC,QAAA,EAAC;QAEhE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAETxI,OAAA;UACEmI,SAAS,EAAE,qBAAqB/G,YAAY,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC/DqH,OAAO,EAAEA,CAAA,KAAMpH,eAAe,CAAC,CAACD,YAAY,CAAE;UAAAgH,QAAA,EAE7ChH,YAAY,GAAG,aAAa,GAAG;QAAe;UAAAiH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eAGTxI,OAAA;UACEmI,SAAS,EAAE,mBAAmB7G,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAG;UACxDmH,OAAO,EAAET,cAAe;UAAAI,QAAA,EAEvB9G,OAAO,GAAG,cAAc,GAAG;QAAe;UAAA+G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLlH,OAAO,IAAI,CAACN,YAAY,IAAI,CAACF,UAAU,iBACtCd,OAAA;MAAKmI,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzCpI,OAAA;QAAKmI,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BpI,OAAA;UAAMmI,SAAS,EAAC,6BAA6B;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzDxI,OAAA;UAAAoI,QAAA,EAAM;QAA6B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACNxI,OAAA;QAAKmI,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BpI,OAAA;UAAMmI,SAAS,EAAC,+BAA+B;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC7DxI,OAAA;UAAAoI,QAAA,EAAM;QAA+B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGAxH,YAAY,iBACXhB,OAAA;MAAKmI,SAAS,EAAC,6BAA6B;MAAAC,QAAA,gBAC1CpI,OAAA;QAAAoI,QAAA,EAAG;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACpCxI,OAAA;QAAQmI,SAAS,EAAC,gBAAgB;QAACM,OAAO,EAAEjE,mBAAoB;QAAA4D,QAAA,EAAC;MAEjE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAEA9H,OAAO,gBACNV,OAAA;MAAKmI,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GACpD5H,KAAK,gBACPZ,OAAA;MAAKmI,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAExH;IAAK;MAAAyH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,GAE5CxH,YAAY,gBACVhB,OAAA;MAAKmI,SAAS,EAAC,+BAA+B;MAAAC,QAAA,EAC3C9H,WAAW,CAAC8E,GAAG,CAAC,CAAC7C,OAAO,EAAE6E,YAAY,KACrC7E,OAAO,CAACC,KAAK,IAAID,OAAO,CAACC,KAAK,CAACmC,MAAM,GAAG,CAAC,gBACvC3E,OAAA;QAA2BmI,SAAS,EAAC,6BAA6B;QAAAC,QAAA,gBAChEpI,OAAA;UAAImI,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAE7F,OAAO,CAACA;QAAO;UAAA8F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpDxI,OAAA;UAAKmI,SAAS,EAAC,YAAY;UAAAC,QAAA,GAAE7F,OAAO,CAACC,KAAK,CAACmC,MAAM,EAAC,QAAM;QAAA;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9DxI,OAAA;UAAKmI,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BpI,OAAA;YACEmI,SAAS,EAAC,aAAa;YACvBO,QAAQ,EAAEtB,YAAY,KAAK,CAAE;YAC7BqB,OAAO,EAAEA,CAAA,KAAM;cACb,MAAMlB,OAAO,GAAG,CAAC,GAAGjH,WAAW,CAAC;cAChC,CAACiH,OAAO,CAACH,YAAY,CAAC,EAAEG,OAAO,CAACH,YAAY,GAAG,CAAC,CAAC,CAAC,GAChD,CAACG,OAAO,CAACH,YAAY,GAAG,CAAC,CAAC,EAAEG,OAAO,CAACH,YAAY,CAAC,CAAC;cACpD7G,cAAc,CAACgH,OAAO,CAAC;YACzB,CAAE;YAAAa,QAAA,EACH;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTxI,OAAA;YACEmI,SAAS,EAAC,eAAe;YACzBO,QAAQ,EAAEtB,YAAY,KAAK9G,WAAW,CAACqE,MAAM,GAAG,CAAE;YAClD8D,OAAO,EAAEA,CAAA,KAAM;cACb,MAAMlB,OAAO,GAAG,CAAC,GAAGjH,WAAW,CAAC;cAChC,CAACiH,OAAO,CAACH,YAAY,CAAC,EAAEG,OAAO,CAACH,YAAY,GAAG,CAAC,CAAC,CAAC,GAChD,CAACG,OAAO,CAACH,YAAY,GAAG,CAAC,CAAC,EAAEG,OAAO,CAACH,YAAY,CAAC,CAAC;cACpD7G,cAAc,CAACgH,OAAO,CAAC;YACzB,CAAE;YAAAa,QAAA,EACH;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,GA5BEjG,OAAO,CAACA,OAAO;QAAA8F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA6BpB,CAAC,GACJ,IACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENxI,OAAA;MAAKmI,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAChC9H,WAAW,CAAC8E,GAAG,CAAC,CAAC7C,OAAO,EAAE6E,YAAY,KACrC7E,OAAO,CAACC,KAAK,IAAID,OAAO,CAACC,KAAK,CAACmC,MAAM,GAAG,CAAC,gBACvC3E,OAAA;QAA2BmI,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBACpDpI,OAAA;UAAImI,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAE7F,OAAO,CAACA;QAAO;UAAA8F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpDxI,OAAA;UAAImI,SAAS,EAAC,eAAe;UAAAC,QAAA,EAE1B,CAAC,MAAM;YACN;YACA,MAAMO,YAAY,GAAG,CAAC,CAAC;YACvBxG,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEG,OAAO,CAACA,OAAO,CAAC;YAEnDA,OAAO,CAACC,KAAK,CAACF,OAAO,CAACG,IAAI,IAAI;cAC5B,MAAMmG,GAAG,GAAGnG,IAAI,CAACiF,eAAe,IAAIjF,IAAI,CAACC,IAAI,CAACiF,WAAW,CAAC,CAAC;cAE3D,IAAI,CAACgB,YAAY,CAACC,GAAG,CAAC,EAAE;gBACtB;gBACAD,YAAY,CAACC,GAAG,CAAC,GAAG;kBAClBlG,IAAI,EAAED,IAAI,CAACC,IAAI;kBACfgF,eAAe,EAAEkB,GAAG;kBACpBf,OAAO,EAAEpF,IAAI,CAACoF,OAAO,IAAI,KAAK;kBAC9BgB,UAAU,EAAEpG,IAAI,CAACoG,UAAU,IAAI,EAAE;kBACjC1C,IAAI,EAAE1D,IAAI,CAAC0D,IAAI,IAAI,EAAE;kBACrB2C,iBAAiB,EAAErG,IAAI,CAACqG,iBAAiB,IAAI,CAAC;kBAC9C5C,kBAAkB,EAAEzD,IAAI,CAACyD,kBAAkB,IAAI,EAAE;kBACjD6C,kBAAkB,EAAEtG,IAAI,CAACsG,kBAAkB,IAAI,KAAK;kBACpD1C,OAAO,EAAE5D,IAAI,CAAC4D,OAAO,IAAI,KAAK;kBAC9B2C,WAAW,EAAEvG,IAAI,CAACuG,WAAW,IAAI,IAAI;kBACrC;kBACAjG,IAAI,EAAEN,IAAI,CAACM,IAAI,IAAI,EAAE;kBACrBC,UAAU,EAAEP,IAAI,CAACO,UAAU,IAAI,EAAE;kBACjCC,qBAAqB,EAAER,IAAI,CAACQ,qBAAqB,IAAI,EAAE,CAAE;gBAC3D,CAAC;cACH,CAAC,MAAM;gBACL;gBACA,IAAIR,IAAI,CAACoF,OAAO,EAAE;kBAChBc,YAAY,CAACC,GAAG,CAAC,CAACf,OAAO,GAAG,IAAI;gBAClC;;gBAEA;gBACA,IAAIpF,IAAI,CAAC4D,OAAO,EAAE;kBAChBsC,YAAY,CAACC,GAAG,CAAC,CAACvC,OAAO,GAAG,IAAI;kBAChCsC,YAAY,CAACC,GAAG,CAAC,CAACI,WAAW,GAAGvG,IAAI,CAACuG,WAAW;gBAClD;;gBAEA;gBACA,IAAIvG,IAAI,CAACoG,UAAU,IAAIpG,IAAI,CAACoG,UAAU,CAAClE,MAAM,EAAE;kBAC7C,IAAI,CAACgE,YAAY,CAACC,GAAG,CAAC,CAACC,UAAU,EAAE;oBACjCF,YAAY,CAACC,GAAG,CAAC,CAACC,UAAU,GAAG,EAAE;kBACnC;kBACA;kBACApG,IAAI,CAACoG,UAAU,CAACvG,OAAO,CAAC2G,GAAG,IAAI;oBAC7B,IAAI,CAACN,YAAY,CAACC,GAAG,CAAC,CAACC,UAAU,CAACK,IAAI,CACpCC,WAAW,IAAIA,WAAW,CAACC,SAAS,KAAKH,GAAG,CAACG,SAAS,IACpDD,WAAW,CAACE,aAAa,KAAKJ,GAAG,CAACI,aAAa,CAAC,EAAE;sBACpDV,YAAY,CAACC,GAAG,CAAC,CAACC,UAAU,CAACS,IAAI,CAACL,GAAG,CAAC;oBACxC;kBACF,CAAC,CAAC;gBACJ;cACF;YACF,CAAC,CAAC;;YAEF;YACA,OAAOM,MAAM,CAACC,OAAO,CAACb,YAAY,CAAC,CAACvD,GAAG,CAAC,CAAC,CAACwD,GAAG,EAAEa,KAAK,CAAC,EAAEC,UAAU,kBAC/D1J,OAAA;cAEEmI,SAAS,EAAE,gBAAgBsB,KAAK,CAAC5B,OAAO,GAAG,SAAS,GAAG,EAAE,EAAG;cAAAO,QAAA,eAE5DpI,OAAA;gBAAOmI,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,gBACnCpI,OAAA;kBACEoG,IAAI,EAAC,UAAU;kBACf+B,SAAS,EAAC,wBAAwB;kBAClCN,OAAO,EAAE4B,KAAK,CAAC5B,OAAO,IAAI,KAAM;kBAChC8B,QAAQ,EAAEA,CAAA,KAAMxC,oBAAoB,CAACC,YAAY,EAAEwB,GAAG;gBAAE;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzD,CAAC,eACFxI,OAAA;kBAAMmI,SAAS,EAAC;gBAAoB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC5CxI,OAAA;kBAAKmI,SAAS,EAAC,cAAc;kBAAAC,QAAA,gBAC3BpI,OAAA;oBAAMmI,SAAS,EAAC,WAAW;oBAAAC,QAAA,GACxBqB,KAAK,CAAC/G,IAAI,IAAI,cAAc,EAC5BpB,OAAO,IAAI4G,qBAAqB,CAACuB,KAAK,CAAC;kBAAA;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACpC,CAAC,EAENpH,YAAY,gBACXpB,OAAA;oBAAKmI,SAAS,EAAC,iBAAiB;oBAAAC,QAAA,EAC7BqB,KAAK,CAACZ,UAAU,IAAIY,KAAK,CAACZ,UAAU,CAAClE,MAAM,GAAG,CAAC,GAC9C8E,KAAK,CAACZ,UAAU,CAACzD,GAAG,CAAC,CAAC6D,GAAG,EAAEW,MAAM,kBAC/B5J,OAAA;sBAAkBmI,SAAS,EAAC,gBAAgB;sBAAAC,QAAA,gBAE1CpI,OAAA;wBAAMmI,SAAS,EAAC,gBAAgB;wBAAAC,QAAA,EAAEa,GAAG,CAACI;sBAAa;wBAAAhB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAO,CAAC,EAG1D,CAACiB,KAAK,CAAC1G,IAAI,IAAI0G,KAAK,CAACzG,UAAU,IAAIyG,KAAK,CAACxG,qBAAqB,kBAC7DjD,OAAA;wBAAMmI,SAAS,EAAC,eAAe;wBAAAC,QAAA,GAC5BqB,KAAK,CAAC1G,IAAI,iBAAI/C,OAAA;0BAAMmI,SAAS,EAAC,WAAW;0BAAAC,QAAA,EAAEqB,KAAK,CAAC1G;wBAAI;0BAAAsF,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAO,CAAC,EAC7DiB,KAAK,CAACzG,UAAU,iBACfhD,OAAA;0BAAMmI,SAAS,EAAC,iBAAiB;0BAAAC,QAAA,GAC9BqB,KAAK,CAAC1G,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE0G,KAAK,CAACzG,UAAU;wBAAA;0BAAAqF,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACrC,CACP,EACAiB,KAAK,CAACxG,qBAAqB,iBAC1BjD,OAAA;0BAAMmI,SAAS,EAAC,kBAAkB;0BAAAC,QAAA,GAC9BqB,KAAK,CAAC1G,IAAI,IAAI0G,KAAK,CAACzG,UAAU,GAAI,IAAI,GAAG,EAAE,EAC5CyG,KAAK,CAACxG,qBAAqB;wBAAA;0BAAAoF,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACxB,CACP;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACG,CACP,EAGAS,GAAG,CAACY,MAAM,iBACT7J,OAAA;wBAAMmI,SAAS,EAAC,iBAAiB;wBAAAC,QAAA,GAAC,OAAK,EAACa,GAAG,CAACY,MAAM;sBAAA;wBAAAxB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAO,CAC1D;oBAAA,GAzBOoB,MAAM;sBAAAvB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OA0BX,CACN,CAAC;oBAAA;oBAEF;oBACAxI,OAAA;sBAAMmI,SAAS,EAAC,eAAe;sBAAAC,QAAA,GAC5BqB,KAAK,CAACvD,kBAAkB,KACtBuD,KAAK,CAACX,iBAAiB,IAAIW,KAAK,CAACtD,IAAI,GACpC,GAAGsD,KAAK,CAACX,iBAAiB,IAAIW,KAAK,CAACtD,IAAI,EAAE,GAAG,EAAE,CAAC,EAGnD,CAACsD,KAAK,CAAC1G,IAAI,IAAI0G,KAAK,CAACzG,UAAU,IAAIyG,KAAK,CAACxG,qBAAqB,kBAC7DjD,OAAA;wBAAMmI,SAAS,EAAC,eAAe;wBAAAC,QAAA,GAC5BqB,KAAK,CAAC1G,IAAI,iBAAI/C,OAAA;0BAAMmI,SAAS,EAAC,WAAW;0BAAAC,QAAA,EAAEqB,KAAK,CAAC1G;wBAAI;0BAAAsF,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAO,CAAC,EAC7DiB,KAAK,CAACzG,UAAU,iBACfhD,OAAA;0BAAMmI,SAAS,EAAC,iBAAiB;0BAAAC,QAAA,GAC9BqB,KAAK,CAAC1G,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE0G,KAAK,CAACzG,UAAU;wBAAA;0BAAAqF,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACrC,CACP,EACAiB,KAAK,CAACxG,qBAAqB,iBAC1BjD,OAAA;0BAAMmI,SAAS,EAAC,kBAAkB;0BAAAC,QAAA,GAC9BqB,KAAK,CAAC1G,IAAI,IAAI0G,KAAK,CAACzG,UAAU,GAAI,IAAI,GAAG,EAAE,EAC5CyG,KAAK,CAACxG,qBAAqB;wBAAA;0BAAAoF,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACxB,CACP;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACG,CACP;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACG;kBACP;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE,CAAC;kBAAA;kBAEN;kBACAxI,OAAA;oBAAMmI,SAAS,EAAC,eAAe;oBAAAC,QAAA,EAC5BqB,KAAK,CAACvD,kBAAkB,IAAI;kBAAE;oBAAAmC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC3B,CACP;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD;YAAC,GAnFH,GAAGjG,OAAO,CAACA,OAAO,IAAIqG,GAAG,IAAIc,UAAU,EAAE;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAoF5C,CACL,CAAC;UACJ,CAAC,EAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA,GArJGjG,OAAO,CAACA,OAAO;QAAA8F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAsJpB,CAAC,GACJ,IACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAER;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtI,EAAA,CAlnBQD,eAAe;EAAA,QACHL,SAAS,EACXC,WAAW,EACXC,WAAW;AAAA;AAAAgK,EAAA,GAHrB7J,eAAe;AAonBxB,eAAeA,eAAe;AAAC,IAAA6J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}