{"ast":null,"code":"var _jsxFileName = \"G:\\\\GroceriesProject\\\\Kitchenapp\\\\frontend\\\\src\\\\pages\\\\RecipeTreeView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeTreeView({\n  recipe,\n  initialExpanded = false,\n  level = 0,\n  visitedIds = new Set()\n}) {\n  _s();\n  const [expanded, setExpanded] = useState(initialExpanded);\n  const [subRecipeData, setSubRecipeData] = useState({});\n  const [loadingSubRecipes, setLoadingSubRecipes] = useState({});\n\n  // Prevent infinite recursion by checking if we've already visited this recipe\n  if (recipe && recipe.id && visitedIds.has(recipe.id)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-tree-node recursive-warning\",\n      style: {\n        marginLeft: `${level * 16}px`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-tree-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"recipe-tree-warning\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"recipe-tree-name\",\n          children: [recipe.name, \" (recursive reference)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Add this ID to visited set for child components\n  const newVisitedIds = new Set(visitedIds);\n  if (recipe && recipe.id) {\n    newVisitedIds.add(recipe.id);\n  }\n\n  // Memoize fetchSubRecipe to prevent infinite loop in useEffect\n  const fetchSubRecipe = useCallback(async subRecipeId => {\n    if (loadingSubRecipes[subRecipeId]) return;\n    setLoadingSubRecipes(prev => ({\n      ...prev,\n      [subRecipeId]: true\n    }));\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/recipes/${subRecipeId}`);\n      const data = await response.json();\n      setSubRecipeData(prev => ({\n        ...prev,\n        [subRecipeId]: data\n      }));\n    } catch (error) {\n      console.error(`Error loading sub-recipe ${subRecipeId}:`, error);\n    } finally {\n      setLoadingSubRecipes(prev => ({\n        ...prev,\n        [subRecipeId]: false\n      }));\n    }\n  }, [loadingSubRecipes]);\n  useEffect(() => {\n    // If expanded initially, load any immediate sub-recipes\n    if (initialExpanded && recipe && recipe.components) {\n      recipe.components.forEach(component => {\n        if (component.sub_recipe && component.sub_recipe.id) {\n          fetchSubRecipe(component.sub_recipe.id);\n        }\n      });\n    }\n  }, [initialExpanded, recipe, fetchSubRecipe]);\n  const toggleExpand = () => {\n    setExpanded(!expanded);\n\n    // If expanding and we have sub-recipes to load, fetch them\n    if (!expanded && recipe && recipe.components) {\n      recipe.components.forEach(component => {\n        if (component.sub_recipe && component.sub_recipe.id && !subRecipeData[component.sub_recipe.id]) {\n          fetchSubRecipe(component.sub_recipe.id);\n        }\n      });\n    }\n  };\n  if (!recipe) return null;\n\n  // Determine if this recipe has sub-recipes\n  const hasSubRecipes = recipe.components && recipe.components.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-tree-node\",\n    style: {\n      marginLeft: `${level * 16}px`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `recipe-tree-header ${hasSubRecipes ? 'has-children' : ''}`,\n      onClick: hasSubRecipes ? toggleExpand : undefined,\n      children: [hasSubRecipes && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"recipe-tree-toggle\",\n        children: expanded ? '▼' : '►'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"recipe-tree-name\",\n        children: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-tree-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-tree-ingredients\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Ingredients:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: recipe.ingredients && recipe.ingredients.map((ingredient, idx) => {\n            var _ingredient$ingredien;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [ingredient.quantity, \" \", ingredient.unit, \" \", ((_ingredient$ingredien = ingredient.ingredient) === null || _ingredient$ingredien === void 0 ? void 0 : _ingredient$ingredien.name) || \"N/A\"]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), hasSubRecipes && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-tree-sub-recipes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Sub-recipes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), recipe.components.map((component, idx) => {\n          var _component$sub_recipe, _component$sub_recipe2, _component$sub_recipe4;\n          const subRecipe = subRecipeData[(_component$sub_recipe = component.sub_recipe) === null || _component$sub_recipe === void 0 ? void 0 : _component$sub_recipe.id];\n          const isLoading = loadingSubRecipes[(_component$sub_recipe2 = component.sub_recipe) === null || _component$sub_recipe2 === void 0 ? void 0 : _component$sub_recipe2.id];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-tree-sub-recipe\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-tree-sub-recipe-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recipe-tree-quantity\",\n                children: component.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 23\n              }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recipe-tree-loading\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 25\n              }, this) : subRecipe ? /*#__PURE__*/_jsxDEV(RecipeTreeView, {\n                recipe: subRecipe,\n                level: level + 1,\n                visitedIds: newVisitedIds\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recipe-tree-load\",\n                onClick: () => {\n                  var _component$sub_recipe3;\n                  return fetchSubRecipe((_component$sub_recipe3 = component.sub_recipe) === null || _component$sub_recipe3 === void 0 ? void 0 : _component$sub_recipe3.id);\n                },\n                children: [(_component$sub_recipe4 = component.sub_recipe) === null || _component$sub_recipe4 === void 0 ? void 0 : _component$sub_recipe4.name, \" (Click to load)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeTreeView, \"MxOV/v8sj5FzGJOMGQ3uB7Rk3G8=\");\n_c = RecipeTreeView;\nexport default RecipeTreeView;\nvar _c;\n$RefreshReg$(_c, \"RecipeTreeView\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","RecipeTreeView","recipe","initialExpanded","level","visitedIds","Set","_s","expanded","setExpanded","subRecipeData","setSubRecipeData","loadingSubRecipes","setLoadingSubRecipes","id","has","className","style","marginLeft","children","fileName","_jsxFileName","lineNumber","columnNumber","name","newVisitedIds","add","fetchSubRecipe","subRecipeId","prev","response","fetch","data","json","error","console","components","forEach","component","sub_recipe","toggleExpand","hasSubRecipes","length","onClick","undefined","ingredients","map","ingredient","idx","_ingredient$ingredien","quantity","unit","_component$sub_recipe","_component$sub_recipe2","_component$sub_recipe4","subRecipe","isLoading","_component$sub_recipe3","_c","$RefreshReg$"],"sources":["G:/GroceriesProject/Kitchenapp/frontend/src/pages/RecipeTreeView.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nfunction RecipeTreeView({ recipe, initialExpanded = false, level = 0, visitedIds = new Set() }) {\r\n  const [expanded, setExpanded] = useState(initialExpanded);\r\n  const [subRecipeData, setSubRecipeData] = useState({});\r\n  const [loadingSubRecipes, setLoadingSubRecipes] = useState({});\r\n  \r\n  // Prevent infinite recursion by checking if we've already visited this recipe\r\n  if (recipe && recipe.id && visitedIds.has(recipe.id)) {\r\n    return (\r\n      <div className=\"recipe-tree-node recursive-warning\" style={{ marginLeft: `${level * 16}px` }}>\r\n        <div className=\"recipe-tree-header\">\r\n          <span className=\"recipe-tree-warning\">⚠️</span>\r\n          <span className=\"recipe-tree-name\">{recipe.name} (recursive reference)</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Add this ID to visited set for child components\r\n  const newVisitedIds = new Set(visitedIds);\r\n  if (recipe && recipe.id) {\r\n    newVisitedIds.add(recipe.id);\r\n  }\r\n\r\n  // Memoize fetchSubRecipe to prevent infinite loop in useEffect\r\n  const fetchSubRecipe = useCallback(async (subRecipeId) => {\r\n    if (loadingSubRecipes[subRecipeId]) return;\r\n\r\n    setLoadingSubRecipes(prev => ({ ...prev, [subRecipeId]: true }));\r\n\r\n    try {\r\n      const response = await fetch(`http://127.0.0.1:5000/api/recipes/${subRecipeId}`);\r\n      const data = await response.json();\r\n      \r\n      setSubRecipeData(prev => ({\r\n        ...prev,\r\n        [subRecipeId]: data\r\n      }));\r\n    } catch (error) {\r\n      console.error(`Error loading sub-recipe ${subRecipeId}:`, error);\r\n    } finally {\r\n      setLoadingSubRecipes(prev => ({ ...prev, [subRecipeId]: false }));\r\n    }\r\n  }, [loadingSubRecipes]);\r\n\r\n  useEffect(() => {\r\n    // If expanded initially, load any immediate sub-recipes\r\n    if (initialExpanded && recipe && recipe.components) {\r\n      recipe.components.forEach((component) => {\r\n        if (component.sub_recipe && component.sub_recipe.id) {\r\n          fetchSubRecipe(component.sub_recipe.id);\r\n        }\r\n      });\r\n    }\r\n  }, [initialExpanded, recipe, fetchSubRecipe]);\r\n\r\n  const toggleExpand = () => {\r\n    setExpanded(!expanded);\r\n\r\n    // If expanding and we have sub-recipes to load, fetch them\r\n    if (!expanded && recipe && recipe.components) {\r\n      recipe.components.forEach((component) => {\r\n        if (\r\n          component.sub_recipe && \r\n          component.sub_recipe.id && \r\n          !subRecipeData[component.sub_recipe.id]\r\n        ) {\r\n          fetchSubRecipe(component.sub_recipe.id);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  if (!recipe) return null;\r\n\r\n  // Determine if this recipe has sub-recipes\r\n  const hasSubRecipes = recipe.components && recipe.components.length > 0;\r\n\r\n  return (\r\n    <div className=\"recipe-tree-node\" style={{ marginLeft: `${level * 16}px` }}>\r\n      <div \r\n        className={`recipe-tree-header ${hasSubRecipes ? 'has-children' : ''}`}\r\n        onClick={hasSubRecipes ? toggleExpand : undefined}\r\n      >\r\n        {hasSubRecipes && (\r\n          <span className=\"recipe-tree-toggle\">\r\n            {expanded ? '▼' : '►'}\r\n          </span>\r\n        )}\r\n        <span className=\"recipe-tree-name\">{recipe.name}</span>\r\n      </div>\r\n\r\n      {expanded && (\r\n        <div className=\"recipe-tree-content\">\r\n          {/* Ingredients */}\r\n          <div className=\"recipe-tree-ingredients\">\r\n            <h5>Ingredients:</h5>\r\n            <ul>\r\n              {recipe.ingredients && recipe.ingredients.map((ingredient, idx) => (\r\n                <li key={idx}>\r\n                  {ingredient.quantity} {ingredient.unit} {ingredient.ingredient?.name || \"N/A\"}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Sub-recipes */}\r\n          {hasSubRecipes && (\r\n            <div className=\"recipe-tree-sub-recipes\">\r\n              <h5>Sub-recipes:</h5>\r\n              {recipe.components.map((component, idx) => {\r\n                const subRecipe = subRecipeData[component.sub_recipe?.id];\r\n                const isLoading = loadingSubRecipes[component.sub_recipe?.id];\r\n\r\n                return (\r\n                  <div key={idx} className=\"recipe-tree-sub-recipe\">\r\n                    <div className=\"recipe-tree-sub-recipe-header\">\r\n                      <span className=\"recipe-tree-quantity\">\r\n                        {component.quantity} \r\n                      </span>\r\n                      {isLoading ? (\r\n                        <span className=\"recipe-tree-loading\">Loading...</span>\r\n                      ) : subRecipe ? (\r\n                        <RecipeTreeView \r\n                          recipe={subRecipe} \r\n                          level={level + 1}\r\n                          visitedIds={newVisitedIds}\r\n                        />\r\n                      ) : (\r\n                        <span \r\n                          className=\"recipe-tree-load\" \r\n                          onClick={() => fetchSubRecipe(component.sub_recipe?.id)}\r\n                        >\r\n                          {component.sub_recipe?.name} (Click to load)\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeTreeView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}