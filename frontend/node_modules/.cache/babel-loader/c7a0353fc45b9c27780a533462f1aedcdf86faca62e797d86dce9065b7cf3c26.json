{"ast":null,"code":"var _jsxFileName = \"G:\\\\GroceriesProject\\\\Kitchenapp\\\\frontend\\\\src\\\\pages\\\\GroceryListView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroceryListView() {\n  _s();\n  const {\n    planId\n  } = useParams(); // For viewing an existing saved plan's groceries\n  const location = useLocation(); // For previewing groceries without saving\n  const navigate = useNavigate();\n  const [groceryList, setGroceryList] = useState([]);\n  const [planDetails, setPlanDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isPrinting, setIsPrinting] = useState(false);\n  useEffect(() => {\n    if (planId) {\n      // If planId is provided, fetch the grocery list for this saved plan\n      fetchGroceryListForPlan(planId);\n    } else if (location.state && location.state.meals) {\n      // If we have meals data in location state, generate grocery list without saving\n      generateGroceryListFromMeals(location.state.meals);\n      setPlanDetails({\n        name: location.state.planName || \"Unnamed Meal Plan\",\n        isTemporary: true\n      });\n    } else {\n      // No plan ID or meals data\n      setError(\"No meal plan data found.\");\n      setLoading(false);\n    }\n  }, [planId, location.state]);\n\n  // In GroceryListView.js\n\n  // Update the fetchGroceryListForPlan function\n  const fetchGroceryListForPlan = async id => {\n    try {\n      setLoading(true);\n\n      // First, fetch plan details\n      const planResponse = await fetch(`http://127.0.0.1:5000/api/weekly_plan/${id}`);\n      if (!planResponse.ok) {\n        throw new Error(\"Failed to fetch plan details\");\n      }\n      const planData = await planResponse.json();\n      setPlanDetails({\n        ...planData,\n        isTemporary: false\n      });\n\n      // Then fetch grocery list\n      const groceryResponse = await fetch(`http://127.0.0.1:5000/api/grocery_list?weekly_plan_id=${id}`);\n      if (!groceryResponse.ok) {\n        throw new Error(\"Failed to fetch grocery list\");\n      }\n      const groceryData = await groceryResponse.json();\n\n      // Sort the grocery list by section order if available\n      const sortedList = groceryData.grocery_list.sort((a, b) => {\n        // Put Uncategorized at the end\n        if (a.section === \"Uncategorized\") return 1;\n        if (b.section === \"Uncategorized\") return -1;\n\n        // Sort by order if available\n        if (a.order !== undefined && b.order !== undefined) {\n          return a.order - b.order;\n        }\n\n        // Fall back to alphabetical order\n        return a.section.localeCompare(b.section);\n      });\n      setGroceryList(sortedList || []);\n      console.log(\"Grocery list data:\", sortedList);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error fetching grocery list:\", err);\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  // Update the generateGroceryListFromMeals function similarly\n  const generateGroceryListFromMeals = async meals => {\n    try {\n      setLoading(true);\n\n      // Generate grocery list from meals array without saving the plan\n      const response = await fetch(`http://127.0.0.1:5000/api/generate_grocery_list`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          meals: meals\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to generate grocery list\");\n      }\n      const data = await response.json();\n\n      // Sort the grocery list by section order if available\n      const sortedList = data.grocery_list.sort((a, b) => {\n        // Put Uncategorized at the end\n        if (a.section === \"Uncategorized\") return 1;\n        if (b.section === \"Uncategorized\") return -1;\n\n        // Sort by order if available\n        if (a.order !== undefined && b.order !== undefined) {\n          return a.order - b.order;\n        }\n\n        // Fall back to alphabetical order\n        return a.section.localeCompare(b.section);\n      });\n      setGroceryList(sortedList || []);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error generating grocery list:\", err);\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  const printGroceryList = () => {\n    setIsPrinting(true);\n    setTimeout(() => {\n      window.print();\n      setIsPrinting(false);\n    }, 100);\n  };\n  const exportGroceryListToCSV = () => {\n    // Create CSV content\n    let csvContent = \"Section,Item,Quantity,Unit\\n\";\n    groceryList.forEach(section => {\n      section.items.forEach(item => {\n        // Clean up the item data and escape any commas\n        const sectionName = section.section.replace(/,/g, \" \");\n        const itemName = item.name ? item.name.replace(/,/g, \" \") : \"\";\n        const quantity = item.quantity || \"\";\n        const unit = item.unit ? item.unit.replace(/,/g, \" \") : \"\";\n        csvContent += `${sectionName},${itemName},${quantity},${unit}\\n`;\n      });\n    });\n\n    // Create a download link and trigger it\n    const encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", `grocery_list_${new Date().toISOString().split('T')[0]}.csv`);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const savePlan = async () => {\n    if (!planDetails.isTemporary || !location.state || !location.state.meals) {\n      return; // Only save if this is a temporary plan\n    }\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/weekly_plan\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: planDetails.name,\n          meals: location.state.meals\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to save weekly plan\");\n      }\n      const data = await response.json();\n\n      // Update the plan details to reflect it's now saved\n      setPlanDetails({\n        ...planDetails,\n        id: data.id,\n        isTemporary: false\n      });\n      alert(\"Meal plan saved successfully!\");\n    } catch (err) {\n      console.error(\"Error saving plan:\", err);\n      alert(\"Error saving plan: \" + err.message);\n    }\n  };\n  const handleCheckboxChange = (sectionIndex, itemIndex) => {\n    setGroceryList(prevList => {\n      const newList = [...prevList];\n      // Toggle the checked state\n      newList[sectionIndex].items[itemIndex].checked = !newList[sectionIndex].items[itemIndex].checked;\n      return newList;\n    });\n  };\n\n  // Go back to weekly planner\n  const goToWeeklyPlanner = () => {\n    navigate(\"/weekly-planner\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `grocery-list-container ${isPrinting ? 'printing' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Grocery List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), planDetails && /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"plan-name\",\n        children: planDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-list-actions no-print\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: goToWeeklyPlanner,\n        children: \"\\u2190 Back to Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [planDetails && planDetails.isTemporary && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-plan-btn\",\n          onClick: savePlan,\n          children: \"Save Meal Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"organize-btn\",\n          onClick: () => navigate('/store-organizer'),\n          children: \"Organize Sections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"print-btn\",\n          onClick: printGroceryList,\n          children: \"Print List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"export-btn\",\n          onClick: exportGroceryListToCSV,\n          children: \"Export to CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading grocery list...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-list-content\",\n      children: groceryList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-list\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No items found in your grocery list.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sections-container\",\n        children: groceryList.map((section, sectionIndex) => section.items && section.items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grocery-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-title\",\n            children: section.section\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"grocery-items\",\n            children: section.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `grocery-item ${item.checked ? 'checked' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"checkbox-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: \"item-checkbox no-print\",\n                  checked: item.checked || false,\n                  onChange: () => handleCheckboxChange(sectionIndex, itemIndex)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"checkmark no-print\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"item-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"item-name\",\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"item-quantity\",\n                    children: item.fraction_str || `${item.quantity} ${item.unit}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 27\n              }, this)\n            }, `${section.section}-${itemIndex}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 21\n          }, this)]\n        }, section.section, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 19\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n_s(GroceryListView, \"bt/KTYDYzYmzbDipFrqdp6mEQwY=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = GroceryListView;\nexport default GroceryListView;\nvar _c;\n$RefreshReg$(_c, \"GroceryListView\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","useNavigate","jsxDEV","_jsxDEV","GroceryListView","_s","planId","location","navigate","groceryList","setGroceryList","planDetails","setPlanDetails","loading","setLoading","error","setError","isPrinting","setIsPrinting","fetchGroceryListForPlan","state","meals","generateGroceryListFromMeals","name","planName","isTemporary","id","planResponse","fetch","ok","Error","planData","json","groceryResponse","groceryData","sortedList","grocery_list","sort","a","b","section","order","undefined","localeCompare","console","log","err","message","response","method","headers","body","JSON","stringify","data","printGroceryList","setTimeout","window","print","exportGroceryListToCSV","csvContent","forEach","items","item","sectionName","replace","itemName","quantity","unit","encodedUri","encodeURI","link","document","createElement","setAttribute","Date","toISOString","split","appendChild","click","removeChild","savePlan","alert","handleCheckboxChange","sectionIndex","itemIndex","prevList","newList","checked","goToWeeklyPlanner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","type","onChange","fraction_str","_c","$RefreshReg$"],"sources":["G:/GroceriesProject/Kitchenapp/frontend/src/pages/GroceryListView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nfunction GroceryListView() {\r\n  const { planId } = useParams(); // For viewing an existing saved plan's groceries\r\n  const location = useLocation(); // For previewing groceries without saving\r\n  const navigate = useNavigate();\r\n\r\n  const [groceryList, setGroceryList] = useState([]);\r\n  const [planDetails, setPlanDetails] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isPrinting, setIsPrinting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (planId) {\r\n      // If planId is provided, fetch the grocery list for this saved plan\r\n      fetchGroceryListForPlan(planId);\r\n    } else if (location.state && location.state.meals) {\r\n      // If we have meals data in location state, generate grocery list without saving\r\n      generateGroceryListFromMeals(location.state.meals);\r\n      setPlanDetails({\r\n        name: location.state.planName || \"Unnamed Meal Plan\",\r\n        isTemporary: true\r\n      });\r\n    } else {\r\n      // No plan ID or meals data\r\n      setError(\"No meal plan data found.\");\r\n      setLoading(false);\r\n    }\r\n  }, [planId, location.state]);\r\n\r\n  // In GroceryListView.js\r\n\r\n  // Update the fetchGroceryListForPlan function\r\n  const fetchGroceryListForPlan = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // First, fetch plan details\r\n      const planResponse = await fetch(`http://127.0.0.1:5000/api/weekly_plan/${id}`);\r\n      if (!planResponse.ok) {\r\n        throw new Error(\"Failed to fetch plan details\");\r\n      }\r\n\r\n      const planData = await planResponse.json();\r\n      setPlanDetails({\r\n        ...planData,\r\n        isTemporary: false\r\n      });\r\n\r\n      // Then fetch grocery list\r\n      const groceryResponse = await fetch(`http://127.0.0.1:5000/api/grocery_list?weekly_plan_id=${id}`);\r\n      if (!groceryResponse.ok) {\r\n        throw new Error(\"Failed to fetch grocery list\");\r\n      }\r\n\r\n      const groceryData = await groceryResponse.json();\r\n\r\n      // Sort the grocery list by section order if available\r\n      const sortedList = groceryData.grocery_list.sort((a, b) => {\r\n        // Put Uncategorized at the end\r\n        if (a.section === \"Uncategorized\") return 1;\r\n        if (b.section === \"Uncategorized\") return -1;\r\n\r\n        // Sort by order if available\r\n        if (a.order !== undefined && b.order !== undefined) {\r\n          return a.order - b.order;\r\n        }\r\n\r\n        // Fall back to alphabetical order\r\n        return a.section.localeCompare(b.section);\r\n      });\r\n\r\n      setGroceryList(sortedList || []);\r\n      console.log(\"Grocery list data:\", sortedList);\r\n      setLoading(false);\r\n\r\n    } catch (err) {\r\n      console.error(\"Error fetching grocery list:\", err);\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update the generateGroceryListFromMeals function similarly\r\n  const generateGroceryListFromMeals = async (meals) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Generate grocery list from meals array without saving the plan\r\n      const response = await fetch(`http://127.0.0.1:5000/api/generate_grocery_list`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          meals: meals\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to generate grocery list\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // Sort the grocery list by section order if available\r\n      const sortedList = data.grocery_list.sort((a, b) => {\r\n        // Put Uncategorized at the end\r\n        if (a.section === \"Uncategorized\") return 1;\r\n        if (b.section === \"Uncategorized\") return -1;\r\n\r\n        // Sort by order if available\r\n        if (a.order !== undefined && b.order !== undefined) {\r\n          return a.order - b.order;\r\n        }\r\n\r\n        // Fall back to alphabetical order\r\n        return a.section.localeCompare(b.section);\r\n      });\r\n\r\n      setGroceryList(sortedList || []);\r\n      setLoading(false);\r\n\r\n    } catch (err) {\r\n      console.error(\"Error generating grocery list:\", err);\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const printGroceryList = () => {\r\n    setIsPrinting(true);\r\n    setTimeout(() => {\r\n      window.print();\r\n      setIsPrinting(false);\r\n    }, 100);\r\n  };\r\n\r\n  const exportGroceryListToCSV = () => {\r\n    // Create CSV content\r\n    let csvContent = \"Section,Item,Quantity,Unit\\n\";\r\n\r\n    groceryList.forEach(section => {\r\n      section.items.forEach(item => {\r\n        // Clean up the item data and escape any commas\r\n        const sectionName = section.section.replace(/,/g, \" \");\r\n        const itemName = item.name ? item.name.replace(/,/g, \" \") : \"\";\r\n        const quantity = item.quantity || \"\";\r\n        const unit = item.unit ? item.unit.replace(/,/g, \" \") : \"\";\r\n\r\n        csvContent += `${sectionName},${itemName},${quantity},${unit}\\n`;\r\n      });\r\n    });\r\n\r\n    // Create a download link and trigger it\r\n    const encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", `grocery_list_${new Date().toISOString().split('T')[0]}.csv`);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const savePlan = async () => {\r\n    if (!planDetails.isTemporary || !location.state || !location.state.meals) {\r\n      return; // Only save if this is a temporary plan\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/api/weekly_plan\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          name: planDetails.name,\r\n          meals: location.state.meals\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to save weekly plan\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // Update the plan details to reflect it's now saved\r\n      setPlanDetails({\r\n        ...planDetails,\r\n        id: data.id,\r\n        isTemporary: false\r\n      });\r\n\r\n      alert(\"Meal plan saved successfully!\");\r\n\r\n    } catch (err) {\r\n      console.error(\"Error saving plan:\", err);\r\n      alert(\"Error saving plan: \" + err.message);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (sectionIndex, itemIndex) => {\r\n    setGroceryList(prevList => {\r\n      const newList = [...prevList];\r\n      // Toggle the checked state\r\n      newList[sectionIndex].items[itemIndex].checked = \r\n        !newList[sectionIndex].items[itemIndex].checked;\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  // Go back to weekly planner\r\n  const goToWeeklyPlanner = () => {\r\n    navigate(\"/weekly-planner\");\r\n  };\r\n\r\n  return (\r\n    <div className={`grocery-list-container ${isPrinting ? 'printing' : ''}`}>\r\n      <div className=\"grocery-list-header\">\r\n        <h1>Grocery List</h1>\r\n        {planDetails && (\r\n          <h2 className=\"plan-name\">{planDetails.name}</h2>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"grocery-list-actions no-print\">\r\n        <button className=\"back-btn\" onClick={goToWeeklyPlanner}>\r\n          ← Back to Planner\r\n        </button>\r\n\r\n        <div className=\"action-buttons\">\r\n          {planDetails && planDetails.isTemporary && (\r\n            <button className=\"save-plan-btn\" onClick={savePlan}>\r\n              Save Meal Plan\r\n            </button>\r\n          )}\r\n\r\n          <button\r\n            className=\"organize-btn\"\r\n            onClick={() => navigate('/store-organizer')}>\r\n            Organize Sections\r\n          </button>\r\n\r\n          <button className=\"print-btn\" onClick={printGroceryList}>\r\n            Print List\r\n          </button>\r\n\r\n          <button className=\"export-btn\" onClick={exportGroceryListToCSV}>\r\n            Export to CSV\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div className=\"loading\">Loading grocery list...</div>\r\n      ) : error ? (\r\n        <div className=\"error-message\">{error}</div>\r\n      ) : (\r\n        <div className=\"grocery-list-content\">\r\n          {groceryList.length === 0 ? (\r\n            <div className=\"empty-list\">\r\n              <p>No items found in your grocery list.</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"sections-container\">\r\n              {groceryList.map((section, sectionIndex) => (\r\n                section.items && section.items.length > 0 ? (\r\n                  <div key={section.section} className=\"grocery-section\">\r\n                    <h3 className=\"section-title\">{section.section}</h3>\r\n                    <ul className=\"grocery-items\">\r\n                      {section.items.map((item, itemIndex) => (\r\n                        <li\r\n                          key={`${section.section}-${itemIndex}`}\r\n                          className={`grocery-item ${item.checked ? 'checked' : ''}`}\r\n                        >\r\n                          <label className=\"checkbox-container\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"item-checkbox no-print\"\r\n                              checked={item.checked || false}\r\n                              onChange={() => handleCheckboxChange(sectionIndex, itemIndex)}\r\n                            />\r\n                            <span className=\"checkmark no-print\"></span>\r\n                            <div className=\"item-details\">\r\n                              <span className=\"item-name\">{item.name}</span>\r\n                              <span className=\"item-quantity\">\r\n                                {item.fraction_str || `${item.quantity} ${item.unit}`}\r\n                              </span>\r\n                            </div>\r\n                          </label>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                ) : null\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroceryListView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}