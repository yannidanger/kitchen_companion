{"ast":null,"code":"var _jsxFileName = \"G:\\\\GroceriesProject\\\\Kitchenapp\\\\frontend\\\\src\\\\pages\\\\RecipeTreeView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// This is a completely rewritten version focused on diagnosing the click issue\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeTreeView({\n  recipe\n}) {\n  _s();\n  const [isExpanded, setIsExpanded] = useState(false);\n  useEffect(() => {\n    // Log when component renders\n    console.log(`RecipeTreeView rendering: ${recipe === null || recipe === void 0 ? void 0 : recipe.name} (ID: ${recipe === null || recipe === void 0 ? void 0 : recipe.id})`);\n  }, [recipe]);\n\n  // Simple toggle function with logging\n  const handleToggleClick = e => {\n    e.stopPropagation(); // Prevent event bubbling\n    console.log(`Toggle clicked for: ${recipe === null || recipe === void 0 ? void 0 : recipe.name} (ID: ${recipe === null || recipe === void 0 ? void 0 : recipe.id})`);\n    setIsExpanded(!isExpanded);\n    console.log(`New expanded state: ${!isExpanded}`);\n  };\n  if (!recipe) {\n    console.log(\"Recipe is null or undefined\");\n    return null;\n  }\n\n  // Check if recipe has sub-recipes\n  const hasSubRecipes = recipe.components && recipe.components.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"debug-recipe-tree-node\",\n    style: {\n      border: '1px dashed #999',\n      padding: '5px',\n      margin: '5px 0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-recipe-header\",\n      style: {\n        padding: '8px',\n        backgroundColor: '#f0f8ff',\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      onClick: handleToggleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginRight: '8px',\n          fontWeight: 'bold',\n          color: 'blue'\n        },\n        children: isExpanded ? '▼' : '►'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [recipe.name, \" (ID: \", recipe.id, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '20px',\n        padding: '10px',\n        border: '1px solid #eee'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ingredients:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: recipe.ingredients && recipe.ingredients.map((ing, idx) => {\n            var _ing$ingredient;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [ing.quantity, \" \", ing.unit, \" \", ((_ing$ingredient = ing.ingredient) === null || _ing$ingredient === void 0 ? void 0 : _ing$ingredient.name) || 'N/A']\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), hasSubRecipes && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Sub-recipes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), recipe.components.map((comp, idx) => {\n          const subRecipe = comp.sub_recipe;\n          if (!subRecipe) return null;\n\n          // Simple circular reference check\n          if (subRecipe.id === recipe.id) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: 'red',\n                margin: '5px 0'\n              },\n              children: [\"\\u26A0\\uFE0F Circular reference: \", subRecipe.name]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: '10px 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [comp.quantity, \" of:\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(RecipeTreeView, {\n              recipe: subRecipe\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeTreeView, \"Pt9BFJk6g6Zfr+NmN7bkLV1oDSM=\");\n_c = RecipeTreeView;\nexport default RecipeTreeView;\nvar _c;\n$RefreshReg$(_c, \"RecipeTreeView\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RecipeTreeView","recipe","_s","isExpanded","setIsExpanded","console","log","name","id","handleToggleClick","e","stopPropagation","hasSubRecipes","components","length","className","style","border","padding","margin","children","backgroundColor","cursor","display","alignItems","onClick","marginRight","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","ingredients","map","ing","idx","_ing$ingredient","quantity","unit","ingredient","comp","subRecipe","sub_recipe","marginBottom","_c","$RefreshReg$"],"sources":["G:/GroceriesProject/Kitchenapp/frontend/src/pages/RecipeTreeView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// This is a completely rewritten version focused on diagnosing the click issue\r\nfunction RecipeTreeView({ recipe }) {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Log when component renders\r\n    console.log(`RecipeTreeView rendering: ${recipe?.name} (ID: ${recipe?.id})`);\r\n  }, [recipe]);\r\n\r\n  // Simple toggle function with logging\r\n  const handleToggleClick = (e) => {\r\n    e.stopPropagation(); // Prevent event bubbling\r\n    console.log(`Toggle clicked for: ${recipe?.name} (ID: ${recipe?.id})`);\r\n    setIsExpanded(!isExpanded);\r\n    console.log(`New expanded state: ${!isExpanded}`);\r\n  };\r\n\r\n  if (!recipe) {\r\n    console.log(\"Recipe is null or undefined\");\r\n    return null;\r\n  }\r\n\r\n  // Check if recipe has sub-recipes\r\n  const hasSubRecipes = recipe.components && recipe.components.length > 0;\r\n\r\n  return (\r\n    <div className=\"debug-recipe-tree-node\" style={{ border: '1px dashed #999', padding: '5px', margin: '5px 0' }}>\r\n      <div \r\n        className=\"debug-recipe-header\"\r\n        style={{ \r\n          padding: '8px', \r\n          backgroundColor: '#f0f8ff', \r\n          cursor: 'pointer',\r\n          display: 'flex',\r\n          alignItems: 'center'\r\n        }}\r\n        onClick={handleToggleClick}\r\n      >\r\n        {/* This span will be clickable to toggle expansion */}\r\n        <span style={{ marginRight: '8px', fontWeight: 'bold', color: 'blue' }}>\r\n          {isExpanded ? '▼' : '►'}\r\n        </span>\r\n        <span>{recipe.name} (ID: {recipe.id})</span>\r\n      </div>\r\n\r\n      {/* Content only visible when expanded */}\r\n      {isExpanded && (\r\n        <div style={{ marginLeft: '20px', padding: '10px', border: '1px solid #eee' }}>\r\n          <div>\r\n            <strong>Ingredients:</strong>\r\n            <ul>\r\n              {recipe.ingredients && recipe.ingredients.map((ing, idx) => (\r\n                <li key={idx}>\r\n                  {ing.quantity} {ing.unit} {ing.ingredient?.name || 'N/A'}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          \r\n          {hasSubRecipes && (\r\n            <div>\r\n              <strong>Sub-recipes:</strong>\r\n              {recipe.components.map((comp, idx) => {\r\n                const subRecipe = comp.sub_recipe;\r\n                \r\n                if (!subRecipe) return null;\r\n                \r\n                // Simple circular reference check\r\n                if (subRecipe.id === recipe.id) {\r\n                  return (\r\n                    <div key={idx} style={{ color: 'red', margin: '5px 0' }}>\r\n                      ⚠️ Circular reference: {subRecipe.name}\r\n                    </div>\r\n                  );\r\n                }\r\n                \r\n                return (\r\n                  <div key={idx} style={{ margin: '10px 0' }}>\r\n                    <div style={{ marginBottom: '5px' }}>\r\n                      <span>{comp.quantity} of:</span>\r\n                    </div>\r\n                    {/* Recursively render sub-recipe */}\r\n                    <RecipeTreeView recipe={subRecipe} />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeTreeView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}