{"ast":null,"code":"var _jsxFileName = \"G:\\\\GroceriesProject\\\\Kitchenapp\\\\frontend\\\\src\\\\components\\\\storeorganizer\\\\sectionGrid.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SectionGrid = ({\n  sections,\n  getIngredientsForSection,\n  getUncategorizedIngredients,\n  selectedIngredients,\n  toggleIngredientSelection,\n  selectAllInSection,\n  removeSection\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Uncategorized\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => selectAllInSection(null),\n          children: \"Select All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ingredient-list\",\n        children: getUncategorizedIngredients().length > 0 ? getUncategorizedIngredients().map(ingredient => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ingredient-item ${selectedIngredients[ingredient.id] ? 'selected' : ''}`,\n          onClick: () => toggleIngredientSelection(ingredient.id),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: !!selectedIngredients[ingredient.id],\n            onChange: () => toggleIngredientSelection(ingredient.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: ingredient.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this)]\n        }, ingredient.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-section\",\n          children: \"No uncategorized ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), sections.map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: section.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => selectAllInSection(section.id),\n            children: \"Select All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-section-btn\",\n            onClick: () => removeSection(section.id),\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ingredient-list\",\n        children: getIngredientsForSection(section.id).length > 0 ? getIngredientsForSection(section.id).map(ingredient => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ingredient-item ${selectedIngredients[ingredient.id] ? 'selected' : ''}`,\n          onClick: () => toggleIngredientSelection(ingredient.id),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: !!selectedIngredients[ingredient.id],\n            onChange: () => toggleIngredientSelection(ingredient.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: ingredient.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 37\n          }, this)]\n        }, ingredient.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-section\",\n          children: \"No ingredients in this section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, section.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = SectionGrid;\nexport default SectionGrid;\nvar _c;\n$RefreshReg$(_c, \"SectionGrid\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SectionGrid","sections","getIngredientsForSection","getUncategorizedIngredients","selectedIngredients","toggleIngredientSelection","selectAllInSection","removeSection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","ingredient","id","type","checked","onChange","name","section","_c","$RefreshReg$"],"sources":["G:/GroceriesProject/Kitchenapp/frontend/src/components/storeorganizer/sectionGrid.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst SectionGrid = ({\r\n    sections,\r\n    getIngredientsForSection,\r\n    getUncategorizedIngredients,\r\n    selectedIngredients,\r\n    toggleIngredientSelection,\r\n    selectAllInSection,\r\n    removeSection\r\n}) => {\r\n    return (\r\n        <div className=\"section-grid\">\r\n            {/* Uncategorized Section */}\r\n            <div className=\"section-card\">\r\n                <div className=\"section-header\">\r\n                    <h3>Uncategorized</h3>\r\n                    <button onClick={() => selectAllInSection(null)}>\r\n                        Select All\r\n                    </button>\r\n                </div>\r\n                <div className=\"ingredient-list\">\r\n                    {getUncategorizedIngredients().length > 0 ? (\r\n                        getUncategorizedIngredients().map(ingredient => (\r\n                            <div\r\n                                key={ingredient.id}\r\n                                className={`ingredient-item ${selectedIngredients[ingredient.id] ? 'selected' : ''}`}\r\n                                onClick={() => toggleIngredientSelection(ingredient.id)}\r\n                            >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={!!selectedIngredients[ingredient.id]}\r\n                                    onChange={() => toggleIngredientSelection(ingredient.id)}\r\n                                />\r\n                                <span>{ingredient.name}</span>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <div className=\"empty-section\">No uncategorized ingredients</div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Regular Sections */}\r\n            {sections.map(section => (\r\n                <div className=\"section-card\" key={section.id}>\r\n                    <div className=\"section-header\">\r\n                        <h3>{section.name}</h3>\r\n                        <div className=\"section-actions\">\r\n                            <button onClick={() => selectAllInSection(section.id)}>\r\n                                Select All\r\n                            </button>\r\n                            <button\r\n                                className=\"remove-section-btn\"\r\n                                onClick={() => removeSection(section.id)}\r\n                            >\r\n                                âœ•\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ingredient-list\">\r\n                        {getIngredientsForSection(section.id).length > 0 ? (\r\n                            getIngredientsForSection(section.id).map(ingredient => (\r\n                                <div\r\n                                    key={ingredient.id}\r\n                                    className={`ingredient-item ${selectedIngredients[ingredient.id] ? 'selected' : ''}`}\r\n                                    onClick={() => toggleIngredientSelection(ingredient.id)}\r\n                                >\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={!!selectedIngredients[ingredient.id]}\r\n                                        onChange={() => toggleIngredientSelection(ingredient.id)}\r\n                                    />\r\n                                    <span>{ingredient.name}</span>\r\n                                </div>\r\n                            ))\r\n                        ) : (\r\n                            <div className=\"empty-section\">No ingredients in this section</div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SectionGrid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}